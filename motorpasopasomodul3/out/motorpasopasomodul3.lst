
misProgramas/motorpasopasomodul3/out/motorpasopasomodul3.elf:     file format elf32-littlearm
misProgramas/motorpasopasomodul3/out/motorpasopasomodul3.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a0006d1

Program Header:
0x70000001 off    0x00017c4c vaddr 0x1a007c4c paddr 0x1a007c4c align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**16
         filesz 0x000000b4 memsz 0x00000b28 flags rw-
    LOAD off    0x00010000 vaddr 0x1a000000 paddr 0x1a000000 align 2**16
         filesz 0x00007c54 memsz 0x00007c54 flags rwx
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x1a007c54 align 2**16
         filesz 0x000009f4 memsz 0x000009f4 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007c48  1a000000  1a000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000009f4  10000000  1a007c54  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
  6 .bss          00000130  100009f8  100009f8  000009f8  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
 11 .init_array   00000004  1a007c48  1a007c48  00017c48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ARM.exidx    00000008  1a007c4c  1a007c4c  00017c4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .uninit_RESERVED 00000000  10000000  10000000  000209f4  2**2
                  CONTENTS
 14 .noinit_RAM2  00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
 15 .noinit_RAM3  00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
 16 .noinit_RAM4  00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
 17 .noinit_RAM5  00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
 18 .noinit       00000000  10000b28  10000b28  000209f4  2**2
                  CONTENTS
 19 .debug_info   00024379  00000000  00000000  000209f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00004a6b  00000000  00000000  00044d6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_aranges 000009b8  00000000  00000000  000497d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 000009b8  00000000  00000000  0004a190  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_macro  0000dbb0  00000000  00000000  0004ab48  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_line   000126cb  00000000  00000000  000586f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_str    00027c05  00000000  00000000  0006adc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .comment      00000068  00000000  00000000  000929c8  2**0
                  CONTENTS, READONLY
 27 .ARM.attributes 00000032  00000000  00000000  00092a30  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00002718  00000000  00000000  00092a64  2**2
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_loc    0000706f  00000000  00000000  0009517c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
100009f8 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a007c48 l    d  .init_array	00000000 .init_array
1a007c4c l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
10000b28 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 armv7m_startup.c
00000000 l    df *ABS*	00000000 vendor_interrupt.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 paso_bobinas.c
00000000 l    df *ABS*	00000000 tecla.c
1a0003b4 l     F .text	0000000a botonPresionado
1a0003be l     F .text	0000000a botonLiberado
00000000 l    df *ABS*	00000000 secuencia_giro.c
10000a00 l     O .bss	00000018 delayTiempoEnsayo
10000a18 l     O .bss	00000018 delayTiempoGiro
10000a30 l     O .bss	00000018 delayTiempoGiroinverso
10000a48 l     O .bss	00000001 estadoBobinas
10000a49 l     O .bss	00000001 estadoProximo
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 system.c
10000a50 l     O .bss	00000004 heap_end.5864
00000000 l    df *ABS*	00000000 board.c
1a000824 l     F .text	00000044 Board_LED_Init
1a000868 l     F .text	00000040 Board_TEC_Init
1a0008a8 l     F .text	00000040 Board_GPIO_Init
1a0008e8 l     F .text	00000030 Board_ADC_Init
1a000918 l     F .text	00000038 Board_SPI_Init
1a000950 l     F .text	00000024 Board_I2C_Init
1a007768 l     O .text	00000008 GpioButtons
1a007770 l     O .text	0000000c GpioLeds
1a00777c l     O .text	00000012 GpioPorts
00000000 l    df *ABS*	00000000 board_sysinit.c
1a007794 l     O .text	00000004 InitClkStates
1a007798 l     O .text	00000074 pinmuxing
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a000ac4 l     F .text	0000002c Chip_UART_GetIndex
1a00780c l     O .text	00000008 UART_BClock
1a007814 l     O .text	00000008 UART_PClock
00000000 l    df *ABS*	00000000 adc_18xx_43xx.c
1a000c20 l     F .text	00000014 Chip_ADC_GetClockIndex
1a000c34 l     F .text	00000032 getClkDiv
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a000dec l     F .text	000000a0 pll_calc_divs
1a000e8c l     F .text	0000010c pll_get_frac
1a000f98 l     F .text	0000004c Chip_Clock_FindBaseClock
1a00120c l     F .text	00000022 Chip_Clock_GetDivRate
10000a54 l     O .bss	00000008 audio_usb_pll_freq
1a007828 l     O .text	0000006c periph_to_base
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a007894 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 ssp_18xx_43xx.c
1a00151c l     F .text	00000014 Chip_SSP_GetClockIndex
1a001530 l     F .text	00000018 Chip_SSP_GetPeriphClockIndex
00000000 l    df *ABS*	00000000 i2c_18xx_43xx.c
10000000 l     O .data	00000038 i2c
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 sapi_cyclesCounter.c
10000038 l     O .data	00000004 ClockSpeed
00000000 l    df *ABS*	00000000 sapi_tick.c
10000a5c l     O .bss	00000004 callBackFuncParams
10000a60 l     O .bss	00000008 tickCounter
10000a68 l     O .bss	00000004 tickHookFunction
00000000 l    df *ABS*	00000000 sapi_adc.c
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a001880 l     F .text	00000034 gpioObtainPinInit
00000000 l    df *ABS*	00000000 sapi_usb_device.c
10000a6c l     O .bss	00000004 g_hUsb
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 vfprintf.c
1a0046b4 l     F .text	00000084 __sbprintf
1a007a08 l     O .text	00000010 blanks.8693
1a007a18 l     O .text	00000010 zeroes.8694
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
1a004808 l     F .text	00000124 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1a00592c l     F .text	00000050 std
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
1a007b28 l     O .text	0000000c p05.7442
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_frexp.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
1a0072d4 l     F .text	00000076 __sprint_r.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000050 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
1a007c4c l       .init_array	00000000 __init_array_end
1a007c48 l       .bss_RAM5	00000000 __preinit_array_end
1a007c48 l       .init_array	00000000 __init_array_start
1a007c48 l       .bss_RAM5	00000000 __preinit_array_start
1a0076cc g     F .text	0000002c .hidden __aeabi_dcmpun
1a001030 g     F .text	0000001c Chip_Clock_GetDividerSource
1a000770 g     F .text	00000012 _isatty_r
1a0024c4 g     F .text	00000012 .hidden __aeabi_dcmple
1a0001ba  w    F .text	00000002 TIMER2_IRQHandler
1a002400 g     F .text	0000007a .hidden __cmpdf2
1a000782 g     F .text	0000000a _lseek_r
1a000184  w    F .text	00000002 DebugMon_Handler
1a0001ba  w    F .text	00000002 RIT_IRQHandler
1a000ccc g     F .text	00000016 Chip_ADC_DeInit
1a080000 g       *ABS*	00000000 __top_MFlashA512
1a002400 g     F .text	0000007a .hidden __eqdf2
1a0001ba  w    F .text	00000002 ADCHS_IRQHandler
1a000114 g       .text	00000000 __section_table_start
10000ac8 g     O .bss	00000018 Tiempolectura
1a0001ba  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a001f70 g     F .text	0000005a .hidden __floatdidf
1a0001ba  w    F .text	00000002 I2C0_IRQHandler
1a002a20 g     F .text	00000028 printf
1a000a0a g     F .text	00000008 __stdio_init
10000b04 g     O .bss	00000001 __lock___atexit_recursive_mutex
1a00767c g     F .text	00000034 _wcrtomb_r
1a001bf8 g     F .text	0000003e delayRead
1a007238 g     F .text	00000020 __sseek
1a005988 g     F .text	00000054 __sinit
1a000610 g     F .text	0000001c inicializar_lectura_analogica
1a0075cc g     F .text	000000b0 __swbuf_r
1a00017a  w    F .text	00000002 HardFault_Handler
10000a4b g     O .bss	00000001 estadolectura
1a000000 g       *ABS*	00000000 __vectors_start__
1a000d94 g     F .text	0000000c Chip_ADC_SetResolution
1a0067dc g     F .text	0000000c __malloc_unlock
1a0003e4 g     F .text	0000009c actualizar_tecla
1a001740 g     F .text	0000002c SysTick_Handler
10000b08 g     O .bss	00000001 __lock___arc4random_mutex
1a0006cc  w    F .text	00000002 initialise_monitor_handles
1a0001ba  w    F .text	00000002 SDIO_IRQHandler
1a0009ac g     F .text	0000001c Board_UARTGetChar
1a0001ba  w    F .text	00000002 ATIMER_IRQHandler
1a006700 g     F .text	000000ce memmove
1a000186  w    F .text	00000002 PendSV_Handler
1a000178  w    F .text	00000002 NMI_Handler
1a0067e8 g     F .text	0000004c _Balloc
1a007c54 g       .ARM.exidx	00000000 __exidx_end
1a000150 g       .text	00000000 __data_section_table_end
10000a4c g     O .bss	00000002 muestra
1a0001ba  w    F .text	00000002 I2C1_IRQHandler
1a0001ba  w    F .text	00000002 UART1_IRQHandler
1a0023f0 g     F .text	0000008a .hidden __gtdf2
1a0001ba  w    F .text	00000002 GPIO5_IRQHandler
1a0001ba  w    F .text	00000002 CAN1_IRQHandler
1a000766 g     F .text	0000000a _fstat_r
53ff71be g       *ABS*	00000000 __valid_user_code_checksum
1a007c54 g       .ARM.exidx	00000000 _etext
1a00248c g     F .text	00000010 .hidden __aeabi_cdcmple
1a0001ba  w    F .text	00000002 USB1_IRQHandler
1a0004e4 g     F .text	0000010c actualizar_bobinas_MEF
1a0001ba  w    F .text	00000002 I2S0_IRQHandler
1a0001ba  w    F .text	00000002 TIMER3_IRQHandler
1a0012ae g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a0001ba  w    F .text	00000002 UART0_IRQHandler
1a0001a8 g     F .text	00000012 bss_init
1a00284c g     F .text	00000134 memcpy
1a00247c g     F .text	00000020 .hidden __aeabi_cdrcmple
1a0001ba  w    F .text	00000002 SGPIO_IRQHandler
1a00597c g     F .text	0000000c _cleanup_r
1a001ef8 g     F .text	00000022 .hidden __floatsidf
1a0023f8 g     F .text	00000082 .hidden __ltdf2
1a002500 g     F .text	00000000 .hidden __aeabi_uldivmod
10000b28 g       .noinit	00000000 _noinit
10000afc g     O .bss	00000004 SystemCoreClock
1a000af0 g     F .text	00000054 Chip_UART_Init
1a0001ba  w    F .text	00000002 ADC0_IRQHandler
1a000c74 g     F .text	00000018 readAdcVal
1a007a60 g     O .text	000000c8 __mprec_tens
1a000180  w    F .text	00000002 UsageFault_Handler
1a001360 g     F .text	0000004c Chip_Clock_GetRate
10000ae0 g     O .bss	00000018 tiempoMuestra
1a0001ba  w    F .text	00000002 GPIO6_IRQHandler
10000aa0 g     O .bss	00000004 __malloc_top_pad
1a000a4c g     F .text	0000006c Board_SetupClocking
20008000 g       *ABS*	00000000 __top_RamAHB32
1a001ed8 g     F .text	0000001e .hidden __aeabi_ui2d
1a005fdc g     F .text	00000008 _localeconv_r
1a006974 g     F .text	00000012 __i2b
1a005c80 g     F .text	00000308 __sfvwrite_r
1a002530 g     F .text	000002d0 .hidden __udivmoddi4
1a001c54 g     F .text	00000000 .hidden __aeabi_drsub
1a000804 g     F .text	00000020 _sbrk_r
1a007764 g     O .text	00000004 ExtRateIn
1a0001ba  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a00078c g     F .text	0000004e _read_r
1a0024b0 g     F .text	00000012 .hidden __aeabi_dcmplt
1a0073c0 g     F .text	000000ce _fclose_r
1a0001ba  w    F .text	00000002 GPIO1_IRQHandler
10000a98 g     O .bss	00000004 __malloc_max_sbrked_mem
1a001f1c g     F .text	00000042 .hidden __extendsfdf2
1a002220 g     F .text	000001d0 .hidden __aeabi_ddiv
1a0001ba  w    F .text	00000002 SSP0_IRQHandler
1a001c60 g     F .text	00000276 .hidden __adddf3
1a007c4c g       .ARM.exidx	00000000 __exidx_start
10000b0c g     O .bss	00000001 __lock___env_recursive_mutex
1a001fcc g     F .text	00000254 .hidden __aeabi_dmul
1a0002fc g     O .text	00000004 CRP_WORD
1a000c66 g     F .text	0000000e setStartMode
10000b10 g     O .bss	00000001 __lock___sinit_recursive_mutex
1a006dfc g     F .text	0000036c _realloc_r
1a002804 g     F .text	00000048 __libc_init_array
1a007530 g     F .text	00000064 _fputwc_r
1a007a38 g     O .text	00000028 __mprec_bigtens
1a00176c g     F .text	000000bc adcInit
1a001ed8 g     F .text	0000001e .hidden __floatunsidf
1a0001ba  w    F .text	00000002 ADC1_IRQHandler
1a006c0c g     F .text	00000038 __mcmp
1a0009c8 g     F .text	00000030 Board_Init
1a00075a  w    F .text	00000002 _init
1a000114 g       .text	00000000 __data_section_table
1a0001ba  w    F .text	00000002 RTC_IRQHandler
10000b28 g       .bss	00000000 _ebss
1a000da0 g     F .text	0000002a Chip_ADC_EnableChannel
1a0001ba  w    F .text	00000002 TIMER0_IRQHandler
1a0006d0 g     F .text	00000088 Reset_Handler
1a0016c4 g     F .text	0000007c tickInit
20010000 g       *ABS*	00000000 __top_RamAHB_ETB16
1a0001ba  w    F .text	00000002 SPI_IRQHandler
1a0068d4 g     F .text	00000040 __hi0bits
1a001614 g     F .text	00000038 Chip_I2C_SetClockRate
1a0076f8 g     F .text	0000004e .hidden __fixdfsi
1a0001ba  w    F .text	00000002 LCD_IRQHandler
1a000fe4 g     F .text	0000004c Chip_Clock_EnableCrystal
10000b14 g     O .bss	00000001 __lock___malloc_recursive_mutex
1a000ce2 g     F .text	00000008 Chip_ADC_ReadValue
10008000 g       *ABS*	00000000 __top_RamLoc32
1a001c60 g     F .text	00000276 .hidden __aeabi_dadd
1a00018a g     F .text	0000001e data_init
1a0023f8 g     F .text	00000082 .hidden __ledf2
1a000d42 g     F .text	00000020 Chip_ADC_SetStartMode
1a006ab8 g     F .text	000000a0 __pow5mult
1a001f60 g     F .text	0000006a .hidden __aeabi_ul2d
1a0001ba  w    F .text	00000002 TIMER1_IRQHandler
1a0015f0 g     F .text	00000024 Chip_I2C_Init
10000ac0 g     O .bss	00000001 fin_tiempo
1a005ff0 g     F .text	00000002 __retarget_lock_release_recursive
1a0001ba  w    F .text	00000002 UART2_IRQHandler
1a0011a0 g     F .text	0000006c Chip_Clock_GetMainPLLHz
1a0078dc g     O .text	000000e6 gpioPinsInit
1a001548 g     F .text	00000012 Chip_SSP_SetClockRate
1a0024ec g     F .text	00000012 .hidden __aeabi_dcmpgt
1a001b32 g     F .text	00000016 gpioToggle
1a0001ba  w    F .text	00000002 GPIO2_IRQHandler
1a0059dc g     F .text	0000000c __sfp_lock_acquire
1a006660 g     F .text	00000000 memchr
1a005a94 g     F .text	000001ec _free_r
1a001828 g     F .text	00000058 adcRead
1a001288 g     F .text	00000026 Chip_Clock_GetBaseClock
1a007594 g     F .text	0000000c __locale_mb_cur_max
1a0024d8 g     F .text	00000012 .hidden __aeabi_dcmpge
100009f8 g       .bss	00000000 _bss
1a000cea g     F .text	00000036 Chip_ADC_ReadStatus
1a000d62 g     F .text	00000032 Chip_ADC_SetSampleRate
1a001c5c g     F .text	0000027a .hidden __aeabi_dsub
10000880 g     O .data	00000004 __malloc_sbrk_base
1a001bd8 g     F .text	00000020 delayInit
1a001f60 g     F .text	0000006a .hidden __floatundidf
1a006b58 g     F .text	000000b2 __lshift
1a0001ba  w    F .text	00000002 I2S1_IRQHandler
1a00155a g     F .text	0000003e Chip_SSP_SetBitRate
1a0013c0 g     F .text	00000002 Chip_GPIO_Init
1a007790 g     O .text	00000004 OscRateIn
1a006988 g     F .text	00000130 __multiply
10000b28 g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a007260 g     F .text	00000072 strncpy
10000a70 g     O .bss	00000028 __malloc_current_mallinfo
1a006d3c g     F .text	000000be __d2b
1a0001ba  w    F .text	00000002 SSP1_IRQHandler
1a000178 g       .text	00000000 __bss_section_table_end
1a00075c g     F .text	0000000a _close_r
1a001ef8 g     F .text	00000022 .hidden __aeabi_i2d
1a0018b4 g     F .text	000001ac gpioInit
1a005fe8 g     F .text	00000002 __retarget_lock_close_recursive
1a004738 g     F .text	000000d0 __swsetup_r
1a002800  w    F .text	00000002 .hidden __aeabi_ldiv0
1a002220 g     F .text	000001d0 .hidden __divdf3
10000478 g     O .data	00000408 __malloc_av_
1a001fcc g     F .text	00000254 .hidden __muldf3
1a0071d4 g     F .text	00000022 __sread
1a000348 g     F .text	00000024 paso_2
1a001b48 g     F .text	0000001c USB0_IRQHandler
1a00132c g     F .text	00000034 Chip_Clock_Disable
1a0001ba  w    F .text	00000002 GPIO3_IRQHandler
1a0067d0 g     F .text	0000000c __malloc_lock
1a000998 g     F .text	00000014 Board_UARTPutChar
1a0001ba  w    F .text	00000002 SCT_IRQHandler
1a0058d0 g     F .text	0000005a _fflush_r
1a007360 g     F .text	0000005e _calloc_r
1a00104c g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a005fec g     F .text	00000002 __retarget_lock_acquire_recursive
1a002980 g     F .text	000000a0 memset
1a00017c  w    F .text	00000002 MemManage_Handler
1a0005f0 g     F .text	00000020 main
10000a9c g     O .bss	00000004 __malloc_max_total_mem
1a005fe4 g     F .text	00000002 __retarget_lock_init_recursive
1a0001ba  w    F .text	00000002 WDT_IRQHandler
2000c000 g       *ABS*	00000000 __top_RamAHB16
1008a000 g       *ABS*	00000000 __top_RamLoc40
1a000182  w    F .text	00000002 SVC_Handler
1a007258 g     F .text	00000008 __sclose
1a004930 g     F .text	00000e54 _dtoa_r
1a0060e4 g     F .text	00000570 _malloc_r
1a0076b0 g     F .text	0000001a __ascii_wctomb
1a001f70 g     F .text	0000005a .hidden __aeabi_l2d
1a0001ba  w    F .text	00000002 GPIO7_IRQHandler
1a0012bc g     F .text	0000003c Chip_Clock_EnableOpts
1a000a02 g     F .text	00000008 __stdio_getchar
1a0059f4 g     F .text	000000a0 _malloc_trim_r
1a001068 g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a001120 g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a00164c g     F .text	00000038 SystemInit
1a0001ba  w    F .text	00000002 SPIFI_IRQHandler
1a0001ba  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a002400 g     F .text	0000007a .hidden __nedf2
1a001a60 g     F .text	0000006a gpioWrite
1a000758  w    F .text	00000002 _fini
1a000c8c g     F .text	00000040 Chip_ADC_Init
10000b00 g     O .bss	00000004 g_pUsbApi
1a000a14 g     F .text	00000038 Board_SetupMuxing
1a000b44 g     F .text	000000dc Chip_UART_SetBaudFDR
1a0016a0 g     F .text	0000000c tickRead
1a0007da g     F .text	00000028 _write_r
10000040 g     O .data	00000008 tickRateMS
1a000dca g     F .text	00000022 Chip_ADC_SetBurstCmd
1a0001ba  w    F .text	00000002 ETH_IRQHandler
10000048 g     O .data	00000004 _impure_ptr
1a005784 g     F .text	0000014a __sflush_r
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a0001ba  w    F .text	00000002 CAN0_IRQHandler
1a0075a0 g     F .text	0000002a __ascii_mbtowc
10000000 g       .data	00000000 _data
10000b28 g       .bss	00000000 _pvHeapStart
1a000178 g       .text	00000000 __section_table_end
1a000390 g     F .text	00000024 paso_4
1a001598 g     F .text	00000038 Chip_SSP_Init
1a0001ba  w    F .text	00000002 GINT0_IRQHandler
100009f8 g     O .bss	00000001 estadoTecla
1a005ff4 g     F .text	0000005c __swhatbuf_r
1a0001ba  w    F .text	00000002 DAC_IRQHandler
1a000974 g     F .text	00000024 Board_Debug_Init
1a00249c g     F .text	00000012 .hidden __aeabi_dcmpeq
1a0009f8 g     F .text	0000000a __stdio_putchar
1a000d20 g     F .text	00000022 Chip_ADC_Int_SetChannelCmd
100009f4 g       .data	00000000 _edata
1a0015d0 g     F .text	00000020 Chip_I2C_EventHandler
1a0001ba  w    F .text	00000002 M0SUB_IRQHandler
1a000480 g     F .text	00000064 inicializar_bobinas_MEF
1a007490 g     F .text	0000009e __fputwc
10000b18 g     O .bss	00000001 __lock___at_quick_exit_mutex
1a0003c8 g     F .text	0000001c inicializar_tecla
1a0013c4 g     F .text	00000158 Chip_SetupCoreClock
1a0071f8 g     F .text	0000003e __swrite
1a0001ba  w    F .text	00000002 GPIO0_IRQHandler
10000884 g     O .data	00000004 __malloc_trim_threshold
1a000000 g     O .text	00000040 g_pfnVectors
1a005f88 g     F .text	00000052 _fwalk_reent
1a0013ac g     F .text	00000014 SystemCoreClockUpdate
1a006c44 g     F .text	000000f8 __mdiff
1a0076f8 g     F .text	0000004e .hidden __aeabi_d2iz
1a0001ba  w    F .text	00000002 DMA_IRQHandler
1a0001ba  w    F .text	00000002 EVRT_IRQHandler
1b080000 g       *ABS*	00000000 __top_MFlashB512
1a0059e8 g     F .text	0000000c __sfp_lock_release
1a007b44 g     O .text	00000101 _ctype_
1a002800  w    F .text	00000002 .hidden __aeabi_idiv0
1a0076cc g     F .text	0000002c .hidden __unorddf2
1a000300 g     F .text	00000024 paso_inicial
1a00017e  w    F .text	00000002 BusFault_Handler
10000b1c g     O .bss	00000001 __lock___dd_hash_mutex
1a006050 g     F .text	00000094 __smakebuf_r
10000b20 g     O .bss	00000001 __lock___tz_mutex
1a002a80 g     F .text	000000dc strlen
1a0012f8 g     F .text	00000034 Chip_Clock_Enable
1a00248c g     F .text	00000010 .hidden __aeabi_cdcmpeq
1a0023f0 g     F .text	0000008a .hidden __gedf2
1a0001ba  w    F .text	00000002 UART3_IRQHandler
1a001c38 g     F .text	0000001c delayWrite
1a0001ba  w    F .text	00000002 MCPWM_IRQHandler
1a00734c g     F .text	00000014 __sprint_r
1a0001ba  w    F .text	00000002 M0APP_IRQHandler
1a001aca g     F .text	00000068 gpioRead
1a001f1c g     F .text	00000042 .hidden __aeabi_f2d
1a00036c g     F .text	00000024 paso_3
1a001b64 g     F .text	00000074 boardInit
10000a4a g     O .bss	00000001 estadoProximo
1a000040 g     O .text	000000d4 g_pfnVendorVectors
1a001c5c g     F .text	0000027a .hidden __subdf3
1a002b60 g     F .text	00001b54 _vfprintf_r
1a0001ba  w    F .text	00000002 GINT1_IRQHandler
1a000324 g     F .text	00000024 paso_1
1a006914 g     F .text	00000060 __lo0bits
1a0016ac g     F .text	00000018 tickPowerSet
10000af8 g     O .bss	00000001 fin_tiempo_lectura
1a00062c g     F .text	000000a0 actualiza_lectura_analogica
1a007168 g     F .text	0000006c frexp
10000888 g     O .data	0000016c __global_locale
1a001230 g     F .text	00000058 Chip_Clock_SetBaseClock
1a001684 g     F .text	0000001c cyclesCounterInit
1a0001ba  w    F .text	00000002 GPIO4_IRQHandler
10000b24 g     O .bss	00000001 __lock___sfp_recursive_mutex
1a000ab8 g     F .text	0000000c Board_SystemInit
1a006848 g     F .text	0000008a __multadd
10000aa8 g     O .bss	00000018 delayTecla
1a006834 g     F .text	00000012 _Bfree



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 d1 06 00 1a 79 01 00 1a 7b 01 00 1a     ........y...{...
1a000010:	7d 01 00 1a 7f 01 00 1a 81 01 00 1a be 71 ff 53     }............q.S
	...
1a00002c:	83 01 00 1a 85 01 00 1a 00 00 00 00 87 01 00 1a     ................
1a00003c:	41 17 00 1a                                         A...

1a000040 <g_pfnVendorVectors>:
1a000040:	bb 01 00 1a bb 01 00 1a bb 01 00 1a 00 00 00 00     ................
1a000050:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000060:	49 1b 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     I...............
1a000070:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000080:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000090:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000a0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000b0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000c0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000d0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000e0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000f0:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000100:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000110:	bb 01 00 1a                                         ....

1a000114 <__data_section_table>:
1a000114:	1a007c54 	.word	0x1a007c54
1a000118:	10000000 	.word	0x10000000
1a00011c:	000009f4 	.word	0x000009f4
1a000120:	1a007c54 	.word	0x1a007c54
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a007c54 	.word	0x1a007c54
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a007c54 	.word	0x1a007c54
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a007c54 	.word	0x1a007c54
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	100009f8 	.word	0x100009f8
1a000154:	00000130 	.word	0x00000130
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <NMI_Handler>:
}

__attribute__ ((section(".after_vectors")))
void NMI_Handler(void) {
    while (1) {
    }
1a000178:	e7fe      	b.n	1a000178 <NMI_Handler>

1a00017a <HardFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void HardFault_Handler(void) {
    while (1) {
    }
1a00017a:	e7fe      	b.n	1a00017a <HardFault_Handler>

1a00017c <MemManage_Handler>:
}
__attribute__ ((section(".after_vectors")))
void MemManage_Handler(void) {
    while (1) {
    }
1a00017c:	e7fe      	b.n	1a00017c <MemManage_Handler>

1a00017e <BusFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void BusFault_Handler(void) {
    while (1) {
    }
1a00017e:	e7fe      	b.n	1a00017e <BusFault_Handler>

1a000180 <UsageFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void UsageFault_Handler(void) {
    while (1) {
    }
1a000180:	e7fe      	b.n	1a000180 <UsageFault_Handler>

1a000182 <SVC_Handler>:
}
__attribute__ ((section(".after_vectors")))
void SVC_Handler(void) {
    while (1) {
    }
1a000182:	e7fe      	b.n	1a000182 <SVC_Handler>

1a000184 <DebugMon_Handler>:
}
__attribute__ ((section(".after_vectors")))
void DebugMon_Handler(void) {
    while (1) {
    }
1a000184:	e7fe      	b.n	1a000184 <DebugMon_Handler>

1a000186 <PendSV_Handler>:
}
__attribute__ ((section(".after_vectors")))
void PendSV_Handler(void) {
    while (1) {
    }
1a000186:	e7fe      	b.n	1a000186 <PendSV_Handler>
}
__attribute__ ((section(".after_vectors")))
void SysTick_Handler(void) {
    while (1) {
    }
1a000188:	e7fe      	b.n	1a000188 <PendSV_Handler+0x2>

1a00018a <data_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a00018a:	2300      	movs	r3, #0
1a00018c:	4293      	cmp	r3, r2
1a00018e:	d20a      	bcs.n	1a0001a6 <data_init+0x1c>
void data_init(unsigned int romstart, unsigned int start, unsigned int len) {
1a000190:	b410      	push	{r4}
        *pulDest++ = *pulSrc++;
1a000192:	f850 4b04 	ldr.w	r4, [r0], #4
1a000196:	f841 4b04 	str.w	r4, [r1], #4
    for (loop = 0; loop < len; loop = loop + 4)
1a00019a:	3304      	adds	r3, #4
1a00019c:	4293      	cmp	r3, r2
1a00019e:	d3f8      	bcc.n	1a000192 <data_init+0x8>
}
1a0001a0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001a4:	4770      	bx	lr
1a0001a6:	4770      	bx	lr

1a0001a8 <bss_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a0001a8:	2300      	movs	r3, #0
1a0001aa:	428b      	cmp	r3, r1
1a0001ac:	d204      	bcs.n	1a0001b8 <bss_init+0x10>
        *pulDest++ = 0;
1a0001ae:	2200      	movs	r2, #0
1a0001b0:	f840 2b04 	str.w	r2, [r0], #4
    for (loop = 0; loop < len; loop = loop + 4)
1a0001b4:	3304      	adds	r3, #4
1a0001b6:	e7f8      	b.n	1a0001aa <bss_init+0x2>
}
1a0001b8:	4770      	bx	lr

1a0001ba <ADC0_IRQHandler>:
};

__attribute__ ((section(".after_vectors")))
void IntDefaultHandler(void) {
    while (1) {
    }
1a0001ba:	e7fe      	b.n	1a0001ba <ADC0_IRQHandler>
1a0001bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <paso_inicial>:
/*=====[Prototipos de funciones privadas]====================================*/

/*=====[Implementaciones de funciones globales publicas]==============================*/

/*Activacion de bobinas secuencia de encendido del tipo wave drive */
void paso_inicial(void){
1a000300:	b508      	push	{r3, lr}
	gpioWrite(GPIO1,OFF);
1a000302:	2100      	movs	r1, #0
1a000304:	200f      	movs	r0, #15
1a000306:	f001 fbab 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO2,OFF);
1a00030a:	2100      	movs	r1, #0
1a00030c:	201f      	movs	r0, #31
1a00030e:	f001 fba7 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO3,OFF);
1a000312:	2100      	movs	r1, #0
1a000314:	200e      	movs	r0, #14
1a000316:	f001 fba3 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO4,OFF);
1a00031a:	2100      	movs	r1, #0
1a00031c:	201e      	movs	r0, #30
1a00031e:	f001 fb9f 	bl	1a001a60 <gpioWrite>
}
1a000322:	bd08      	pop	{r3, pc}

1a000324 <paso_1>:
void paso_1(void){
1a000324:	b508      	push	{r3, lr}
	gpioWrite(GPIO1,ON);
1a000326:	2101      	movs	r1, #1
1a000328:	200f      	movs	r0, #15
1a00032a:	f001 fb99 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO2,OFF);
1a00032e:	2100      	movs	r1, #0
1a000330:	201f      	movs	r0, #31
1a000332:	f001 fb95 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO3,OFF);
1a000336:	2100      	movs	r1, #0
1a000338:	200e      	movs	r0, #14
1a00033a:	f001 fb91 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO4,OFF);
1a00033e:	2100      	movs	r1, #0
1a000340:	201e      	movs	r0, #30
1a000342:	f001 fb8d 	bl	1a001a60 <gpioWrite>
}
1a000346:	bd08      	pop	{r3, pc}

1a000348 <paso_2>:
void paso_2(void){
1a000348:	b508      	push	{r3, lr}
	gpioWrite(GPIO1,OFF);
1a00034a:	2100      	movs	r1, #0
1a00034c:	200f      	movs	r0, #15
1a00034e:	f001 fb87 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO2,ON);
1a000352:	2101      	movs	r1, #1
1a000354:	201f      	movs	r0, #31
1a000356:	f001 fb83 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO3,OFF);
1a00035a:	2100      	movs	r1, #0
1a00035c:	200e      	movs	r0, #14
1a00035e:	f001 fb7f 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO4,OFF);
1a000362:	2100      	movs	r1, #0
1a000364:	201e      	movs	r0, #30
1a000366:	f001 fb7b 	bl	1a001a60 <gpioWrite>
}
1a00036a:	bd08      	pop	{r3, pc}

1a00036c <paso_3>:
void paso_3(void){
1a00036c:	b508      	push	{r3, lr}
	gpioWrite(GPIO1,OFF);
1a00036e:	2100      	movs	r1, #0
1a000370:	200f      	movs	r0, #15
1a000372:	f001 fb75 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO2,OFF);
1a000376:	2100      	movs	r1, #0
1a000378:	201f      	movs	r0, #31
1a00037a:	f001 fb71 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO3,ON);
1a00037e:	2101      	movs	r1, #1
1a000380:	200e      	movs	r0, #14
1a000382:	f001 fb6d 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO4,OFF);
1a000386:	2100      	movs	r1, #0
1a000388:	201e      	movs	r0, #30
1a00038a:	f001 fb69 	bl	1a001a60 <gpioWrite>
}
1a00038e:	bd08      	pop	{r3, pc}

1a000390 <paso_4>:
void paso_4(void){
1a000390:	b508      	push	{r3, lr}
	gpioWrite(GPIO1,OFF);
1a000392:	2100      	movs	r1, #0
1a000394:	200f      	movs	r0, #15
1a000396:	f001 fb63 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO2,OFF);
1a00039a:	2100      	movs	r1, #0
1a00039c:	201f      	movs	r0, #31
1a00039e:	f001 fb5f 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO3,OFF);
1a0003a2:	2100      	movs	r1, #0
1a0003a4:	200e      	movs	r0, #14
1a0003a6:	f001 fb5b 	bl	1a001a60 <gpioWrite>
	gpioWrite(GPIO4,ON);
1a0003aa:	2101      	movs	r1, #1
1a0003ac:	201e      	movs	r0, #30
1a0003ae:	f001 fb57 	bl	1a001a60 <gpioWrite>
}
1a0003b2:	bd08      	pop	{r3, pc}

1a0003b4 <botonPresionado>:
		}
		break;

	}
}
static void botonPresionado(void){
1a0003b4:	b508      	push	{r3, lr}
	gpioToggle(LEDR);
1a0003b6:	2028      	movs	r0, #40	; 0x28
1a0003b8:	f001 fbbb 	bl	1a001b32 <gpioToggle>


}
1a0003bc:	bd08      	pop	{r3, pc}

1a0003be <botonLiberado>:
static void botonLiberado(void){
1a0003be:	b508      	push	{r3, lr}

	gpioToggle(LED2);
1a0003c0:	202c      	movs	r0, #44	; 0x2c
1a0003c2:	f001 fbb6 	bl	1a001b32 <gpioToggle>
}
1a0003c6:	bd08      	pop	{r3, pc}

1a0003c8 <inicializar_tecla>:
void inicializar_tecla (void) {
1a0003c8:	b508      	push	{r3, lr}
	estadoTecla=estado_inicial;
1a0003ca:	4b04      	ldr	r3, [pc, #16]	; (1a0003dc <inicializar_tecla+0x14>)
1a0003cc:	2200      	movs	r2, #0
1a0003ce:	701a      	strb	r2, [r3, #0]
	delayWrite(&delayTecla,tiempo_antirebote);
1a0003d0:	2228      	movs	r2, #40	; 0x28
1a0003d2:	2300      	movs	r3, #0
1a0003d4:	4802      	ldr	r0, [pc, #8]	; (1a0003e0 <inicializar_tecla+0x18>)
1a0003d6:	f001 fc2f 	bl	1a001c38 <delayWrite>
}
1a0003da:	bd08      	pop	{r3, pc}
1a0003dc:	100009f8 	.word	0x100009f8
1a0003e0:	10000aa8 	.word	0x10000aa8

1a0003e4 <actualizar_tecla>:
void actualizar_tecla(void){
1a0003e4:	b508      	push	{r3, lr}
	switch (estadoTecla){
1a0003e6:	4b24      	ldr	r3, [pc, #144]	; (1a000478 <actualizar_tecla+0x94>)
1a0003e8:	781b      	ldrb	r3, [r3, #0]
1a0003ea:	2b03      	cmp	r3, #3
1a0003ec:	d80f      	bhi.n	1a00040e <actualizar_tecla+0x2a>
1a0003ee:	e8df f003 	tbb	[pc, r3]
1a0003f2:	3002      	.short	0x3002
1a0003f4:	0a22      	.short	0x0a22
		if (!gpioRead(tecla)){
1a0003f6:	2024      	movs	r0, #36	; 0x24
1a0003f8:	f001 fb67 	bl	1a001aca <gpioRead>
1a0003fc:	b938      	cbnz	r0, 1a00040e <actualizar_tecla+0x2a>
			estadoTecla=estado_falling;
1a0003fe:	4b1e      	ldr	r3, [pc, #120]	; (1a000478 <actualizar_tecla+0x94>)
1a000400:	2203      	movs	r2, #3
1a000402:	701a      	strb	r2, [r3, #0]
1a000404:	e003      	b.n	1a00040e <actualizar_tecla+0x2a>
		if (delayRead(&delayTecla)){
1a000406:	481d      	ldr	r0, [pc, #116]	; (1a00047c <actualizar_tecla+0x98>)
1a000408:	f001 fbf6 	bl	1a001bf8 <delayRead>
1a00040c:	b900      	cbnz	r0, 1a000410 <actualizar_tecla+0x2c>
}
1a00040e:	bd08      	pop	{r3, pc}
			if (!gpioRead(tecla)){
1a000410:	2024      	movs	r0, #36	; 0x24
1a000412:	f001 fb5a 	bl	1a001aca <gpioRead>
1a000416:	b118      	cbz	r0, 1a000420 <actualizar_tecla+0x3c>
				estadoTecla=estado_up;
1a000418:	4b17      	ldr	r3, [pc, #92]	; (1a000478 <actualizar_tecla+0x94>)
1a00041a:	2200      	movs	r2, #0
1a00041c:	701a      	strb	r2, [r3, #0]
1a00041e:	e7f6      	b.n	1a00040e <actualizar_tecla+0x2a>
				estadoTecla=estado_down;
1a000420:	4b15      	ldr	r3, [pc, #84]	; (1a000478 <actualizar_tecla+0x94>)
1a000422:	2202      	movs	r2, #2
1a000424:	701a      	strb	r2, [r3, #0]
				delayWrite(&delayTecla,tiempo_antirebote);
1a000426:	2228      	movs	r2, #40	; 0x28
1a000428:	2300      	movs	r3, #0
1a00042a:	4814      	ldr	r0, [pc, #80]	; (1a00047c <actualizar_tecla+0x98>)
1a00042c:	f001 fc04 	bl	1a001c38 <delayWrite>
				botonPresionado();
1a000430:	f7ff ffc0 	bl	1a0003b4 <botonPresionado>
1a000434:	e7eb      	b.n	1a00040e <actualizar_tecla+0x2a>
		if (gpioRead(tecla)){
1a000436:	2024      	movs	r0, #36	; 0x24
1a000438:	f001 fb47 	bl	1a001aca <gpioRead>
1a00043c:	2800      	cmp	r0, #0
1a00043e:	d0e6      	beq.n	1a00040e <actualizar_tecla+0x2a>
			estadoTecla=estado_raising;
1a000440:	4b0d      	ldr	r3, [pc, #52]	; (1a000478 <actualizar_tecla+0x94>)
1a000442:	2201      	movs	r2, #1
1a000444:	701a      	strb	r2, [r3, #0]
			delayWrite(&delayTecla,tiempo_antirebote);
1a000446:	2228      	movs	r2, #40	; 0x28
1a000448:	2300      	movs	r3, #0
1a00044a:	480c      	ldr	r0, [pc, #48]	; (1a00047c <actualizar_tecla+0x98>)
1a00044c:	f001 fbf4 	bl	1a001c38 <delayWrite>
1a000450:	e7dd      	b.n	1a00040e <actualizar_tecla+0x2a>
		if (delayRead(&delayTecla)){
1a000452:	480a      	ldr	r0, [pc, #40]	; (1a00047c <actualizar_tecla+0x98>)
1a000454:	f001 fbd0 	bl	1a001bf8 <delayRead>
1a000458:	2800      	cmp	r0, #0
1a00045a:	d0d8      	beq.n	1a00040e <actualizar_tecla+0x2a>
			if (gpioRead(tecla)){
1a00045c:	2024      	movs	r0, #36	; 0x24
1a00045e:	f001 fb34 	bl	1a001aca <gpioRead>
1a000462:	b918      	cbnz	r0, 1a00046c <actualizar_tecla+0x88>
				estadoTecla=estado_down;
1a000464:	4b04      	ldr	r3, [pc, #16]	; (1a000478 <actualizar_tecla+0x94>)
1a000466:	2202      	movs	r2, #2
1a000468:	701a      	strb	r2, [r3, #0]
}
1a00046a:	e7d0      	b.n	1a00040e <actualizar_tecla+0x2a>
				estadoTecla=estado_up;
1a00046c:	4b02      	ldr	r3, [pc, #8]	; (1a000478 <actualizar_tecla+0x94>)
1a00046e:	2200      	movs	r2, #0
1a000470:	701a      	strb	r2, [r3, #0]
				botonLiberado();
1a000472:	f7ff ffa4 	bl	1a0003be <botonLiberado>
1a000476:	e7ca      	b.n	1a00040e <actualizar_tecla+0x2a>
1a000478:	100009f8 	.word	0x100009f8
1a00047c:	10000aa8 	.word	0x10000aa8

1a000480 <inicializar_bobinas_MEF>:
static delay_t delayTiempoGiroinverso;

/*=====[Prototipos de funciones privadas]====================================*/

/*=====[Implementaciones de funciones publicas]==============================*/
void inicializar_bobinas_MEF(){
1a000480:	b508      	push	{r3, lr}
	//inicializacion de pines gpio como salidas a bobinas
	//inicializo tiempo

	estadoBobinas=estado_inicial;
1a000482:	2300      	movs	r3, #0
1a000484:	4a12      	ldr	r2, [pc, #72]	; (1a0004d0 <inicializar_bobinas_MEF+0x50>)
1a000486:	7013      	strb	r3, [r2, #0]
	estadoProximo=estado_inicial;
1a000488:	4a12      	ldr	r2, [pc, #72]	; (1a0004d4 <inicializar_bobinas_MEF+0x54>)
1a00048a:	7013      	strb	r3, [r2, #0]
	gpioConfig( GPIO1, GPIO_OUTPUT );
1a00048c:	2101      	movs	r1, #1
1a00048e:	200f      	movs	r0, #15
1a000490:	f001 fa10 	bl	1a0018b4 <gpioInit>
	gpioConfig( GPIO2, GPIO_OUTPUT );
1a000494:	2101      	movs	r1, #1
1a000496:	201f      	movs	r0, #31
1a000498:	f001 fa0c 	bl	1a0018b4 <gpioInit>
	gpioConfig( GPIO3, GPIO_OUTPUT );
1a00049c:	2101      	movs	r1, #1
1a00049e:	200e      	movs	r0, #14
1a0004a0:	f001 fa08 	bl	1a0018b4 <gpioInit>
	gpioConfig( GPIO4, GPIO_OUTPUT );
1a0004a4:	2101      	movs	r1, #1
1a0004a6:	201e      	movs	r0, #30
1a0004a8:	f001 fa04 	bl	1a0018b4 <gpioInit>
	delayInit(&delayTiempoGiro,tiempo_giro);
1a0004ac:	2264      	movs	r2, #100	; 0x64
1a0004ae:	2300      	movs	r3, #0
1a0004b0:	4809      	ldr	r0, [pc, #36]	; (1a0004d8 <inicializar_bobinas_MEF+0x58>)
1a0004b2:	f001 fb91 	bl	1a001bd8 <delayInit>
	delayInit(&delayTiempoEnsayo,tiempo_ensayo);
1a0004b6:	f242 7210 	movw	r2, #10000	; 0x2710
1a0004ba:	2300      	movs	r3, #0
1a0004bc:	4807      	ldr	r0, [pc, #28]	; (1a0004dc <inicializar_bobinas_MEF+0x5c>)
1a0004be:	f001 fb8b 	bl	1a001bd8 <delayInit>
	delayInit(&delayTiempoGiroinverso,tiempo_giro_inverso);
1a0004c2:	f644 6220 	movw	r2, #20000	; 0x4e20
1a0004c6:	2300      	movs	r3, #0
1a0004c8:	4805      	ldr	r0, [pc, #20]	; (1a0004e0 <inicializar_bobinas_MEF+0x60>)
1a0004ca:	f001 fb85 	bl	1a001bd8 <delayInit>
}
1a0004ce:	bd08      	pop	{r3, pc}
1a0004d0:	10000a48 	.word	0x10000a48
1a0004d4:	10000a49 	.word	0x10000a49
1a0004d8:	10000a18 	.word	0x10000a18
1a0004dc:	10000a00 	.word	0x10000a00
1a0004e0:	10000a30 	.word	0x10000a30

1a0004e4 <actualizar_bobinas_MEF>:

void actualizar_bobinas_MEF(){
1a0004e4:	b508      	push	{r3, lr}
	if (delayRead(&delayTiempoEnsayo)){
1a0004e6:	483d      	ldr	r0, [pc, #244]	; (1a0005dc <actualizar_bobinas_MEF+0xf8>)
1a0004e8:	f001 fb86 	bl	1a001bf8 <delayRead>
1a0004ec:	b158      	cbz	r0, 1a000506 <actualizar_bobinas_MEF+0x22>
		fin_tiempo=1;
1a0004ee:	4b3c      	ldr	r3, [pc, #240]	; (1a0005e0 <actualizar_bobinas_MEF+0xfc>)
1a0004f0:	2201      	movs	r2, #1
1a0004f2:	701a      	strb	r2, [r3, #0]
	}
	else
		fin_tiempo=0;

	switch(estadoBobinas){
1a0004f4:	4b3b      	ldr	r3, [pc, #236]	; (1a0005e4 <actualizar_bobinas_MEF+0x100>)
1a0004f6:	781b      	ldrb	r3, [r3, #0]
1a0004f8:	2b04      	cmp	r3, #4
1a0004fa:	d864      	bhi.n	1a0005c6 <actualizar_bobinas_MEF+0xe2>
1a0004fc:	e8df f003 	tbb	[pc, r3]
1a000500:	3f2d1b07 	.word	0x3f2d1b07
1a000504:	51          	.byte	0x51
1a000505:	00          	.byte	0x00
		fin_tiempo=0;
1a000506:	4b36      	ldr	r3, [pc, #216]	; (1a0005e0 <actualizar_bobinas_MEF+0xfc>)
1a000508:	2200      	movs	r2, #0
1a00050a:	701a      	strb	r2, [r3, #0]
1a00050c:	e7f2      	b.n	1a0004f4 <actualizar_bobinas_MEF+0x10>

	case estado_inicial:  //pongo en estado OFF todas las bobinas
		paso_inicial();
1a00050e:	f7ff fef7 	bl	1a000300 <paso_inicial>

		// al pulsar tecla 1 arranca el motor paso a paso

		if(!gpioRead(TEC1)){
1a000512:	2024      	movs	r0, #36	; 0x24
1a000514:	f001 fad9 	bl	1a001aca <gpioRead>
1a000518:	b910      	cbnz	r0, 1a000520 <actualizar_bobinas_MEF+0x3c>
			estadoProximo=estado_1;
1a00051a:	4b33      	ldr	r3, [pc, #204]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a00051c:	2201      	movs	r2, #1
1a00051e:	701a      	strb	r2, [r3, #0]
		break;
	default:
		inicializar_bobinas_MEF();
		break;
	}
	if (estadoBobinas!=estadoProximo){         //cambio las condiciones del switch case
1a000520:	4b30      	ldr	r3, [pc, #192]	; (1a0005e4 <actualizar_bobinas_MEF+0x100>)
1a000522:	781a      	ldrb	r2, [r3, #0]
1a000524:	4b30      	ldr	r3, [pc, #192]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a000526:	781b      	ldrb	r3, [r3, #0]
1a000528:	429a      	cmp	r2, r3
1a00052a:	d001      	beq.n	1a000530 <actualizar_bobinas_MEF+0x4c>
		estadoBobinas=estadoProximo;
1a00052c:	4a2d      	ldr	r2, [pc, #180]	; (1a0005e4 <actualizar_bobinas_MEF+0x100>)
1a00052e:	7013      	strb	r3, [r2, #0]
	}
	if (estadoProximo==estado_inicial){                  //chequeo las condciones de salida
1a000530:	2b00      	cmp	r3, #0
1a000532:	d04b      	beq.n	1a0005cc <actualizar_bobinas_MEF+0xe8>
		delayInit(&delayTiempoEnsayo,tiempo_ensayo);

	}

}
1a000534:	bd08      	pop	{r3, pc}
		paso_1();
1a000536:	f7ff fef5 	bl	1a000324 <paso_1>
		if (delayRead(&delayTiempoGiro)){
1a00053a:	482c      	ldr	r0, [pc, #176]	; (1a0005ec <actualizar_bobinas_MEF+0x108>)
1a00053c:	f001 fb5c 	bl	1a001bf8 <delayRead>
1a000540:	b110      	cbz	r0, 1a000548 <actualizar_bobinas_MEF+0x64>
			estadoProximo=estado_2;
1a000542:	4b29      	ldr	r3, [pc, #164]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a000544:	2202      	movs	r2, #2
1a000546:	701a      	strb	r2, [r3, #0]
		if (fin_tiempo){
1a000548:	4b25      	ldr	r3, [pc, #148]	; (1a0005e0 <actualizar_bobinas_MEF+0xfc>)
1a00054a:	f993 3000 	ldrsb.w	r3, [r3]
1a00054e:	2b00      	cmp	r3, #0
1a000550:	d0e6      	beq.n	1a000520 <actualizar_bobinas_MEF+0x3c>
			estadoProximo=estado_inicial;
1a000552:	4b25      	ldr	r3, [pc, #148]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a000554:	2200      	movs	r2, #0
1a000556:	701a      	strb	r2, [r3, #0]
1a000558:	e7e2      	b.n	1a000520 <actualizar_bobinas_MEF+0x3c>
		paso_2();
1a00055a:	f7ff fef5 	bl	1a000348 <paso_2>
		if (delayRead(&delayTiempoGiro)){
1a00055e:	4823      	ldr	r0, [pc, #140]	; (1a0005ec <actualizar_bobinas_MEF+0x108>)
1a000560:	f001 fb4a 	bl	1a001bf8 <delayRead>
1a000564:	b110      	cbz	r0, 1a00056c <actualizar_bobinas_MEF+0x88>
			estadoProximo=estado_3;
1a000566:	4b20      	ldr	r3, [pc, #128]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a000568:	2203      	movs	r2, #3
1a00056a:	701a      	strb	r2, [r3, #0]
		if (fin_tiempo){
1a00056c:	4b1c      	ldr	r3, [pc, #112]	; (1a0005e0 <actualizar_bobinas_MEF+0xfc>)
1a00056e:	f993 3000 	ldrsb.w	r3, [r3]
1a000572:	2b00      	cmp	r3, #0
1a000574:	d0d4      	beq.n	1a000520 <actualizar_bobinas_MEF+0x3c>
			estadoProximo=estado_inicial;
1a000576:	4b1c      	ldr	r3, [pc, #112]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a000578:	2200      	movs	r2, #0
1a00057a:	701a      	strb	r2, [r3, #0]
1a00057c:	e7d0      	b.n	1a000520 <actualizar_bobinas_MEF+0x3c>
		paso_3();
1a00057e:	f7ff fef5 	bl	1a00036c <paso_3>
		if (delayRead(&delayTiempoGiro)){
1a000582:	481a      	ldr	r0, [pc, #104]	; (1a0005ec <actualizar_bobinas_MEF+0x108>)
1a000584:	f001 fb38 	bl	1a001bf8 <delayRead>
1a000588:	b110      	cbz	r0, 1a000590 <actualizar_bobinas_MEF+0xac>
			estadoProximo=estado_4;
1a00058a:	4b17      	ldr	r3, [pc, #92]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a00058c:	2204      	movs	r2, #4
1a00058e:	701a      	strb	r2, [r3, #0]
		if (fin_tiempo){
1a000590:	4b13      	ldr	r3, [pc, #76]	; (1a0005e0 <actualizar_bobinas_MEF+0xfc>)
1a000592:	f993 3000 	ldrsb.w	r3, [r3]
1a000596:	2b00      	cmp	r3, #0
1a000598:	d0c2      	beq.n	1a000520 <actualizar_bobinas_MEF+0x3c>
			estadoProximo=estado_inicial;
1a00059a:	4b13      	ldr	r3, [pc, #76]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a00059c:	2200      	movs	r2, #0
1a00059e:	701a      	strb	r2, [r3, #0]
1a0005a0:	e7be      	b.n	1a000520 <actualizar_bobinas_MEF+0x3c>
		paso_4();
1a0005a2:	f7ff fef5 	bl	1a000390 <paso_4>
		if (delayRead(&delayTiempoGiro)){
1a0005a6:	4811      	ldr	r0, [pc, #68]	; (1a0005ec <actualizar_bobinas_MEF+0x108>)
1a0005a8:	f001 fb26 	bl	1a001bf8 <delayRead>
1a0005ac:	b110      	cbz	r0, 1a0005b4 <actualizar_bobinas_MEF+0xd0>
			estadoProximo=estado_1;
1a0005ae:	4b0e      	ldr	r3, [pc, #56]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a0005b0:	2201      	movs	r2, #1
1a0005b2:	701a      	strb	r2, [r3, #0]
		if (fin_tiempo){
1a0005b4:	4b0a      	ldr	r3, [pc, #40]	; (1a0005e0 <actualizar_bobinas_MEF+0xfc>)
1a0005b6:	f993 3000 	ldrsb.w	r3, [r3]
1a0005ba:	2b00      	cmp	r3, #0
1a0005bc:	d0b0      	beq.n	1a000520 <actualizar_bobinas_MEF+0x3c>
			estadoProximo=estado_inicial;
1a0005be:	4b0a      	ldr	r3, [pc, #40]	; (1a0005e8 <actualizar_bobinas_MEF+0x104>)
1a0005c0:	2200      	movs	r2, #0
1a0005c2:	701a      	strb	r2, [r3, #0]
1a0005c4:	e7ac      	b.n	1a000520 <actualizar_bobinas_MEF+0x3c>
		inicializar_bobinas_MEF();
1a0005c6:	f7ff ff5b 	bl	1a000480 <inicializar_bobinas_MEF>
		break;
1a0005ca:	e7a9      	b.n	1a000520 <actualizar_bobinas_MEF+0x3c>
		delayInit(&delayTiempoEnsayo,tiempo_ensayo);
1a0005cc:	f242 7210 	movw	r2, #10000	; 0x2710
1a0005d0:	2300      	movs	r3, #0
1a0005d2:	4802      	ldr	r0, [pc, #8]	; (1a0005dc <actualizar_bobinas_MEF+0xf8>)
1a0005d4:	f001 fb00 	bl	1a001bd8 <delayInit>
}
1a0005d8:	e7ac      	b.n	1a000534 <actualizar_bobinas_MEF+0x50>
1a0005da:	bf00      	nop
1a0005dc:	10000a00 	.word	0x10000a00
1a0005e0:	10000ac0 	.word	0x10000ac0
1a0005e4:	10000a48 	.word	0x10000a48
1a0005e8:	10000a49 	.word	0x10000a49
1a0005ec:	10000a18 	.word	0x10000a18

1a0005f0 <main>:


/*=====[Funcion principal, punto de entrada al programa luegp de encender]===*/

int main (void)
{
1a0005f0:	b508      	push	{r3, lr}
	// ----- Configuraciones -------------------------

	boardInit();                            //Inicializo placa edu ciaa,tecla 1,bobinas del motor paso a paso
1a0005f2:	f001 fab7 	bl	1a001b64 <boardInit>
	inicializar_bobinas_MEF();             //y lecturas analogicas
1a0005f6:	f7ff ff43 	bl	1a000480 <inicializar_bobinas_MEF>
	inicializar_tecla ();
1a0005fa:	f7ff fee5 	bl	1a0003c8 <inicializar_tecla>
	inicializar_lectura_analogica();
1a0005fe:	f000 f807 	bl	1a000610 <inicializar_lectura_analogica>

	// ----- Repetir por siempre ---------------------

	while(TRUE) {
		actualizar_tecla();
1a000602:	f7ff feef 	bl	1a0003e4 <actualizar_tecla>
		actualizar_bobinas_MEF();
1a000606:	f7ff ff6d 	bl	1a0004e4 <actualizar_bobinas_MEF>
		actualiza_lectura_analogica();
1a00060a:	f000 f80f 	bl	1a00062c <actualiza_lectura_analogica>
1a00060e:	e7f8      	b.n	1a000602 <main+0x12>

1a000610 <inicializar_lectura_analogica>:
delay_t Tiempolectura;
/*=====[Prototipos de funciones privadas]====================================*/

/*=====[Implementaciones de funciones publicas]==============================*/

void inicializar_lectura_analogica(void){
1a000610:	b508      	push	{r3, lr}
	adcConfig( ADC_ENABLE ); /* ADC */
1a000612:	2000      	movs	r0, #0
1a000614:	f001 f8aa 	bl	1a00176c <adcInit>
	delayInit(&tiempoMuestra,tiempo_ensayo_lectura);
1a000618:	f242 7210 	movw	r2, #10000	; 0x2710
1a00061c:	2300      	movs	r3, #0
1a00061e:	4802      	ldr	r0, [pc, #8]	; (1a000628 <inicializar_lectura_analogica+0x18>)
1a000620:	f001 fada 	bl	1a001bd8 <delayInit>
}
1a000624:	bd08      	pop	{r3, pc}
1a000626:	bf00      	nop
1a000628:	10000ae0 	.word	0x10000ae0

1a00062c <actualiza_lectura_analogica>:

void actualiza_lectura_analogica(void){
1a00062c:	b510      	push	{r4, lr}
	if (delayRead(&tiempoMuestra)){
1a00062e:	4820      	ldr	r0, [pc, #128]	; (1a0006b0 <actualiza_lectura_analogica+0x84>)
1a000630:	f001 fae2 	bl	1a001bf8 <delayRead>
1a000634:	b188      	cbz	r0, 1a00065a <actualiza_lectura_analogica+0x2e>
		fin_tiempo_lectura=1;
1a000636:	4b1f      	ldr	r3, [pc, #124]	; (1a0006b4 <actualiza_lectura_analogica+0x88>)
1a000638:	2201      	movs	r2, #1
1a00063a:	701a      	strb	r2, [r3, #0]
	}
	else
		fin_tiempo_lectura=0;

	switch (estadolectura){
1a00063c:	4b1e      	ldr	r3, [pc, #120]	; (1a0006b8 <actualiza_lectura_analogica+0x8c>)
1a00063e:	781b      	ldrb	r3, [r3, #0]
1a000640:	b17b      	cbz	r3, 1a000662 <actualiza_lectura_analogica+0x36>
1a000642:	2b01      	cmp	r3, #1
1a000644:	d016      	beq.n	1a000674 <actualiza_lectura_analogica+0x48>
       if (fin_tiempo_lectura){
    	   estadoProximo=lectura_inicial;
       }
		break;
	}
	if (estadolectura!=estadoProximo){         //cambio las condiciones del switch case
1a000646:	4b1c      	ldr	r3, [pc, #112]	; (1a0006b8 <actualiza_lectura_analogica+0x8c>)
1a000648:	781a      	ldrb	r2, [r3, #0]
1a00064a:	4b1c      	ldr	r3, [pc, #112]	; (1a0006bc <actualiza_lectura_analogica+0x90>)
1a00064c:	781b      	ldrb	r3, [r3, #0]
1a00064e:	429a      	cmp	r2, r3
1a000650:	d001      	beq.n	1a000656 <actualiza_lectura_analogica+0x2a>
		estadolectura=estadoProximo;
1a000652:	4a19      	ldr	r2, [pc, #100]	; (1a0006b8 <actualiza_lectura_analogica+0x8c>)
1a000654:	7013      	strb	r3, [r2, #0]
	}
	if (estadoProximo==lectura_inicial){
1a000656:	b31b      	cbz	r3, 1a0006a0 <actualiza_lectura_analogica+0x74>

	}



}
1a000658:	bd10      	pop	{r4, pc}
		fin_tiempo_lectura=0;
1a00065a:	4b16      	ldr	r3, [pc, #88]	; (1a0006b4 <actualiza_lectura_analogica+0x88>)
1a00065c:	2200      	movs	r2, #0
1a00065e:	701a      	strb	r2, [r3, #0]
1a000660:	e7ec      	b.n	1a00063c <actualiza_lectura_analogica+0x10>
		if (!gpioRead(TEC1)){
1a000662:	2024      	movs	r0, #36	; 0x24
1a000664:	f001 fa31 	bl	1a001aca <gpioRead>
1a000668:	2800      	cmp	r0, #0
1a00066a:	d1ec      	bne.n	1a000646 <actualiza_lectura_analogica+0x1a>
			estadoProximo=lectura_muestra;
1a00066c:	4b13      	ldr	r3, [pc, #76]	; (1a0006bc <actualiza_lectura_analogica+0x90>)
1a00066e:	2201      	movs	r2, #1
1a000670:	701a      	strb	r2, [r3, #0]
1a000672:	e7e8      	b.n	1a000646 <actualiza_lectura_analogica+0x1a>
        muestra = adcRead( CH1 );
1a000674:	2000      	movs	r0, #0
1a000676:	f001 f8d7 	bl	1a001828 <adcRead>
1a00067a:	4c11      	ldr	r4, [pc, #68]	; (1a0006c0 <actualiza_lectura_analogica+0x94>)
1a00067c:	8020      	strh	r0, [r4, #0]
		printf("valor analogico \r\n : ");
1a00067e:	4811      	ldr	r0, [pc, #68]	; (1a0006c4 <actualiza_lectura_analogica+0x98>)
1a000680:	f002 f9ce 	bl	1a002a20 <printf>
		printf("%i",muestra);
1a000684:	f9b4 1000 	ldrsh.w	r1, [r4]
1a000688:	480f      	ldr	r0, [pc, #60]	; (1a0006c8 <actualiza_lectura_analogica+0x9c>)
1a00068a:	f002 f9c9 	bl	1a002a20 <printf>
       if (fin_tiempo_lectura){
1a00068e:	4b09      	ldr	r3, [pc, #36]	; (1a0006b4 <actualiza_lectura_analogica+0x88>)
1a000690:	f993 3000 	ldrsb.w	r3, [r3]
1a000694:	2b00      	cmp	r3, #0
1a000696:	d0d6      	beq.n	1a000646 <actualiza_lectura_analogica+0x1a>
    	   estadoProximo=lectura_inicial;
1a000698:	4b08      	ldr	r3, [pc, #32]	; (1a0006bc <actualiza_lectura_analogica+0x90>)
1a00069a:	2200      	movs	r2, #0
1a00069c:	701a      	strb	r2, [r3, #0]
1a00069e:	e7d2      	b.n	1a000646 <actualiza_lectura_analogica+0x1a>
		delayInit(&tiempoMuestra,tiempo_ensayo_lectura);
1a0006a0:	f242 7210 	movw	r2, #10000	; 0x2710
1a0006a4:	2300      	movs	r3, #0
1a0006a6:	4802      	ldr	r0, [pc, #8]	; (1a0006b0 <actualiza_lectura_analogica+0x84>)
1a0006a8:	f001 fa96 	bl	1a001bd8 <delayInit>
}
1a0006ac:	e7d4      	b.n	1a000658 <actualiza_lectura_analogica+0x2c>
1a0006ae:	bf00      	nop
1a0006b0:	10000ae0 	.word	0x10000ae0
1a0006b4:	10000af8 	.word	0x10000af8
1a0006b8:	10000a4b 	.word	0x10000a4b
1a0006bc:	10000a4a 	.word	0x10000a4a
1a0006c0:	10000a4c 	.word	0x10000a4c
1a0006c4:	1a007748 	.word	0x1a007748
1a0006c8:	1a007760 	.word	0x1a007760

1a0006cc <initialise_monitor_handles>:
}
1a0006cc:	4770      	bx	lr
1a0006ce:	Address 0x000000001a0006ce is out of bounds.


1a0006d0 <Reset_Handler>:
void Reset_Handler(void) {
1a0006d0:	b510      	push	{r4, lr}
    __asm__ volatile("cpsid i");
1a0006d2:	b672      	cpsid	i
    *(RESET_CONTROL + 0) = 0x10DF1000;
1a0006d4:	4b19      	ldr	r3, [pc, #100]	; (1a00073c <Reset_Handler+0x6c>)
1a0006d6:	4a1a      	ldr	r2, [pc, #104]	; (1a000740 <Reset_Handler+0x70>)
1a0006d8:	601a      	str	r2, [r3, #0]
    *(RESET_CONTROL + 1) = 0x01DFF7FF;
1a0006da:	3304      	adds	r3, #4
1a0006dc:	4a19      	ldr	r2, [pc, #100]	; (1a000744 <Reset_Handler+0x74>)
1a0006de:	601a      	str	r2, [r3, #0]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a0006e0:	2300      	movs	r3, #0
1a0006e2:	e005      	b.n	1a0006f0 <Reset_Handler+0x20>
        *(NVIC_ICPR + irqpendloop) = 0xFFFFFFFF;
1a0006e4:	4a18      	ldr	r2, [pc, #96]	; (1a000748 <Reset_Handler+0x78>)
1a0006e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
1a0006ea:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a0006ee:	3301      	adds	r3, #1
1a0006f0:	2b07      	cmp	r3, #7
1a0006f2:	d9f7      	bls.n	1a0006e4 <Reset_Handler+0x14>
    __asm__ volatile("cpsie i");
1a0006f4:	b662      	cpsie	i
    SectionTableAddr = &__data_section_table;
1a0006f6:	4b15      	ldr	r3, [pc, #84]	; (1a00074c <Reset_Handler+0x7c>)
    while (SectionTableAddr < &__data_section_table_end) {
1a0006f8:	e007      	b.n	1a00070a <Reset_Handler+0x3a>
        SectionLen = *SectionTableAddr++;
1a0006fa:	f103 040c 	add.w	r4, r3, #12
        data_init(LoadAddr, ExeAddr, SectionLen);
1a0006fe:	689a      	ldr	r2, [r3, #8]
1a000700:	6859      	ldr	r1, [r3, #4]
1a000702:	6818      	ldr	r0, [r3, #0]
1a000704:	f7ff fd41 	bl	1a00018a <data_init>
        SectionLen = *SectionTableAddr++;
1a000708:	4623      	mov	r3, r4
    while (SectionTableAddr < &__data_section_table_end) {
1a00070a:	4a11      	ldr	r2, [pc, #68]	; (1a000750 <Reset_Handler+0x80>)
1a00070c:	4293      	cmp	r3, r2
1a00070e:	d3f4      	bcc.n	1a0006fa <Reset_Handler+0x2a>
1a000710:	e006      	b.n	1a000720 <Reset_Handler+0x50>
        ExeAddr = *SectionTableAddr++;
1a000712:	461c      	mov	r4, r3
        bss_init(ExeAddr, SectionLen);
1a000714:	6859      	ldr	r1, [r3, #4]
1a000716:	f854 0b08 	ldr.w	r0, [r4], #8
1a00071a:	f7ff fd45 	bl	1a0001a8 <bss_init>
        SectionLen = *SectionTableAddr++;
1a00071e:	4623      	mov	r3, r4
    while (SectionTableAddr < &__bss_section_table_end) {
1a000720:	4a0c      	ldr	r2, [pc, #48]	; (1a000754 <Reset_Handler+0x84>)
1a000722:	4293      	cmp	r3, r2
1a000724:	d3f5      	bcc.n	1a000712 <Reset_Handler+0x42>
    SystemInit();
1a000726:	f000 ff91 	bl	1a00164c <SystemInit>
    __libc_init_array();
1a00072a:	f002 f86b 	bl	1a002804 <__libc_init_array>
    initialise_monitor_handles();
1a00072e:	f7ff ffcd 	bl	1a0006cc <initialise_monitor_handles>
    main();
1a000732:	f7ff ff5d 	bl	1a0005f0 <main>
        __asm__ volatile("wfi");
1a000736:	bf30      	wfi
1a000738:	e7fd      	b.n	1a000736 <Reset_Handler+0x66>
1a00073a:	bf00      	nop
1a00073c:	40053100 	.word	0x40053100
1a000740:	10df1000 	.word	0x10df1000
1a000744:	01dff7ff 	.word	0x01dff7ff
1a000748:	e000e280 	.word	0xe000e280
1a00074c:	1a000114 	.word	0x1a000114
1a000750:	1a000150 	.word	0x1a000150
1a000754:	1a000178 	.word	0x1a000178

1a000758 <_fini>:
void _fini(void) {}
1a000758:	4770      	bx	lr

1a00075a <_init>:
void _init(void) {}
1a00075a:	4770      	bx	lr

1a00075c <_close_r>:
   (void) __params__;
}

int _close_r(struct _reent *r, int fd) {
   UNUSED(fd);
   SET_ERR(EBADF);
1a00075c:	2309      	movs	r3, #9
1a00075e:	6003      	str	r3, [r0, #0]
   return -1;
}
1a000760:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a000764:	4770      	bx	lr

1a000766 <_fstat_r>:
}

int _fstat_r(struct _reent *r, int fd, struct stat *st) {
   UNUSED(fd);
   UNUSED(st);
   SET_ERR(ENOSYS);
1a000766:	2358      	movs	r3, #88	; 0x58
1a000768:	6003      	str	r3, [r0, #0]
   return -1;
}
1a00076a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00076e:	4770      	bx	lr

1a000770 <_isatty_r>:
   UNUSED(r);
   return 1;
}

int _isatty_r(struct _reent *r, int fd) {
   switch (fd) {
1a000770:	2902      	cmp	r1, #2
1a000772:	d904      	bls.n	1a00077e <_isatty_r+0xe>
   case 0:
   case 1:
   case 2:
       return 1;
   default:
       SET_ERR(EBADF);
1a000774:	2309      	movs	r3, #9
1a000776:	6003      	str	r3, [r0, #0]
       return -1;
1a000778:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00077c:	4770      	bx	lr
       return 1;
1a00077e:	2001      	movs	r0, #1
   }
}
1a000780:	4770      	bx	lr

1a000782 <_lseek_r>:

_off_t _lseek_r(struct _reent *r, int fd, _off_t off, int w) {
   UNUSED(fd);
   UNUSED(off);
   UNUSED(w);
   SET_ERR(ENOSYS);
1a000782:	2358      	movs	r3, #88	; 0x58
1a000784:	6003      	str	r3, [r0, #0]
   return -1;
}
1a000786:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00078a:	4770      	bx	lr

1a00078c <_read_r>:
   }
}
*/
_ssize_t _read_r(struct _reent *r, int fd, void *b, size_t n) {
  size_t i = 0;
  switch (fd) {
1a00078c:	2902      	cmp	r1, #2
1a00078e:	d81f      	bhi.n	1a0007d0 <_read_r+0x44>
_ssize_t _read_r(struct _reent *r, int fd, void *b, size_t n) {
1a000790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a000794:	461d      	mov	r5, r3
1a000796:	4617      	mov	r7, r2
1a000798:	4606      	mov	r6, r0
  size_t i = 0;
1a00079a:	2400      	movs	r4, #0
  case 0:
  case 1:
  case 2:
      while( i < n ){
1a00079c:	42ac      	cmp	r4, r5
1a00079e:	d211      	bcs.n	1a0007c4 <_read_r+0x38>
         int c = __stdio_getchar();
1a0007a0:	f000 f92f 	bl	1a000a02 <__stdio_getchar>
         if( c != -1 ){
1a0007a4:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a0007a8:	d0f8      	beq.n	1a00079c <_read_r+0x10>
            ((char*) b)[i++] = (char) c;
1a0007aa:	f104 0801 	add.w	r8, r4, #1
1a0007ae:	5538      	strb	r0, [r7, r4]
            if( c == '\r' || c == '\n' ){
1a0007b0:	280d      	cmp	r0, #13
1a0007b2:	d003      	beq.n	1a0007bc <_read_r+0x30>
1a0007b4:	280a      	cmp	r0, #10
1a0007b6:	d001      	beq.n	1a0007bc <_read_r+0x30>
            ((char*) b)[i++] = (char) c;
1a0007b8:	4644      	mov	r4, r8
1a0007ba:	e7ef      	b.n	1a00079c <_read_r+0x10>
               // read anotherone to prevent \r\n
               (void) __stdio_getchar();
1a0007bc:	f000 f921 	bl	1a000a02 <__stdio_getchar>
               return i;
1a0007c0:	4640      	mov	r0, r8
1a0007c2:	e003      	b.n	1a0007cc <_read_r+0x40>
            }
         }
      }
      SET_ERR(ENODEV);
1a0007c4:	2313      	movs	r3, #19
1a0007c6:	6033      	str	r3, [r6, #0]
      return -1;
1a0007c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  default:
      SET_ERR(ENODEV);
      return -1;
  }
}
1a0007cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      SET_ERR(ENODEV);
1a0007d0:	2313      	movs	r3, #19
1a0007d2:	6003      	str	r3, [r0, #0]
      return -1;
1a0007d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
1a0007d8:	4770      	bx	lr

1a0007da <_write_r>:
   return -1;
}

_ssize_t _write_r(struct _reent *r, int fd, const void *b, size_t n) {
   size_t i;
   switch (fd) {
1a0007da:	2902      	cmp	r1, #2
1a0007dc:	d80c      	bhi.n	1a0007f8 <_write_r+0x1e>
_ssize_t _write_r(struct _reent *r, int fd, const void *b, size_t n) {
1a0007de:	b570      	push	{r4, r5, r6, lr}
1a0007e0:	461d      	mov	r5, r3
1a0007e2:	4616      	mov	r6, r2
   case 0:
   case 1:
   case 2:
       for (i = 0; i < n; i++)
1a0007e4:	2400      	movs	r4, #0
1a0007e6:	42ac      	cmp	r4, r5
1a0007e8:	d204      	bcs.n	1a0007f4 <_write_r+0x1a>
           __stdio_putchar(((char*) b)[i]);
1a0007ea:	5d30      	ldrb	r0, [r6, r4]
1a0007ec:	f000 f904 	bl	1a0009f8 <__stdio_putchar>
       for (i = 0; i < n; i++)
1a0007f0:	3401      	adds	r4, #1
1a0007f2:	e7f8      	b.n	1a0007e6 <_write_r+0xc>
       return n;
1a0007f4:	4628      	mov	r0, r5
   default:
       SET_ERR(ENODEV);
       return -1;
   }
}
1a0007f6:	bd70      	pop	{r4, r5, r6, pc}
       SET_ERR(ENODEV);
1a0007f8:	2313      	movs	r3, #19
1a0007fa:	6003      	str	r3, [r0, #0]
       return -1;
1a0007fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
1a000800:	4770      	bx	lr
1a000802:	Address 0x000000001a000802 is out of bounds.


1a000804 <_sbrk_r>:

void *_sbrk_r(struct _reent *r, ptrdiff_t incr) {
   extern int _pvHeapStart;
   static void *heap_end;
   void *prev_heap_end;
   if (heap_end == 0) {
1a000804:	4b05      	ldr	r3, [pc, #20]	; (1a00081c <_sbrk_r+0x18>)
1a000806:	681b      	ldr	r3, [r3, #0]
1a000808:	b123      	cbz	r3, 1a000814 <_sbrk_r+0x10>
       heap_end = &_pvHeapStart;
   }
   prev_heap_end = heap_end;
1a00080a:	4b04      	ldr	r3, [pc, #16]	; (1a00081c <_sbrk_r+0x18>)
1a00080c:	6818      	ldr	r0, [r3, #0]
   heap_end += incr;
1a00080e:	4401      	add	r1, r0
1a000810:	6019      	str	r1, [r3, #0]
   return prev_heap_end;
}
1a000812:	4770      	bx	lr
       heap_end = &_pvHeapStart;
1a000814:	4b01      	ldr	r3, [pc, #4]	; (1a00081c <_sbrk_r+0x18>)
1a000816:	4a02      	ldr	r2, [pc, #8]	; (1a000820 <_sbrk_r+0x1c>)
1a000818:	601a      	str	r2, [r3, #0]
1a00081a:	e7f6      	b.n	1a00080a <_sbrk_r+0x6>
1a00081c:	10000a50 	.word	0x10000a50
1a000820:	10000b28 	.word	0x10000b28

1a000824 <Board_LED_Init>:
#define GPIO_PORTS_SIZE     (sizeof(GpioPorts) / sizeof(struct gpio_t))


static void Board_LED_Init()
{
   for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a000824:	2200      	movs	r2, #0
1a000826:	2a05      	cmp	r2, #5
1a000828:	d819      	bhi.n	1a00085e <Board_LED_Init+0x3a>
{
1a00082a:	b470      	push	{r4, r5, r6}
      const struct gpio_t *io = &GpioLeds[i];
      Chip_GPIO_SetPinDIROutput(LPC_GPIO_PORT, io->port, io->pin);
1a00082c:	490c      	ldr	r1, [pc, #48]	; (1a000860 <Board_LED_Init+0x3c>)
1a00082e:	f811 5012 	ldrb.w	r5, [r1, r2, lsl #1]
1a000832:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1a000836:	784c      	ldrb	r4, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as output
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIROutput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] |= 1UL << pin;
1a000838:	4b0a      	ldr	r3, [pc, #40]	; (1a000864 <Board_LED_Init+0x40>)
1a00083a:	f505 6600 	add.w	r6, r5, #2048	; 0x800
1a00083e:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
1a000842:	2001      	movs	r0, #1
1a000844:	40a0      	lsls	r0, r4
1a000846:	4301      	orrs	r1, r0
1a000848:	f843 1026 	str.w	r1, [r3, r6, lsl #2]
	pGPIO->B[port][pin] = setting;
1a00084c:	eb03 1345 	add.w	r3, r3, r5, lsl #5
1a000850:	2100      	movs	r1, #0
1a000852:	5519      	strb	r1, [r3, r4]
   for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a000854:	3201      	adds	r2, #1
1a000856:	2a05      	cmp	r2, #5
1a000858:	d9e8      	bls.n	1a00082c <Board_LED_Init+0x8>
      Chip_GPIO_SetPinState(LPC_GPIO_PORT, io->port, io->pin, false);
   }
}
1a00085a:	bc70      	pop	{r4, r5, r6}
1a00085c:	4770      	bx	lr
1a00085e:	4770      	bx	lr
1a000860:	1a007770 	.word	0x1a007770
1a000864:	400f4000 	.word	0x400f4000

1a000868 <Board_TEC_Init>:


static void Board_TEC_Init()
{
   for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a000868:	2300      	movs	r3, #0
1a00086a:	2b03      	cmp	r3, #3
1a00086c:	d816      	bhi.n	1a00089c <Board_TEC_Init+0x34>
{
1a00086e:	b430      	push	{r4, r5}
      const struct gpio_t *io = &GpioButtons[i];
      Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a000870:	490b      	ldr	r1, [pc, #44]	; (1a0008a0 <Board_TEC_Init+0x38>)
1a000872:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a000876:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a00087a:	784d      	ldrb	r5, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as input
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIRInput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] &= ~(1UL << pin);
1a00087c:	4c09      	ldr	r4, [pc, #36]	; (1a0008a4 <Board_TEC_Init+0x3c>)
1a00087e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a000882:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a000886:	2001      	movs	r0, #1
1a000888:	40a8      	lsls	r0, r5
1a00088a:	ea21 0100 	bic.w	r1, r1, r0
1a00088e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
   for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a000892:	3301      	adds	r3, #1
1a000894:	2b03      	cmp	r3, #3
1a000896:	d9eb      	bls.n	1a000870 <Board_TEC_Init+0x8>
   }
}
1a000898:	bc30      	pop	{r4, r5}
1a00089a:	4770      	bx	lr
1a00089c:	4770      	bx	lr
1a00089e:	bf00      	nop
1a0008a0:	1a007768 	.word	0x1a007768
1a0008a4:	400f4000 	.word	0x400f4000

1a0008a8 <Board_GPIO_Init>:


static void Board_GPIO_Init()
{
   for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a0008a8:	2300      	movs	r3, #0
1a0008aa:	2b08      	cmp	r3, #8
1a0008ac:	d816      	bhi.n	1a0008dc <Board_GPIO_Init+0x34>
{
1a0008ae:	b430      	push	{r4, r5}
      const struct gpio_t *io = &GpioPorts[i];
      Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a0008b0:	490b      	ldr	r1, [pc, #44]	; (1a0008e0 <Board_GPIO_Init+0x38>)
1a0008b2:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a0008b6:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a0008ba:	784d      	ldrb	r5, [r1, #1]
1a0008bc:	4c09      	ldr	r4, [pc, #36]	; (1a0008e4 <Board_GPIO_Init+0x3c>)
1a0008be:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a0008c2:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a0008c6:	2001      	movs	r0, #1
1a0008c8:	40a8      	lsls	r0, r5
1a0008ca:	ea21 0100 	bic.w	r1, r1, r0
1a0008ce:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
   for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a0008d2:	3301      	adds	r3, #1
1a0008d4:	2b08      	cmp	r3, #8
1a0008d6:	d9eb      	bls.n	1a0008b0 <Board_GPIO_Init+0x8>
   }
}
1a0008d8:	bc30      	pop	{r4, r5}
1a0008da:	4770      	bx	lr
1a0008dc:	4770      	bx	lr
1a0008de:	bf00      	nop
1a0008e0:	1a00777c 	.word	0x1a00777c
1a0008e4:	400f4000 	.word	0x400f4000

1a0008e8 <Board_ADC_Init>:
   Chip_SSP_Enable(LPC_SSP1);
}


static void Board_ADC_Init()
{
1a0008e8:	b510      	push	{r4, lr}
1a0008ea:	b082      	sub	sp, #8
   ADC_CLOCK_SETUP_T cs;

   Chip_ADC_Init(LPC_ADC0, &cs);
1a0008ec:	4c08      	ldr	r4, [pc, #32]	; (1a000910 <Board_ADC_Init+0x28>)
1a0008ee:	4669      	mov	r1, sp
1a0008f0:	4620      	mov	r0, r4
1a0008f2:	f000 f9cb 	bl	1a000c8c <Chip_ADC_Init>
   Chip_ADC_SetSampleRate(LPC_ADC0, &cs, BOARD_ADC_SAMPLE_RATE);
1a0008f6:	4a07      	ldr	r2, [pc, #28]	; (1a000914 <Board_ADC_Init+0x2c>)
1a0008f8:	4669      	mov	r1, sp
1a0008fa:	4620      	mov	r0, r4
1a0008fc:	f000 fa31 	bl	1a000d62 <Chip_ADC_SetSampleRate>
   Chip_ADC_SetResolution(LPC_ADC0, &cs, BOARD_ADC_RESOLUTION);
1a000900:	2200      	movs	r2, #0
1a000902:	4669      	mov	r1, sp
1a000904:	4620      	mov	r0, r4
1a000906:	f000 fa45 	bl	1a000d94 <Chip_ADC_SetResolution>
}
1a00090a:	b002      	add	sp, #8
1a00090c:	bd10      	pop	{r4, pc}
1a00090e:	bf00      	nop
1a000910:	400e3000 	.word	0x400e3000
1a000914:	00061a80 	.word	0x00061a80

1a000918 <Board_SPI_Init>:
{
1a000918:	b510      	push	{r4, lr}
   Chip_SSP_Init(LPC_SSP1);
1a00091a:	4c0b      	ldr	r4, [pc, #44]	; (1a000948 <Board_SPI_Init+0x30>)
1a00091c:	4620      	mov	r0, r4
1a00091e:	f000 fe3b 	bl	1a001598 <Chip_SSP_Init>
 *						- SSP_MODE_SLAVE
 * @return	 Nothing
 */
STATIC INLINE void Chip_SSP_Set_Mode(LPC_SSP_T *pSSP, uint32_t mode)
{
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a000922:	6863      	ldr	r3, [r4, #4]
1a000924:	f023 0304 	bic.w	r3, r3, #4
1a000928:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a00092a:	6823      	ldr	r3, [r4, #0]
1a00092c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a000930:	f043 0307 	orr.w	r3, r3, #7
1a000934:	6023      	str	r3, [r4, #0]
   Chip_SSP_SetBitRate(LPC_SSP1, BOARD_SPI_SPEED);
1a000936:	4905      	ldr	r1, [pc, #20]	; (1a00094c <Board_SPI_Init+0x34>)
1a000938:	4620      	mov	r0, r4
1a00093a:	f000 fe0e 	bl	1a00155a <Chip_SSP_SetBitRate>
	pSSP->CR1 |= SSP_CR1_SSP_EN;
1a00093e:	6863      	ldr	r3, [r4, #4]
1a000940:	f043 0302 	orr.w	r3, r3, #2
1a000944:	6063      	str	r3, [r4, #4]
}
1a000946:	bd10      	pop	{r4, pc}
1a000948:	400c5000 	.word	0x400c5000
1a00094c:	000186a0 	.word	0x000186a0

1a000950 <Board_I2C_Init>:
{
1a000950:	b508      	push	{r3, lr}
   Chip_I2C_Init(I2C0);
1a000952:	2000      	movs	r0, #0
1a000954:	f000 fe4c 	bl	1a0015f0 <Chip_I2C_Init>
 *                  - I2C0_FAST_MODE_PLUS: Fast-mode Plus transmit
 * @return	Nothing
 */
STATIC INLINE void Chip_SCU_I2C0PinConfig(uint32_t I2C0Mode)
{
	LPC_SCU->SFSI2C0 = I2C0Mode;
1a000958:	4b04      	ldr	r3, [pc, #16]	; (1a00096c <Board_I2C_Init+0x1c>)
1a00095a:	f640 0208 	movw	r2, #2056	; 0x808
1a00095e:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
   Chip_I2C_SetClockRate(I2C0, BOARD_I2C_SPEED);
1a000962:	4903      	ldr	r1, [pc, #12]	; (1a000970 <Board_I2C_Init+0x20>)
1a000964:	2000      	movs	r0, #0
1a000966:	f000 fe55 	bl	1a001614 <Chip_I2C_SetClockRate>
}
1a00096a:	bd08      	pop	{r3, pc}
1a00096c:	40086000 	.word	0x40086000
1a000970:	000f4240 	.word	0x000f4240

1a000974 <Board_Debug_Init>:


void Board_Debug_Init(void)
{
1a000974:	b510      	push	{r4, lr}
   Chip_UART_Init(DEBUG_UART);
1a000976:	4c07      	ldr	r4, [pc, #28]	; (1a000994 <Board_Debug_Init+0x20>)
1a000978:	4620      	mov	r0, r4
1a00097a:	f000 f8b9 	bl	1a000af0 <Chip_UART_Init>
   Chip_UART_SetBaudFDR(DEBUG_UART, DEBUG_UART_BAUD_RATE);
1a00097e:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a000982:	4620      	mov	r0, r4
1a000984:	f000 f8de 	bl	1a000b44 <Chip_UART_SetBaudFDR>
 *			stop bit, and even (enabled) parity would be
 *			(UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_EN | UART_LCR_PARITY_EVEN)
 */
STATIC INLINE void Chip_UART_ConfigData(LPC_USART_T *pUART, uint32_t config)
{
	pUART->LCR = config;
1a000988:	2303      	movs	r3, #3
1a00098a:	60e3      	str	r3, [r4, #12]
    pUART->TER2 = UART_TER2_TXEN;
1a00098c:	2301      	movs	r3, #1
1a00098e:	65e3      	str	r3, [r4, #92]	; 0x5c
   Chip_UART_ConfigData(DEBUG_UART, DEBUG_UART_CONFIG);
   Chip_UART_TXEnable(DEBUG_UART);
}
1a000990:	bd10      	pop	{r4, pc}
1a000992:	bf00      	nop
1a000994:	400c1000 	.word	0x400c1000

1a000998 <Board_UARTPutChar>:
 * @note	Mask bits of the returned status value with UART_LSR_*
 *			definitions for specific statuses.
 */
STATIC INLINE uint32_t Chip_UART_ReadLineStatus(LPC_USART_T *pUART)
{
	return pUART->LSR;
1a000998:	4b03      	ldr	r3, [pc, #12]	; (1a0009a8 <Board_UARTPutChar+0x10>)
1a00099a:	695b      	ldr	r3, [r3, #20]


void Board_UARTPutChar(char ch)
{
   while ( !(Chip_UART_ReadLineStatus(DEBUG_UART) & UART_LSR_THRE));
1a00099c:	f013 0f20 	tst.w	r3, #32
1a0009a0:	d0fa      	beq.n	1a000998 <Board_UARTPutChar>
	pUART->THR = (uint32_t) data;
1a0009a2:	4b01      	ldr	r3, [pc, #4]	; (1a0009a8 <Board_UARTPutChar+0x10>)
1a0009a4:	6018      	str	r0, [r3, #0]
   Chip_UART_SendByte(DEBUG_UART, (uint8_t) ch);
}
1a0009a6:	4770      	bx	lr
1a0009a8:	400c1000 	.word	0x400c1000

1a0009ac <Board_UARTGetChar>:
	return pUART->LSR;
1a0009ac:	4b05      	ldr	r3, [pc, #20]	; (1a0009c4 <Board_UARTGetChar+0x18>)
1a0009ae:	695b      	ldr	r3, [r3, #20]


int Board_UARTGetChar(void)
{
   if (Chip_UART_ReadLineStatus(DEBUG_UART) & UART_LSR_RDR) {
1a0009b0:	f013 0f01 	tst.w	r3, #1
1a0009b4:	d003      	beq.n	1a0009be <Board_UARTGetChar+0x12>
	return (uint8_t) (pUART->RBR & UART_RBR_MASKBIT);
1a0009b6:	4b03      	ldr	r3, [pc, #12]	; (1a0009c4 <Board_UARTGetChar+0x18>)
1a0009b8:	6818      	ldr	r0, [r3, #0]
      return (int) Chip_UART_ReadByte(DEBUG_UART);
1a0009ba:	b2c0      	uxtb	r0, r0
1a0009bc:	4770      	bx	lr
   }
   return EOF;
1a0009be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
1a0009c2:	4770      	bx	lr
1a0009c4:	400c1000 	.word	0x400c1000

1a0009c8 <Board_Init>:
   Board_LED_Set(LEDNumber, !Board_LED_Test(LEDNumber));
}


void Board_Init(void)
{
1a0009c8:	b508      	push	{r3, lr}
   DEBUGINIT();
1a0009ca:	f7ff ffd3 	bl	1a000974 <Board_Debug_Init>
   Chip_GPIO_Init (LPC_GPIO_PORT);
1a0009ce:	4809      	ldr	r0, [pc, #36]	; (1a0009f4 <Board_Init+0x2c>)
1a0009d0:	f000 fcf6 	bl	1a0013c0 <Chip_GPIO_Init>

   Board_GPIO_Init();
1a0009d4:	f7ff ff68 	bl	1a0008a8 <Board_GPIO_Init>
   Board_ADC_Init();
1a0009d8:	f7ff ff86 	bl	1a0008e8 <Board_ADC_Init>
   Board_SPI_Init();
1a0009dc:	f7ff ff9c 	bl	1a000918 <Board_SPI_Init>
   Board_I2C_Init();
1a0009e0:	f7ff ffb6 	bl	1a000950 <Board_I2C_Init>

   Board_LED_Init();
1a0009e4:	f7ff ff1e 	bl	1a000824 <Board_LED_Init>
   Board_TEC_Init();
1a0009e8:	f7ff ff3e 	bl	1a000868 <Board_TEC_Init>
#ifdef USE_RMII
   Chip_ENET_RMIIEnable(LPC_ETHERNET);
#endif

   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate(); // @Eric
1a0009ec:	f000 fcde 	bl	1a0013ac <SystemCoreClockUpdate>
}
1a0009f0:	bd08      	pop	{r3, pc}
1a0009f2:	bf00      	nop
1a0009f4:	400f4000 	.word	0x400f4000

1a0009f8 <__stdio_putchar>:
   curADCChannel = 0xFF;
   return data;
}

void __stdio_putchar(int c)
{
1a0009f8:	b508      	push	{r3, lr}
   Board_UARTPutChar(c);
1a0009fa:	b2c0      	uxtb	r0, r0
1a0009fc:	f7ff ffcc 	bl	1a000998 <Board_UARTPutChar>
}
1a000a00:	bd08      	pop	{r3, pc}

1a000a02 <__stdio_getchar>:

int __stdio_getchar()
{
1a000a02:	b508      	push	{r3, lr}
   return Board_UARTGetChar();;
1a000a04:	f7ff ffd2 	bl	1a0009ac <Board_UARTGetChar>
}
1a000a08:	bd08      	pop	{r3, pc}

1a000a0a <__stdio_init>:

void __stdio_init()
{
1a000a0a:	b508      	push	{r3, lr}
   Board_Debug_Init();
1a000a0c:	f7ff ffb2 	bl	1a000974 <Board_Debug_Init>
1a000a10:	bd08      	pop	{r3, pc}
1a000a12:	Address 0x000000001a000a12 is out of bounds.


1a000a14 <Board_SetupMuxing>:
 * @return	Nothing
 */
STATIC INLINE void Chip_SCU_SetPinMuxing(const PINMUX_GRP_T *pinArray, uint32_t arrayLength)
{
	uint32_t ix;
	for (ix = 0; ix < arrayLength; ix++ ) {
1a000a14:	2300      	movs	r3, #0
1a000a16:	2b1c      	cmp	r3, #28
1a000a18:	d812      	bhi.n	1a000a40 <Board_SetupMuxing+0x2c>
    #endif
};


void Board_SetupMuxing(void)
{
1a000a1a:	b410      	push	{r4}
		Chip_SCU_PinMuxSet(pinArray[ix].pingrp, pinArray[ix].pinnum, pinArray[ix].modefunc);
1a000a1c:	4a09      	ldr	r2, [pc, #36]	; (1a000a44 <Board_SetupMuxing+0x30>)
1a000a1e:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a000a22:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a000a26:	784a      	ldrb	r2, [r1, #1]
1a000a28:	8848      	ldrh	r0, [r1, #2]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a000a2a:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a000a2e:	4906      	ldr	r1, [pc, #24]	; (1a000a48 <Board_SetupMuxing+0x34>)
1a000a30:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
	for (ix = 0; ix < arrayLength; ix++ ) {
1a000a34:	3301      	adds	r3, #1
1a000a36:	2b1c      	cmp	r3, #28
1a000a38:	d9f0      	bls.n	1a000a1c <Board_SetupMuxing+0x8>
    Chip_SCU_SetPinMuxing(pinmuxing, sizeof(pinmuxing) / sizeof(PINMUX_GRP_T));
}
1a000a3a:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000a3e:	4770      	bx	lr
1a000a40:	4770      	bx	lr
1a000a42:	bf00      	nop
1a000a44:	1a007798 	.word	0x1a007798
1a000a48:	40086000 	.word	0x40086000

1a000a4c <Board_SetupClocking>:


void Board_SetupClocking(void)
{
1a000a4c:	b510      	push	{r4, lr}
 */
STATIC INLINE void Chip_CREG_SetFlashAcceleration(uint32_t Hz)
{
	uint32_t FAValue = Hz / 21510000;

	LPC_CREG->FLASHCFGA = (LPC_CREG->FLASHCFGA & (~(0xF << 12))) | (FAValue << 12);
1a000a4e:	4a17      	ldr	r2, [pc, #92]	; (1a000aac <Board_SetupClocking+0x60>)
1a000a50:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a000a54:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a000a58:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a000a5c:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
	LPC_CREG->FLASHCFGB = (LPC_CREG->FLASHCFGB & (~(0xF << 12))) | (FAValue << 12);
1a000a60:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a000a64:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a000a68:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a000a6c:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
    Chip_CREG_SetFlashAcceleration(MAX_CLOCK_FREQ);
    Chip_SetupCoreClock(CLKIN_CRYSTAL, MAX_CLOCK_FREQ, true);
1a000a70:	2201      	movs	r2, #1
1a000a72:	490f      	ldr	r1, [pc, #60]	; (1a000ab0 <Board_SetupClocking+0x64>)
1a000a74:	2006      	movs	r0, #6
1a000a76:	f000 fca5 	bl	1a0013c4 <Chip_SetupCoreClock>

    /* Setup system base clocks and initial states. This won't enable and
       disable individual clocks, but sets up the base clock sources for
       each individual peripheral clock. */
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a000a7a:	2400      	movs	r4, #0
1a000a7c:	b14c      	cbz	r4, 1a000a92 <Board_SetupClocking+0x46>
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
                                c->powerdn);
    }

    /* Reset and enable 32Khz oscillator */
    LPC_CREG->CREG0 &= ~((1 << 3) | (1 << 2));
1a000a7e:	4b0b      	ldr	r3, [pc, #44]	; (1a000aac <Board_SetupClocking+0x60>)
1a000a80:	685a      	ldr	r2, [r3, #4]
1a000a82:	f022 020c 	bic.w	r2, r2, #12
1a000a86:	605a      	str	r2, [r3, #4]
    LPC_CREG->CREG0 |= (1 << 1) | (1 << 0);
1a000a88:	685a      	ldr	r2, [r3, #4]
1a000a8a:	f042 0203 	orr.w	r2, r2, #3
1a000a8e:	605a      	str	r2, [r3, #4]
}
1a000a90:	bd10      	pop	{r4, pc}
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
1a000a92:	4808      	ldr	r0, [pc, #32]	; (1a000ab4 <Board_SetupClocking+0x68>)
1a000a94:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a000a98:	2301      	movs	r3, #1
1a000a9a:	788a      	ldrb	r2, [r1, #2]
1a000a9c:	7849      	ldrb	r1, [r1, #1]
1a000a9e:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a000aa2:	f000 fbc5 	bl	1a001230 <Chip_Clock_SetBaseClock>
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a000aa6:	3401      	adds	r4, #1
1a000aa8:	e7e8      	b.n	1a000a7c <Board_SetupClocking+0x30>
1a000aaa:	bf00      	nop
1a000aac:	40043000 	.word	0x40043000
1a000ab0:	0c28cb00 	.word	0x0c28cb00
1a000ab4:	1a007794 	.word	0x1a007794

1a000ab8 <Board_SystemInit>:


/* Set up and initialize hardware prior to call to main */
void Board_SystemInit(void)
{
1a000ab8:	b508      	push	{r3, lr}
    /* Setup system clocking and memory. This is done early to allow the
       application and tools to clear memory and use scatter loading to
       external memory. */
    Board_SetupMuxing();
1a000aba:	f7ff ffab 	bl	1a000a14 <Board_SetupMuxing>
    Board_SetupClocking();
1a000abe:	f7ff ffc5 	bl	1a000a4c <Board_SetupClocking>
}
1a000ac2:	bd08      	pop	{r3, pc}

1a000ac4 <Chip_UART_GetIndex>:

/* Returns clock index for the peripheral block */
static int Chip_UART_GetIndex(LPC_USART_T *pUART)
{
	uint32_t base = (uint32_t) pUART;
	switch(base) {
1a000ac4:	4b09      	ldr	r3, [pc, #36]	; (1a000aec <Chip_UART_GetIndex+0x28>)
1a000ac6:	4298      	cmp	r0, r3
1a000ac8:	d009      	beq.n	1a000ade <Chip_UART_GetIndex+0x1a>
1a000aca:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a000ace:	4298      	cmp	r0, r3
1a000ad0:	d007      	beq.n	1a000ae2 <Chip_UART_GetIndex+0x1e>
1a000ad2:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a000ad6:	4298      	cmp	r0, r3
1a000ad8:	d005      	beq.n	1a000ae6 <Chip_UART_GetIndex+0x22>
		case LPC_USART0_BASE:
			return 0;
1a000ada:	2000      	movs	r0, #0
1a000adc:	4770      	bx	lr
		case LPC_UART1_BASE:
			return 1;
		case LPC_USART2_BASE:
			return 2;
1a000ade:	2002      	movs	r0, #2
1a000ae0:	4770      	bx	lr
		case LPC_USART3_BASE:
			return 3;
1a000ae2:	2003      	movs	r0, #3
1a000ae4:	4770      	bx	lr
			return 1;
1a000ae6:	2001      	movs	r0, #1
		default:
			return 0; /* Should never come here */
	}
}
1a000ae8:	4770      	bx	lr
1a000aea:	bf00      	nop
1a000aec:	400c1000 	.word	0x400c1000

1a000af0 <Chip_UART_Init>:
 * Public functions
 ****************************************************************************/

/* Initializes the pUART peripheral */
void Chip_UART_Init(LPC_USART_T *pUART)
{
1a000af0:	b530      	push	{r4, r5, lr}
1a000af2:	b083      	sub	sp, #12
1a000af4:	4604      	mov	r4, r0
    volatile uint32_t tmp;

	/* Enable UART clocking. UART base clock(s) must already be enabled */
	Chip_Clock_EnableOpts(UART_PClock[Chip_UART_GetIndex(pUART)], true, true, 1);
1a000af6:	f7ff ffe5 	bl	1a000ac4 <Chip_UART_GetIndex>
1a000afa:	2301      	movs	r3, #1
1a000afc:	461a      	mov	r2, r3
1a000afe:	4619      	mov	r1, r3
1a000b00:	4d0e      	ldr	r5, [pc, #56]	; (1a000b3c <Chip_UART_Init+0x4c>)
1a000b02:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
1a000b06:	f000 fbd9 	bl	1a0012bc <Chip_Clock_EnableOpts>
	pUART->FCR = fcr;
1a000b0a:	2307      	movs	r3, #7
1a000b0c:	60a3      	str	r3, [r4, #8]
    pUART->TER2 = 0;
1a000b0e:	2300      	movs	r3, #0
1a000b10:	65e3      	str	r3, [r4, #92]	; 0x5c

    /* Disable Tx */
    Chip_UART_TXDisable(pUART);

    /* Disable interrupts */
	pUART->IER = 0;
1a000b12:	6063      	str	r3, [r4, #4]
	/* Set LCR to default state */
	pUART->LCR = 0;
1a000b14:	60e3      	str	r3, [r4, #12]
	/* Set ACR to default state */
	pUART->ACR = 0;
1a000b16:	6223      	str	r3, [r4, #32]
    /* Set RS485 control to default state */
	pUART->RS485CTRL = 0;
1a000b18:	64e3      	str	r3, [r4, #76]	; 0x4c
	/* Set RS485 delay timer to default state */
	pUART->RS485DLY = 0;
1a000b1a:	6563      	str	r3, [r4, #84]	; 0x54
	/* Set RS485 addr match to default state */
	pUART->RS485ADRMATCH = 0;
1a000b1c:	6523      	str	r3, [r4, #80]	; 0x50

    /* Clear MCR */
    if (pUART == LPC_UART1) {
1a000b1e:	4b08      	ldr	r3, [pc, #32]	; (1a000b40 <Chip_UART_Init+0x50>)
1a000b20:	429c      	cmp	r4, r3
1a000b22:	d006      	beq.n	1a000b32 <Chip_UART_Init+0x42>
	pUART->LCR = config;
1a000b24:	2303      	movs	r3, #3
1a000b26:	60e3      	str	r3, [r4, #12]

	/* Default 8N1, with DLAB disabled */
	Chip_UART_ConfigData(pUART, (UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_DIS));

	/* Disable fractional divider */
	pUART->FDR = 0x10;
1a000b28:	2310      	movs	r3, #16
1a000b2a:	62a3      	str	r3, [r4, #40]	; 0x28

    (void) tmp;
1a000b2c:	9b01      	ldr	r3, [sp, #4]
}
1a000b2e:	b003      	add	sp, #12
1a000b30:	bd30      	pop	{r4, r5, pc}
		pUART->MCR = 0;
1a000b32:	2300      	movs	r3, #0
1a000b34:	6123      	str	r3, [r4, #16]
		tmp = pUART->MSR;
1a000b36:	69a3      	ldr	r3, [r4, #24]
1a000b38:	9301      	str	r3, [sp, #4]
1a000b3a:	e7f3      	b.n	1a000b24 <Chip_UART_Init+0x34>
1a000b3c:	1a007814 	.word	0x1a007814
1a000b40:	40082000 	.word	0x40082000

1a000b44 <Chip_UART_SetBaudFDR>:
    Chip_UART_ABIntHandler(pUART);
}

/* Determines and sets best dividers to get a target baud rate */
uint32_t Chip_UART_SetBaudFDR(LPC_USART_T *pUART, uint32_t baud)
{
1a000b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a000b48:	b083      	sub	sp, #12
1a000b4a:	9001      	str	r0, [sp, #4]
1a000b4c:	4688      	mov	r8, r1
	uint32_t sdiv = 0, sm = 1, sd = 0;
	uint32_t pclk, m, d;
	uint32_t odiff = -1UL; /* old best diff */

	/* Get base clock for the corresponding UART */
	pclk = Chip_Clock_GetRate(UART_BClock[Chip_UART_GetIndex(pUART)]);
1a000b4e:	f7ff ffb9 	bl	1a000ac4 <Chip_UART_GetIndex>
1a000b52:	4b32      	ldr	r3, [pc, #200]	; (1a000c1c <Chip_UART_SetBaudFDR+0xd8>)
1a000b54:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a000b58:	f000 fc02 	bl	1a001360 <Chip_Clock_GetRate>
1a000b5c:	4606      	mov	r6, r0
	uint32_t odiff = -1UL; /* old best diff */
1a000b5e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff

	/* Loop through all possible fractional divider values */
	for (m = 1; odiff && m < 16; m++) {
1a000b62:	2401      	movs	r4, #1
	uint32_t sdiv = 0, sm = 1, sd = 0;
1a000b64:	f04f 0b00 	mov.w	fp, #0
1a000b68:	46a2      	mov	sl, r4
1a000b6a:	46d9      	mov	r9, fp
	for (m = 1; odiff && m < 16; m++) {
1a000b6c:	e02a      	b.n	1a000bc4 <Chip_UART_SetBaudFDR+0x80>
			/* Upper 32-bit of dval has div */
			div = (uint32_t) (dval >> 32);

			/* Closer to next div */
			if ((int)diff < 0) {
				diff = -diff;
1a000b6e:	4242      	negs	r2, r0
				div ++;
1a000b70:	1c4b      	adds	r3, r1, #1
1a000b72:	e017      	b.n	1a000ba4 <Chip_UART_SetBaudFDR+0x60>
			sd = d;
			sm = m;
			odiff = diff;

			/* On perfect match, break loop */
			if(!diff) {
1a000b74:	b30a      	cbz	r2, 1a000bba <Chip_UART_SetBaudFDR+0x76>
			odiff = diff;
1a000b76:	4617      	mov	r7, r2
			sd = d;
1a000b78:	46ab      	mov	fp, r5
			sm = m;
1a000b7a:	46a2      	mov	sl, r4
			sdiv = div;
1a000b7c:	4699      	mov	r9, r3
		for (d = 0; d < m; d++) {
1a000b7e:	3501      	adds	r5, #1
1a000b80:	42ac      	cmp	r4, r5
1a000b82:	d91e      	bls.n	1a000bc2 <Chip_UART_SetBaudFDR+0x7e>
			uint64_t dval = (((uint64_t) pclk << 28) * m) / (baud * (m + d));
1a000b84:	0933      	lsrs	r3, r6, #4
1a000b86:	0730      	lsls	r0, r6, #28
1a000b88:	fba4 0100 	umull	r0, r1, r4, r0
1a000b8c:	fb04 1103 	mla	r1, r4, r3, r1
1a000b90:	1962      	adds	r2, r4, r5
1a000b92:	fb08 f202 	mul.w	r2, r8, r2
1a000b96:	2300      	movs	r3, #0
1a000b98:	f001 fcb2 	bl	1a002500 <__aeabi_uldivmod>
			diff = (uint32_t) dval;
1a000b9c:	4602      	mov	r2, r0
			div = (uint32_t) (dval >> 32);
1a000b9e:	460b      	mov	r3, r1
			if ((int)diff < 0) {
1a000ba0:	2800      	cmp	r0, #0
1a000ba2:	dbe4      	blt.n	1a000b6e <Chip_UART_SetBaudFDR+0x2a>
			if (odiff < diff || !div || (div >> 16) || (div < 3 && d)) {
1a000ba4:	4297      	cmp	r7, r2
1a000ba6:	d3ea      	bcc.n	1a000b7e <Chip_UART_SetBaudFDR+0x3a>
1a000ba8:	2b00      	cmp	r3, #0
1a000baa:	d0e8      	beq.n	1a000b7e <Chip_UART_SetBaudFDR+0x3a>
1a000bac:	0c19      	lsrs	r1, r3, #16
1a000bae:	d1e6      	bne.n	1a000b7e <Chip_UART_SetBaudFDR+0x3a>
1a000bb0:	2b02      	cmp	r3, #2
1a000bb2:	d8df      	bhi.n	1a000b74 <Chip_UART_SetBaudFDR+0x30>
1a000bb4:	2d00      	cmp	r5, #0
1a000bb6:	d0dd      	beq.n	1a000b74 <Chip_UART_SetBaudFDR+0x30>
1a000bb8:	e7e1      	b.n	1a000b7e <Chip_UART_SetBaudFDR+0x3a>
			odiff = diff;
1a000bba:	4617      	mov	r7, r2
			sd = d;
1a000bbc:	46ab      	mov	fp, r5
			sm = m;
1a000bbe:	46a2      	mov	sl, r4
			sdiv = div;
1a000bc0:	4699      	mov	r9, r3
	for (m = 1; odiff && m < 16; m++) {
1a000bc2:	3401      	adds	r4, #1
1a000bc4:	b11f      	cbz	r7, 1a000bce <Chip_UART_SetBaudFDR+0x8a>
1a000bc6:	2c0f      	cmp	r4, #15
1a000bc8:	d801      	bhi.n	1a000bce <Chip_UART_SetBaudFDR+0x8a>
		for (d = 0; d < m; d++) {
1a000bca:	2500      	movs	r5, #0
1a000bcc:	e7d8      	b.n	1a000b80 <Chip_UART_SetBaudFDR+0x3c>
			}
		}
	}

	/* Return 0 if a vaild divisor is not possible */
	if (!sdiv) {
1a000bce:	f1b9 0f00 	cmp.w	r9, #0
1a000bd2:	d01e      	beq.n	1a000c12 <Chip_UART_SetBaudFDR+0xce>
	pUART->LCR |= UART_LCR_DLAB_EN;
1a000bd4:	9a01      	ldr	r2, [sp, #4]
1a000bd6:	4611      	mov	r1, r2
1a000bd8:	68d3      	ldr	r3, [r2, #12]
1a000bda:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a000bde:	60d3      	str	r3, [r2, #12]
	pUART->DLL = (uint32_t) dll;
1a000be0:	fa5f f389 	uxtb.w	r3, r9
1a000be4:	6013      	str	r3, [r2, #0]
	pUART->DLM = (uint32_t) dlm;
1a000be6:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a000bea:	6053      	str	r3, [r2, #4]
	pUART->LCR &= ~UART_LCR_DLAB_EN;
1a000bec:	68d3      	ldr	r3, [r2, #12]
1a000bee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a000bf2:	60d3      	str	r3, [r2, #12]
	Chip_UART_EnableDivisorAccess(pUART);
	Chip_UART_SetDivisorLatches(pUART, UART_LOAD_DLL(sdiv), UART_LOAD_DLM(sdiv));
	Chip_UART_DisableDivisorAccess(pUART);

	/* Set best fractional divider */
	pUART->FDR = (UART_FDR_MULVAL(sm) | UART_FDR_DIVADDVAL(sd));
1a000bf4:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a000bf8:	b2db      	uxtb	r3, r3
1a000bfa:	f00b 020f 	and.w	r2, fp, #15
1a000bfe:	4313      	orrs	r3, r2
1a000c00:	628b      	str	r3, [r1, #40]	; 0x28

	/* Return actual baud rate */
	return (pclk >> 4) * sm / (sdiv * (sm + sd));
1a000c02:	0933      	lsrs	r3, r6, #4
1a000c04:	fb0a f303 	mul.w	r3, sl, r3
1a000c08:	44da      	add	sl, fp
1a000c0a:	fb09 f90a 	mul.w	r9, r9, sl
1a000c0e:	fbb3 f9f9 	udiv	r9, r3, r9
}
1a000c12:	4648      	mov	r0, r9
1a000c14:	b003      	add	sp, #12
1a000c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a000c1a:	bf00      	nop
1a000c1c:	1a00780c 	.word	0x1a00780c

1a000c20 <Chip_ADC_GetClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_ADC_GetClockIndex(LPC_ADC_T *pADC)
{
	CHIP_CCU_CLK_T clkADC;

	if (pADC == LPC_ADC1) {
1a000c20:	4b03      	ldr	r3, [pc, #12]	; (1a000c30 <Chip_ADC_GetClockIndex+0x10>)
1a000c22:	4298      	cmp	r0, r3
1a000c24:	d001      	beq.n	1a000c2a <Chip_ADC_GetClockIndex+0xa>
		clkADC = CLK_APB3_ADC1;
	}
	else {
		clkADC = CLK_APB3_ADC0;
1a000c26:	2003      	movs	r0, #3
	}

	return clkADC;
}
1a000c28:	4770      	bx	lr
		clkADC = CLK_APB3_ADC1;
1a000c2a:	2004      	movs	r0, #4
1a000c2c:	4770      	bx	lr
1a000c2e:	bf00      	nop
1a000c30:	400e4000 	.word	0x400e4000

1a000c34 <getClkDiv>:

/* Get divider value */
STATIC uint8_t getClkDiv(LPC_ADC_T *pADC, bool burstMode, uint32_t adcRate, uint8_t clks)
{
1a000c34:	b570      	push	{r4, r5, r6, lr}
1a000c36:	460d      	mov	r5, r1
1a000c38:	4614      	mov	r4, r2
1a000c3a:	461e      	mov	r6, r3
	   A/D converter, which should be less than or equal to 4.5MHz.
	   A fully conversion requires (bits_accuracy+1) of these clocks.
	   ADC Clock = PCLK_ADC0 / (CLKDIV + 1);
	   ADC rate = ADC clock / (the number of clocks required for each conversion);
	 */
	adcBlockFreq = Chip_Clock_GetRate(Chip_ADC_GetClockIndex(pADC));
1a000c3c:	f7ff fff0 	bl	1a000c20 <Chip_ADC_GetClockIndex>
1a000c40:	f000 fb8e 	bl	1a001360 <Chip_Clock_GetRate>
	if (burstMode) {
1a000c44:	b155      	cbz	r5, 1a000c5c <getClkDiv+0x28>
		fullAdcRate = adcRate * clks;
1a000c46:	fb04 f406 	mul.w	r4, r4, r6
	else {
		fullAdcRate = adcRate * getFullConvClk();
	}

	/* Get the round value by fomular: (2*A + B)/(2*B) */
	div = ((adcBlockFreq * 2 + fullAdcRate) / (fullAdcRate * 2)) - 1;
1a000c4a:	eb04 0040 	add.w	r0, r4, r0, lsl #1
1a000c4e:	0064      	lsls	r4, r4, #1
1a000c50:	fbb0 f0f4 	udiv	r0, r0, r4
1a000c54:	b2c0      	uxtb	r0, r0
1a000c56:	3801      	subs	r0, #1
	return div;
}
1a000c58:	b2c0      	uxtb	r0, r0
1a000c5a:	bd70      	pop	{r4, r5, r6, pc}
		fullAdcRate = adcRate * getFullConvClk();
1a000c5c:	eb04 0384 	add.w	r3, r4, r4, lsl #2
1a000c60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
1a000c64:	e7f1      	b.n	1a000c4a <getClkDiv+0x16>

1a000c66 <setStartMode>:

/* Set start mode for ADC */
void setStartMode(LPC_ADC_T *pADC, uint8_t start_mode)
{
	uint32_t temp;
	temp = pADC->CR & (~ADC_CR_START_MASK);
1a000c66:	6803      	ldr	r3, [r0, #0]
1a000c68:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
	pADC->CR = temp | (ADC_CR_START_MODE_SEL((uint32_t) start_mode));
1a000c6c:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
1a000c70:	6001      	str	r1, [r0, #0]
}
1a000c72:	4770      	bx	lr

1a000c74 <readAdcVal>:

/* Get the ADC value */
Status readAdcVal(LPC_ADC_T *pADC, uint8_t channel, uint16_t *data)
{
	uint32_t temp;
	temp = pADC->DR[channel];
1a000c74:	3104      	adds	r1, #4
1a000c76:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
	if (!ADC_DR_DONE(temp)) {
1a000c7a:	2b00      	cmp	r3, #0
1a000c7c:	da04      	bge.n	1a000c88 <readAdcVal+0x14>
		return ERROR;
	}
	/*	if(ADC_DR_OVERRUN(temp) && (pADC->CR & ADC_CR_BURST)) */
	/*	return ERROR; */
	*data = (uint16_t) ADC_DR_RESULT(temp);
1a000c7e:	f3c3 1389 	ubfx	r3, r3, #6, #10
1a000c82:	8013      	strh	r3, [r2, #0]
	return SUCCESS;
1a000c84:	2001      	movs	r0, #1
1a000c86:	4770      	bx	lr
		return ERROR;
1a000c88:	2000      	movs	r0, #0
}
1a000c8a:	4770      	bx	lr

1a000c8c <Chip_ADC_Init>:
 * Public functions
 ****************************************************************************/

/* Initialize the ADC peripheral and the ADC setup structure to default value */
void Chip_ADC_Init(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup)
{
1a000c8c:	b538      	push	{r3, r4, r5, lr}
1a000c8e:	4605      	mov	r5, r0
1a000c90:	460c      	mov	r4, r1
	uint8_t div;
	uint32_t cr = 0;
	uint32_t clk;

	Chip_Clock_EnableOpts(Chip_ADC_GetClockIndex(pADC), true, true, 1);
1a000c92:	f7ff ffc5 	bl	1a000c20 <Chip_ADC_GetClockIndex>
1a000c96:	2301      	movs	r3, #1
1a000c98:	461a      	mov	r2, r3
1a000c9a:	4619      	mov	r1, r3
1a000c9c:	f000 fb0e 	bl	1a0012bc <Chip_Clock_EnableOpts>

	pADC->INTEN = 0;		/* Disable all interrupts */
1a000ca0:	2100      	movs	r1, #0
1a000ca2:	60e9      	str	r1, [r5, #12]

	cr |= ADC_CR_PDN;
	ADCSetup->adcRate = ADC_MAX_SAMPLE_RATE;
1a000ca4:	4a08      	ldr	r2, [pc, #32]	; (1a000cc8 <Chip_ADC_Init+0x3c>)
1a000ca6:	6022      	str	r2, [r4, #0]
	ADCSetup->bitsAccuracy = ADC_10BITS;
1a000ca8:	7121      	strb	r1, [r4, #4]
	clk = 11;
	ADCSetup->burstMode = false;
1a000caa:	7161      	strb	r1, [r4, #5]
	div = getClkDiv(pADC, false, ADCSetup->adcRate, clk);
1a000cac:	230b      	movs	r3, #11
1a000cae:	4628      	mov	r0, r5
1a000cb0:	f7ff ffc0 	bl	1a000c34 <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a000cb4:	0200      	lsls	r0, r0, #8
1a000cb6:	f440 1300 	orr.w	r3, r0, #2097152	; 0x200000
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000cba:	7920      	ldrb	r0, [r4, #4]
1a000cbc:	0440      	lsls	r0, r0, #17
1a000cbe:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a000cc2:	4318      	orrs	r0, r3
	pADC->CR = cr;
1a000cc4:	6028      	str	r0, [r5, #0]
}
1a000cc6:	bd38      	pop	{r3, r4, r5, pc}
1a000cc8:	00061a80 	.word	0x00061a80

1a000ccc <Chip_ADC_DeInit>:

/* Shutdown ADC */
void Chip_ADC_DeInit(LPC_ADC_T *pADC)
{
1a000ccc:	b508      	push	{r3, lr}
	pADC->INTEN = 0x00000100;
1a000cce:	f44f 7280 	mov.w	r2, #256	; 0x100
1a000cd2:	60c2      	str	r2, [r0, #12]
	pADC->CR = 0;
1a000cd4:	2200      	movs	r2, #0
1a000cd6:	6002      	str	r2, [r0, #0]
	Chip_Clock_Disable(Chip_ADC_GetClockIndex(pADC));
1a000cd8:	f7ff ffa2 	bl	1a000c20 <Chip_ADC_GetClockIndex>
1a000cdc:	f000 fb26 	bl	1a00132c <Chip_Clock_Disable>
}
1a000ce0:	bd08      	pop	{r3, pc}

1a000ce2 <Chip_ADC_ReadValue>:

/* Get the ADC value */
Status Chip_ADC_ReadValue(LPC_ADC_T *pADC, uint8_t channel, uint16_t *data)
{
1a000ce2:	b508      	push	{r3, lr}
	return readAdcVal(pADC, channel, data);
1a000ce4:	f7ff ffc6 	bl	1a000c74 <readAdcVal>
}
1a000ce8:	bd08      	pop	{r3, pc}

1a000cea <Chip_ADC_ReadStatus>:

/* Get ADC Channel status from ADC data register */
FlagStatus Chip_ADC_ReadStatus(LPC_ADC_T *pADC, uint8_t channel, uint32_t StatusType)
{
	switch (StatusType) {
1a000cea:	2a01      	cmp	r2, #1
1a000cec:	d00a      	beq.n	1a000d04 <Chip_ADC_ReadStatus+0x1a>
1a000cee:	b11a      	cbz	r2, 1a000cf8 <Chip_ADC_ReadStatus+0xe>
1a000cf0:	2a02      	cmp	r2, #2
1a000cf2:	d00f      	beq.n	1a000d14 <Chip_ADC_ReadStatus+0x2a>
		return pADC->STAT >> 16 ? SET : RESET;

	default:
		break;
	}
	return RESET;
1a000cf4:	2000      	movs	r0, #0
1a000cf6:	4770      	bx	lr
		return (pADC->STAT & (1UL << channel)) ? SET : RESET;
1a000cf8:	6b00      	ldr	r0, [r0, #48]	; 0x30
1a000cfa:	40c8      	lsrs	r0, r1
1a000cfc:	f000 0001 	and.w	r0, r0, #1
1a000d00:	b2c0      	uxtb	r0, r0
1a000d02:	4770      	bx	lr
		channel += 8;
1a000d04:	3108      	adds	r1, #8
1a000d06:	b2c9      	uxtb	r1, r1
		return (pADC->STAT & (1UL << channel)) ? SET : RESET;
1a000d08:	6b00      	ldr	r0, [r0, #48]	; 0x30
1a000d0a:	40c8      	lsrs	r0, r1
1a000d0c:	f000 0001 	and.w	r0, r0, #1
1a000d10:	b2c0      	uxtb	r0, r0
1a000d12:	4770      	bx	lr
		return pADC->STAT >> 16 ? SET : RESET;
1a000d14:	6b03      	ldr	r3, [r0, #48]	; 0x30
1a000d16:	0c1b      	lsrs	r3, r3, #16
1a000d18:	bf14      	ite	ne
1a000d1a:	2001      	movne	r0, #1
1a000d1c:	2000      	moveq	r0, #0
}
1a000d1e:	4770      	bx	lr

1a000d20 <Chip_ADC_Int_SetChannelCmd>:

/* Enable/Disable interrupt for ADC channel */
void Chip_ADC_Int_SetChannelCmd(LPC_ADC_T *pADC, uint8_t channel, FunctionalState NewState)
{
	if (NewState == ENABLE) {
1a000d20:	2a01      	cmp	r2, #1
1a000d22:	d006      	beq.n	1a000d32 <Chip_ADC_Int_SetChannelCmd+0x12>
		pADC->INTEN |= (1UL << channel);
	}
	else {
		pADC->INTEN &= (~(1UL << channel));
1a000d24:	68c3      	ldr	r3, [r0, #12]
1a000d26:	2201      	movs	r2, #1
1a000d28:	408a      	lsls	r2, r1
1a000d2a:	ea23 0302 	bic.w	r3, r3, r2
1a000d2e:	60c3      	str	r3, [r0, #12]
1a000d30:	4770      	bx	lr
{
1a000d32:	b410      	push	{r4}
		pADC->INTEN |= (1UL << channel);
1a000d34:	68c4      	ldr	r4, [r0, #12]
1a000d36:	408a      	lsls	r2, r1
1a000d38:	4314      	orrs	r4, r2
1a000d3a:	60c4      	str	r4, [r0, #12]
	}
}
1a000d3c:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000d40:	4770      	bx	lr

1a000d42 <Chip_ADC_SetStartMode>:

/* Select the mode starting the AD conversion */
void Chip_ADC_SetStartMode(LPC_ADC_T *pADC, ADC_START_MODE_T mode, ADC_EDGE_CFG_T EdgeOption)
{
1a000d42:	b508      	push	{r3, lr}
	if ((mode != ADC_START_NOW) && (mode != ADC_NO_START)) {
1a000d44:	2901      	cmp	r1, #1
1a000d46:	d904      	bls.n	1a000d52 <Chip_ADC_SetStartMode+0x10>
		if (EdgeOption) {
1a000d48:	b132      	cbz	r2, 1a000d58 <Chip_ADC_SetStartMode+0x16>
			pADC->CR |= ADC_CR_EDGE;
1a000d4a:	6803      	ldr	r3, [r0, #0]
1a000d4c:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
1a000d50:	6003      	str	r3, [r0, #0]
		}
		else {
			pADC->CR &= ~ADC_CR_EDGE;
		}
	}
	setStartMode(pADC, (uint8_t) mode);
1a000d52:	f7ff ff88 	bl	1a000c66 <setStartMode>
}
1a000d56:	bd08      	pop	{r3, pc}
			pADC->CR &= ~ADC_CR_EDGE;
1a000d58:	6803      	ldr	r3, [r0, #0]
1a000d5a:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
1a000d5e:	6003      	str	r3, [r0, #0]
1a000d60:	e7f7      	b.n	1a000d52 <Chip_ADC_SetStartMode+0x10>

1a000d62 <Chip_ADC_SetSampleRate>:

/* Set the ADC Sample rate */
void Chip_ADC_SetSampleRate(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, uint32_t rate)
{
1a000d62:	b570      	push	{r4, r5, r6, lr}
1a000d64:	4605      	mov	r5, r0
1a000d66:	460e      	mov	r6, r1
	uint8_t div;
	uint32_t cr;

	cr = pADC->CR & (~ADC_SAMPLE_RATE_CONFIG_MASK);
1a000d68:	6804      	ldr	r4, [r0, #0]
1a000d6a:	f424 246f 	bic.w	r4, r4, #978944	; 0xef000
1a000d6e:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
	ADCSetup->adcRate = rate;
1a000d72:	600a      	str	r2, [r1, #0]
	div = getClkDiv(pADC, ADCSetup->burstMode, rate, (11 - ADCSetup->bitsAccuracy));
1a000d74:	790b      	ldrb	r3, [r1, #4]
1a000d76:	f1c3 030b 	rsb	r3, r3, #11
1a000d7a:	b2db      	uxtb	r3, r3
1a000d7c:	7949      	ldrb	r1, [r1, #5]
1a000d7e:	f7ff ff59 	bl	1a000c34 <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a000d82:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000d86:	7933      	ldrb	r3, [r6, #4]
1a000d88:	045b      	lsls	r3, r3, #17
1a000d8a:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
1a000d8e:	4303      	orrs	r3, r0
	pADC->CR = cr;
1a000d90:	602b      	str	r3, [r5, #0]
}
1a000d92:	bd70      	pop	{r4, r5, r6, pc}

1a000d94 <Chip_ADC_SetResolution>:

/* Set the ADC accuracy bits */
void Chip_ADC_SetResolution(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, ADC_RESOLUTION_T resolution)
{
1a000d94:	b508      	push	{r3, lr}
	ADCSetup->bitsAccuracy = resolution;
1a000d96:	710a      	strb	r2, [r1, #4]
	Chip_ADC_SetSampleRate(pADC, ADCSetup, ADCSetup->adcRate);
1a000d98:	680a      	ldr	r2, [r1, #0]
1a000d9a:	f7ff ffe2 	bl	1a000d62 <Chip_ADC_SetSampleRate>
}
1a000d9e:	bd08      	pop	{r3, pc}

1a000da0 <Chip_ADC_EnableChannel>:

/* Enable or disable the ADC channel on ADC peripheral */
void Chip_ADC_EnableChannel(LPC_ADC_T *pADC, ADC_CHANNEL_T channel, FunctionalState NewState)
{
	if (NewState == ENABLE) {
1a000da0:	2a01      	cmp	r2, #1
1a000da2:	d00a      	beq.n	1a000dba <Chip_ADC_EnableChannel+0x1a>
		pADC->CR |= ADC_CR_CH_SEL(channel);
	}
	else {
		pADC->CR &= ~ADC_CR_START_MASK;
1a000da4:	6802      	ldr	r2, [r0, #0]
1a000da6:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
1a000daa:	6002      	str	r2, [r0, #0]
		pADC->CR &= ~ADC_CR_CH_SEL(channel);
1a000dac:	6803      	ldr	r3, [r0, #0]
1a000dae:	2201      	movs	r2, #1
1a000db0:	408a      	lsls	r2, r1
1a000db2:	ea23 0302 	bic.w	r3, r3, r2
1a000db6:	6003      	str	r3, [r0, #0]
1a000db8:	4770      	bx	lr
{
1a000dba:	b410      	push	{r4}
		pADC->CR |= ADC_CR_CH_SEL(channel);
1a000dbc:	6804      	ldr	r4, [r0, #0]
1a000dbe:	408a      	lsls	r2, r1
1a000dc0:	4314      	orrs	r4, r2
1a000dc2:	6004      	str	r4, [r0, #0]
	}
}
1a000dc4:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000dc8:	4770      	bx	lr

1a000dca <Chip_ADC_SetBurstCmd>:

/* Enable burst mode */
void Chip_ADC_SetBurstCmd(LPC_ADC_T *pADC, FunctionalState NewState)
{
1a000dca:	b538      	push	{r3, r4, r5, lr}
1a000dcc:	4604      	mov	r4, r0
1a000dce:	460d      	mov	r5, r1
	setStartMode(pADC, ADC_NO_START);
1a000dd0:	2100      	movs	r1, #0
1a000dd2:	f7ff ff48 	bl	1a000c66 <setStartMode>
	
    if (NewState == DISABLE) {
1a000dd6:	b925      	cbnz	r5, 1a000de2 <Chip_ADC_SetBurstCmd+0x18>
		pADC->CR &= ~ADC_CR_BURST;
1a000dd8:	6823      	ldr	r3, [r4, #0]
1a000dda:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
1a000dde:	6023      	str	r3, [r4, #0]
	}
	else {
		pADC->CR |= ADC_CR_BURST;
	}
}
1a000de0:	bd38      	pop	{r3, r4, r5, pc}
		pADC->CR |= ADC_CR_BURST;
1a000de2:	6823      	ldr	r3, [r4, #0]
1a000de4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
1a000de8:	6023      	str	r3, [r4, #0]
}
1a000dea:	e7f9      	b.n	1a000de0 <Chip_ADC_SetBurstCmd+0x16>

1a000dec <pll_calc_divs>:
		return -val;
	return val;
}

static void pll_calc_divs(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000dec:	b4f0      	push	{r4, r5, r6, r7}

	uint32_t prev = freq;
	int n, m, p;

	/* When direct mode is set FBSEL should be a don't care */
	if (ppll->ctrl & (1 << 7)) {
1a000dee:	680b      	ldr	r3, [r1, #0]
1a000df0:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000df4:	d002      	beq.n	1a000dfc <pll_calc_divs+0x10>
		ppll->ctrl &= ~(1 << 6);
1a000df6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000dfa:	600b      	str	r3, [r1, #0]
	}
	for (n = 1; n <= 4; n++) {
		for (p = 0; p < 4; p ++) {
1a000dfc:	4607      	mov	r7, r0
1a000dfe:	2501      	movs	r5, #1
1a000e00:	e03a      	b.n	1a000e78 <pll_calc_divs+0x8c>
			for (m = 1; m <= 256; m++) {
				uint32_t fcco, fout;
				if (ppll->ctrl & (1 << 6)) {
					fcco = ((m << (p + 1)) * ppll->fin) / n;
				} else {
					fcco = (m * ppll->fin) / n;
1a000e02:	694b      	ldr	r3, [r1, #20]
1a000e04:	fb03 f302 	mul.w	r3, r3, r2
1a000e08:	fbb3 f3f5 	udiv	r3, r3, r5
1a000e0c:	e01c      	b.n	1a000e48 <pll_calc_divs+0x5c>
				}
				if (fcco < PLL_MIN_CCO_FREQ) continue;
				if (fcco > PLL_MAX_CCO_FREQ) break;
				if (ppll->ctrl & (1 << 7)) {
					fout = fcco;
1a000e0e:	461c      	mov	r4, r3
	if (val < 0)
1a000e10:	ebb0 0c04 	subs.w	ip, r0, r4
1a000e14:	d427      	bmi.n	1a000e66 <pll_calc_divs+0x7a>
				} else {
					fout = fcco >> (p + 1);
				}

				if (ABS(freq - fout) < prev) {
1a000e16:	4567      	cmp	r7, ip
1a000e18:	d906      	bls.n	1a000e28 <pll_calc_divs+0x3c>
					ppll->nsel = n;
1a000e1a:	608d      	str	r5, [r1, #8]
					ppll->psel = p + 1;
1a000e1c:	1c77      	adds	r7, r6, #1
1a000e1e:	60cf      	str	r7, [r1, #12]
					ppll->msel = m;
1a000e20:	610a      	str	r2, [r1, #16]
					ppll->fout = fout;
1a000e22:	618c      	str	r4, [r1, #24]
					ppll->fcco = fcco;
1a000e24:	61cb      	str	r3, [r1, #28]
					prev = ABS(freq - fout);
1a000e26:	4667      	mov	r7, ip
			for (m = 1; m <= 256; m++) {
1a000e28:	3201      	adds	r2, #1
1a000e2a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
1a000e2e:	dc1d      	bgt.n	1a000e6c <pll_calc_divs+0x80>
				if (ppll->ctrl & (1 << 6)) {
1a000e30:	680c      	ldr	r4, [r1, #0]
1a000e32:	f014 0f40 	tst.w	r4, #64	; 0x40
1a000e36:	d0e4      	beq.n	1a000e02 <pll_calc_divs+0x16>
					fcco = ((m << (p + 1)) * ppll->fin) / n;
1a000e38:	1c73      	adds	r3, r6, #1
1a000e3a:	fa02 fc03 	lsl.w	ip, r2, r3
1a000e3e:	694b      	ldr	r3, [r1, #20]
1a000e40:	fb03 f30c 	mul.w	r3, r3, ip
1a000e44:	fbb3 f3f5 	udiv	r3, r3, r5
				if (fcco < PLL_MIN_CCO_FREQ) continue;
1a000e48:	f8df c038 	ldr.w	ip, [pc, #56]	; 1a000e84 <pll_calc_divs+0x98>
1a000e4c:	4563      	cmp	r3, ip
1a000e4e:	d9eb      	bls.n	1a000e28 <pll_calc_divs+0x3c>
				if (fcco > PLL_MAX_CCO_FREQ) break;
1a000e50:	f8df c034 	ldr.w	ip, [pc, #52]	; 1a000e88 <pll_calc_divs+0x9c>
1a000e54:	4563      	cmp	r3, ip
1a000e56:	d809      	bhi.n	1a000e6c <pll_calc_divs+0x80>
				if (ppll->ctrl & (1 << 7)) {
1a000e58:	f014 0f80 	tst.w	r4, #128	; 0x80
1a000e5c:	d1d7      	bne.n	1a000e0e <pll_calc_divs+0x22>
					fout = fcco >> (p + 1);
1a000e5e:	1c74      	adds	r4, r6, #1
1a000e60:	fa23 f404 	lsr.w	r4, r3, r4
1a000e64:	e7d4      	b.n	1a000e10 <pll_calc_divs+0x24>
		return -val;
1a000e66:	f1cc 0c00 	rsb	ip, ip, #0
1a000e6a:	e7d4      	b.n	1a000e16 <pll_calc_divs+0x2a>
		for (p = 0; p < 4; p ++) {
1a000e6c:	3601      	adds	r6, #1
1a000e6e:	2e03      	cmp	r6, #3
1a000e70:	dc01      	bgt.n	1a000e76 <pll_calc_divs+0x8a>
			for (m = 1; m <= 256; m++) {
1a000e72:	2201      	movs	r2, #1
1a000e74:	e7d9      	b.n	1a000e2a <pll_calc_divs+0x3e>
	for (n = 1; n <= 4; n++) {
1a000e76:	3501      	adds	r5, #1
1a000e78:	2d04      	cmp	r5, #4
1a000e7a:	dc01      	bgt.n	1a000e80 <pll_calc_divs+0x94>
		for (p = 0; p < 4; p ++) {
1a000e7c:	2600      	movs	r6, #0
1a000e7e:	e7f6      	b.n	1a000e6e <pll_calc_divs+0x82>
				}
			}
		}
	}
}
1a000e80:	bcf0      	pop	{r4, r5, r6, r7}
1a000e82:	4770      	bx	lr
1a000e84:	094c5eff 	.word	0x094c5eff
1a000e88:	1312d000 	.word	0x1312d000

1a000e8c <pll_get_frac>:

static void pll_get_frac(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
1a000e8e:	b099      	sub	sp, #100	; 0x64
1a000e90:	4605      	mov	r5, r0
1a000e92:	460c      	mov	r4, r1
	int diff[3];
	PLL_PARAM_T pll[3] = {{0},{0},{0}};
1a000e94:	225c      	movs	r2, #92	; 0x5c
1a000e96:	2100      	movs	r1, #0
1a000e98:	a801      	add	r0, sp, #4
1a000e9a:	f001 fd71 	bl	1a002980 <memset>

	/* Try direct mode */
	pll[0].ctrl |= (1 << 7);
1a000e9e:	2380      	movs	r3, #128	; 0x80
1a000ea0:	9300      	str	r3, [sp, #0]
	pll[0].fin = ppll->fin;
1a000ea2:	6963      	ldr	r3, [r4, #20]
1a000ea4:	9305      	str	r3, [sp, #20]
	pll[0].srcin = ppll->srcin;
1a000ea6:	7923      	ldrb	r3, [r4, #4]
1a000ea8:	f88d 3004 	strb.w	r3, [sp, #4]
	pll_calc_divs(freq, &pll[0]);
1a000eac:	4669      	mov	r1, sp
1a000eae:	4628      	mov	r0, r5
1a000eb0:	f7ff ff9c 	bl	1a000dec <pll_calc_divs>
	if (pll[0].fout == freq) {
1a000eb4:	9b06      	ldr	r3, [sp, #24]
1a000eb6:	42ab      	cmp	r3, r5
1a000eb8:	d027      	beq.n	1a000f0a <pll_get_frac+0x7e>
	if (val < 0)
1a000eba:	1aeb      	subs	r3, r5, r3
1a000ebc:	d42e      	bmi.n	1a000f1c <pll_get_frac+0x90>
		*ppll = pll[0];
		return ;
	}
	diff[0] = ABS(freq - pll[0].fout);
1a000ebe:	461e      	mov	r6, r3

	/* Try non-Integer mode */
	pll[2].ctrl &= ~(1 << 6);			// need to set FBSEL to 0
1a000ec0:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a000ec2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000ec6:	9310      	str	r3, [sp, #64]	; 0x40
	pll[2].fin = ppll->fin;
1a000ec8:	6963      	ldr	r3, [r4, #20]
1a000eca:	9315      	str	r3, [sp, #84]	; 0x54
	pll[2].srcin = ppll->srcin;
1a000ecc:	7923      	ldrb	r3, [r4, #4]
1a000ece:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
	pll_calc_divs(freq, &pll[2]);
1a000ed2:	a910      	add	r1, sp, #64	; 0x40
1a000ed4:	4628      	mov	r0, r5
1a000ed6:	f7ff ff89 	bl	1a000dec <pll_calc_divs>
	if (pll[2].fout == freq) {
1a000eda:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a000edc:	42ab      	cmp	r3, r5
1a000ede:	d01f      	beq.n	1a000f20 <pll_get_frac+0x94>
	if (val < 0)
1a000ee0:	1aeb      	subs	r3, r5, r3
1a000ee2:	d425      	bmi.n	1a000f30 <pll_get_frac+0xa4>
		*ppll = pll[2];
		return ;
	}
	diff[2] = ABS(freq - pll[2].fout);
1a000ee4:	461f      	mov	r7, r3
	
	if (freq <= 110000000) {
1a000ee6:	4b2b      	ldr	r3, [pc, #172]	; (1a000f94 <pll_get_frac+0x108>)
1a000ee8:	429d      	cmp	r5, r3
1a000eea:	d923      	bls.n	1a000f34 <pll_get_frac+0xa8>
		if (pll[1].fout == freq) {
			*ppll = pll[1];
			return ;
		}
	}
	diff[1] = ABS(freq - pll[1].fout);
1a000eec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	if (val < 0)
1a000eee:	1aed      	subs	r5, r5, r3
1a000ef0:	d433      	bmi.n	1a000f5a <pll_get_frac+0xce>

	/* Find the min of 3 and return */
	if (diff[0] <= diff[1]) {
1a000ef2:	42ae      	cmp	r6, r5
1a000ef4:	dc3b      	bgt.n	1a000f6e <pll_get_frac+0xe2>
		if (diff[0] <= diff[2]) {
1a000ef6:	42be      	cmp	r6, r7
1a000ef8:	dc31      	bgt.n	1a000f5e <pll_get_frac+0xd2>
			*ppll = pll[0];
1a000efa:	466d      	mov	r5, sp
1a000efc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000efe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f00:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f04:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000f08:	e006      	b.n	1a000f18 <pll_get_frac+0x8c>
		*ppll = pll[0];
1a000f0a:	466d      	mov	r5, sp
1a000f0c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000f0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f10:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			*ppll = pll[1];
		} else {
			*ppll = pll[2];
		}
	}
}
1a000f18:	b019      	add	sp, #100	; 0x64
1a000f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -val;
1a000f1c:	425b      	negs	r3, r3
1a000f1e:	e7ce      	b.n	1a000ebe <pll_get_frac+0x32>
		*ppll = pll[2];
1a000f20:	ad10      	add	r5, sp, #64	; 0x40
1a000f22:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000f24:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f26:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f2a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		return ;
1a000f2e:	e7f3      	b.n	1a000f18 <pll_get_frac+0x8c>
		return -val;
1a000f30:	425b      	negs	r3, r3
1a000f32:	e7d7      	b.n	1a000ee4 <pll_get_frac+0x58>
		pll[1].ctrl = (1 << 6);
1a000f34:	2340      	movs	r3, #64	; 0x40
1a000f36:	9308      	str	r3, [sp, #32]
		pll[1].fin = ppll->fin;
1a000f38:	6963      	ldr	r3, [r4, #20]
1a000f3a:	930d      	str	r3, [sp, #52]	; 0x34
		pll_calc_divs(freq, &pll[1]);
1a000f3c:	a908      	add	r1, sp, #32
1a000f3e:	4628      	mov	r0, r5
1a000f40:	f7ff ff54 	bl	1a000dec <pll_calc_divs>
		if (pll[1].fout == freq) {
1a000f44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a000f46:	42ab      	cmp	r3, r5
1a000f48:	d1d0      	bne.n	1a000eec <pll_get_frac+0x60>
			*ppll = pll[1];
1a000f4a:	ad08      	add	r5, sp, #32
1a000f4c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000f4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f50:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f54:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			return ;
1a000f58:	e7de      	b.n	1a000f18 <pll_get_frac+0x8c>
		return -val;
1a000f5a:	426d      	negs	r5, r5
1a000f5c:	e7c9      	b.n	1a000ef2 <pll_get_frac+0x66>
			*ppll = pll[2];
1a000f5e:	ad10      	add	r5, sp, #64	; 0x40
1a000f60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000f62:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f64:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000f6c:	e7d4      	b.n	1a000f18 <pll_get_frac+0x8c>
		if (diff[1] <= diff[2]) {
1a000f6e:	42af      	cmp	r7, r5
1a000f70:	db07      	blt.n	1a000f82 <pll_get_frac+0xf6>
			*ppll = pll[1];
1a000f72:	ad08      	add	r5, sp, #32
1a000f74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000f76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f78:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f7c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000f80:	e7ca      	b.n	1a000f18 <pll_get_frac+0x8c>
			*ppll = pll[2];
1a000f82:	ad10      	add	r5, sp, #64	; 0x40
1a000f84:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000f86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000f88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000f8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000f90:	e7c2      	b.n	1a000f18 <pll_get_frac+0x8c>
1a000f92:	bf00      	nop
1a000f94:	068e7780 	.word	0x068e7780

1a000f98 <Chip_Clock_FindBaseClock>:
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
}

/* Finds the base clock for the peripheral clock */
static CHIP_CGU_BASE_CLK_T Chip_Clock_FindBaseClock(CHIP_CCU_CLK_T clk)
{
1a000f98:	b430      	push	{r4, r5}
1a000f9a:	4605      	mov	r5, r0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
	int i = 0;
1a000f9c:	2300      	movs	r3, #0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
1a000f9e:	201c      	movs	r0, #28

	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000fa0:	e000      	b.n	1a000fa4 <Chip_Clock_FindBaseClock+0xc>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
			baseclk = periph_to_base[i].clkbase;
		}
		else {
			i++;
1a000fa2:	3301      	adds	r3, #1
	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000fa4:	281c      	cmp	r0, #28
1a000fa6:	d118      	bne.n	1a000fda <Chip_Clock_FindBaseClock+0x42>
1a000fa8:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000fac:	0051      	lsls	r1, r2, #1
1a000fae:	4a0c      	ldr	r2, [pc, #48]	; (1a000fe0 <Chip_Clock_FindBaseClock+0x48>)
1a000fb0:	440a      	add	r2, r1
1a000fb2:	7914      	ldrb	r4, [r2, #4]
1a000fb4:	4284      	cmp	r4, r0
1a000fb6:	d010      	beq.n	1a000fda <Chip_Clock_FindBaseClock+0x42>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
1a000fb8:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a000fbc:	004a      	lsls	r2, r1, #1
1a000fbe:	4908      	ldr	r1, [pc, #32]	; (1a000fe0 <Chip_Clock_FindBaseClock+0x48>)
1a000fc0:	5a8a      	ldrh	r2, [r1, r2]
1a000fc2:	42aa      	cmp	r2, r5
1a000fc4:	d8ed      	bhi.n	1a000fa2 <Chip_Clock_FindBaseClock+0xa>
1a000fc6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000fca:	0051      	lsls	r1, r2, #1
1a000fcc:	4a04      	ldr	r2, [pc, #16]	; (1a000fe0 <Chip_Clock_FindBaseClock+0x48>)
1a000fce:	440a      	add	r2, r1
1a000fd0:	8852      	ldrh	r2, [r2, #2]
1a000fd2:	42aa      	cmp	r2, r5
1a000fd4:	d3e5      	bcc.n	1a000fa2 <Chip_Clock_FindBaseClock+0xa>
			baseclk = periph_to_base[i].clkbase;
1a000fd6:	4620      	mov	r0, r4
1a000fd8:	e7e4      	b.n	1a000fa4 <Chip_Clock_FindBaseClock+0xc>
		}
	}

	return baseclk;
}
1a000fda:	bc30      	pop	{r4, r5}
1a000fdc:	4770      	bx	lr
1a000fde:	bf00      	nop
1a000fe0:	1a007828 	.word	0x1a007828

1a000fe4 <Chip_Clock_EnableCrystal>:
 * Public functions
 ****************************************************************************/

/* Enables the crystal oscillator */
void Chip_Clock_EnableCrystal(void)
{
1a000fe4:	b082      	sub	sp, #8
	volatile uint32_t delay = 1000;
1a000fe6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a000fea:	9301      	str	r3, [sp, #4]

	uint32_t OldCrystalConfig = LPC_CGU->XTAL_OSC_CTRL;
1a000fec:	4a0d      	ldr	r2, [pc, #52]	; (1a001024 <Chip_Clock_EnableCrystal+0x40>)
1a000fee:	6993      	ldr	r3, [r2, #24]

	/* Clear bypass mode */
	OldCrystalConfig &= (~2);
1a000ff0:	f023 0102 	bic.w	r1, r3, #2
	if (OldCrystalConfig != LPC_CGU->XTAL_OSC_CTRL) {
1a000ff4:	6992      	ldr	r2, [r2, #24]
1a000ff6:	428a      	cmp	r2, r1
1a000ff8:	d001      	beq.n	1a000ffe <Chip_Clock_EnableCrystal+0x1a>
		LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000ffa:	4a0a      	ldr	r2, [pc, #40]	; (1a001024 <Chip_Clock_EnableCrystal+0x40>)
1a000ffc:	6191      	str	r1, [r2, #24]
	}

	/* Enable crystal oscillator */
	OldCrystalConfig &= (~1);
1a000ffe:	f023 0303 	bic.w	r3, r3, #3
	if (OscRateIn >= 20000000) {
1a001002:	4a09      	ldr	r2, [pc, #36]	; (1a001028 <Chip_Clock_EnableCrystal+0x44>)
1a001004:	6811      	ldr	r1, [r2, #0]
1a001006:	4a09      	ldr	r2, [pc, #36]	; (1a00102c <Chip_Clock_EnableCrystal+0x48>)
1a001008:	4291      	cmp	r1, r2
1a00100a:	d901      	bls.n	1a001010 <Chip_Clock_EnableCrystal+0x2c>
		OldCrystalConfig |= 4;	/* Set high frequency mode */
1a00100c:	f043 0304 	orr.w	r3, r3, #4

	}
	LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a001010:	4a04      	ldr	r2, [pc, #16]	; (1a001024 <Chip_Clock_EnableCrystal+0x40>)
1a001012:	6193      	str	r3, [r2, #24]

	/* Delay for 250uSec */
	while(delay--) {}
1a001014:	9b01      	ldr	r3, [sp, #4]
1a001016:	1e5a      	subs	r2, r3, #1
1a001018:	9201      	str	r2, [sp, #4]
1a00101a:	2b00      	cmp	r3, #0
1a00101c:	d1fa      	bne.n	1a001014 <Chip_Clock_EnableCrystal+0x30>
}
1a00101e:	b002      	add	sp, #8
1a001020:	4770      	bx	lr
1a001022:	bf00      	nop
1a001024:	40050000 	.word	0x40050000
1a001028:	1a007790 	.word	0x1a007790
1a00102c:	01312cff 	.word	0x01312cff

1a001030 <Chip_Clock_GetDividerSource>:
}

/* Gets a CGU clock divider source */
CHIP_CGU_CLKIN_T Chip_Clock_GetDividerSource(CHIP_CGU_IDIV_T Divider)
{
	uint32_t reg = LPC_CGU->IDIV_CTRL[Divider];
1a001030:	3012      	adds	r0, #18
1a001032:	4b05      	ldr	r3, [pc, #20]	; (1a001048 <Chip_Clock_GetDividerSource+0x18>)
1a001034:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]

	if (reg & 1) {	/* divider is powered down */
1a001038:	f010 0f01 	tst.w	r0, #1
1a00103c:	d102      	bne.n	1a001044 <Chip_Clock_GetDividerSource+0x14>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a00103e:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a001042:	4770      	bx	lr
		return CLKINPUT_PD;
1a001044:	2011      	movs	r0, #17
}
1a001046:	4770      	bx	lr
1a001048:	40050000 	.word	0x40050000

1a00104c <Chip_Clock_GetDividerDivisor>:

/* Gets a CGU clock divider divisor */
uint32_t Chip_Clock_GetDividerDivisor(CHIP_CGU_IDIV_T Divider)
{
	return (CHIP_CGU_CLKIN_T) ((LPC_CGU->IDIV_CTRL[Divider] >> 2) & CHIP_CGU_IDIV_MASK(Divider));
1a00104c:	f100 0212 	add.w	r2, r0, #18
1a001050:	4b03      	ldr	r3, [pc, #12]	; (1a001060 <Chip_Clock_GetDividerDivisor+0x14>)
1a001052:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a001056:	4b03      	ldr	r3, [pc, #12]	; (1a001064 <Chip_Clock_GetDividerDivisor+0x18>)
1a001058:	5c18      	ldrb	r0, [r3, r0]
}
1a00105a:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a00105e:	4770      	bx	lr
1a001060:	40050000 	.word	0x40050000
1a001064:	1a007820 	.word	0x1a007820

1a001068 <Chip_Clock_GetClockInputHz>:

/* Returns the frequency of the specified input clock source */
uint32_t Chip_Clock_GetClockInputHz(CHIP_CGU_CLKIN_T input)
{
1a001068:	b508      	push	{r3, lr}
	uint32_t rate = 0;

	switch (input) {
1a00106a:	2810      	cmp	r0, #16
1a00106c:	d80a      	bhi.n	1a001084 <Chip_Clock_GetClockInputHz+0x1c>
1a00106e:	e8df f000 	tbb	[pc, r0]
1a001072:	0b44      	.short	0x0b44
1a001074:	0921180d 	.word	0x0921180d
1a001078:	2d2a2724 	.word	0x2d2a2724
1a00107c:	34300909 	.word	0x34300909
1a001080:	3c38      	.short	0x3c38
1a001082:	40          	.byte	0x40
1a001083:	00          	.byte	0x00
	uint32_t rate = 0;
1a001084:	2000      	movs	r0, #0
1a001086:	e03a      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>
	case CLKIN_32K:
		rate = CRYSTAL_32K_FREQ_IN;
		break;

	case CLKIN_IRC:
		rate = CGU_IRC_FREQ;
1a001088:	481e      	ldr	r0, [pc, #120]	; (1a001104 <Chip_Clock_GetClockInputHz+0x9c>)
		break;
1a00108a:	e038      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_ENET_RX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a00108c:	4b1e      	ldr	r3, [pc, #120]	; (1a001108 <Chip_Clock_GetClockInputHz+0xa0>)
1a00108e:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a001092:	f003 0307 	and.w	r3, r3, #7
1a001096:	2b04      	cmp	r3, #4
1a001098:	d001      	beq.n	1a00109e <Chip_Clock_GetClockInputHz+0x36>
			/* MII mode requires 25MHz clock */
			rate = 25000000;
1a00109a:	481c      	ldr	r0, [pc, #112]	; (1a00110c <Chip_Clock_GetClockInputHz+0xa4>)
1a00109c:	e02f      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>
	uint32_t rate = 0;
1a00109e:	2000      	movs	r0, #0
1a0010a0:	e02d      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>
		}
		break;

	case CLKIN_ENET_TX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a0010a2:	4b19      	ldr	r3, [pc, #100]	; (1a001108 <Chip_Clock_GetClockInputHz+0xa0>)
1a0010a4:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a0010a8:	f003 0307 	and.w	r3, r3, #7
1a0010ac:	2b04      	cmp	r3, #4
1a0010ae:	d027      	beq.n	1a001100 <Chip_Clock_GetClockInputHz+0x98>
			rate = 25000000; /* MII uses 25 MHz */
1a0010b0:	4816      	ldr	r0, [pc, #88]	; (1a00110c <Chip_Clock_GetClockInputHz+0xa4>)
1a0010b2:	e024      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>
			rate = 50000000; /* RMII uses 50 MHz */
		}
		break;

	case CLKIN_CLKIN:
		rate = ExtRateIn;
1a0010b4:	4b16      	ldr	r3, [pc, #88]	; (1a001110 <Chip_Clock_GetClockInputHz+0xa8>)
1a0010b6:	6818      	ldr	r0, [r3, #0]
		break;
1a0010b8:	e021      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_CRYSTAL:
		rate = OscRateIn;
1a0010ba:	4b16      	ldr	r3, [pc, #88]	; (1a001114 <Chip_Clock_GetClockInputHz+0xac>)
1a0010bc:	6818      	ldr	r0, [r3, #0]
		break;
1a0010be:	e01e      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_USBPLL:
		rate = audio_usb_pll_freq[CGU_USB_PLL];
1a0010c0:	4b15      	ldr	r3, [pc, #84]	; (1a001118 <Chip_Clock_GetClockInputHz+0xb0>)
1a0010c2:	6818      	ldr	r0, [r3, #0]
		break;
1a0010c4:	e01b      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_AUDIOPLL:
		rate = audio_usb_pll_freq[CGU_AUDIO_PLL];
1a0010c6:	4b14      	ldr	r3, [pc, #80]	; (1a001118 <Chip_Clock_GetClockInputHz+0xb0>)
1a0010c8:	6858      	ldr	r0, [r3, #4]
		break;
1a0010ca:	e018      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_MAINPLL:
		rate = Chip_Clock_GetMainPLLHz();
1a0010cc:	f000 f868 	bl	1a0011a0 <Chip_Clock_GetMainPLLHz>
		break;
1a0010d0:	e015      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVA:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_A);
1a0010d2:	2100      	movs	r1, #0
1a0010d4:	f000 f89a 	bl	1a00120c <Chip_Clock_GetDivRate>
		break;
1a0010d8:	e011      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVB:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_B);
1a0010da:	2101      	movs	r1, #1
1a0010dc:	f000 f896 	bl	1a00120c <Chip_Clock_GetDivRate>
		break;
1a0010e0:	e00d      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVC:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_C);
1a0010e2:	2102      	movs	r1, #2
1a0010e4:	f000 f892 	bl	1a00120c <Chip_Clock_GetDivRate>
		break;
1a0010e8:	e009      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVD:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_D);
1a0010ea:	2103      	movs	r1, #3
1a0010ec:	f000 f88e 	bl	1a00120c <Chip_Clock_GetDivRate>
		break;
1a0010f0:	e005      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVE:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_E);
1a0010f2:	2104      	movs	r1, #4
1a0010f4:	f000 f88a 	bl	1a00120c <Chip_Clock_GetDivRate>
		break;
1a0010f8:	e001      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>
		rate = CRYSTAL_32K_FREQ_IN;
1a0010fa:	f44f 4000 	mov.w	r0, #32768	; 0x8000
	default:
		break;
	}

	return rate;
}
1a0010fe:	bd08      	pop	{r3, pc}
			rate = 50000000; /* RMII uses 50 MHz */
1a001100:	4806      	ldr	r0, [pc, #24]	; (1a00111c <Chip_Clock_GetClockInputHz+0xb4>)
	return rate;
1a001102:	e7fc      	b.n	1a0010fe <Chip_Clock_GetClockInputHz+0x96>
1a001104:	00b71b00 	.word	0x00b71b00
1a001108:	40043000 	.word	0x40043000
1a00110c:	017d7840 	.word	0x017d7840
1a001110:	1a007764 	.word	0x1a007764
1a001114:	1a007790 	.word	0x1a007790
1a001118:	10000a54 	.word	0x10000a54
1a00111c:	02faf080 	.word	0x02faf080

1a001120 <Chip_Clock_CalcMainPLLValue>:
{
1a001120:	b538      	push	{r3, r4, r5, lr}
1a001122:	4605      	mov	r5, r0
1a001124:	460c      	mov	r4, r1
	ppll->fin = Chip_Clock_GetClockInputHz(ppll->srcin);
1a001126:	7908      	ldrb	r0, [r1, #4]
1a001128:	f7ff ff9e 	bl	1a001068 <Chip_Clock_GetClockInputHz>
1a00112c:	6160      	str	r0, [r4, #20]
	if (freq > MAX_CLOCK_FREQ || freq < (PLL_MIN_CCO_FREQ / 16) || !ppll->fin) {
1a00112e:	4b19      	ldr	r3, [pc, #100]	; (1a001194 <Chip_Clock_CalcMainPLLValue+0x74>)
1a001130:	442b      	add	r3, r5
1a001132:	4a19      	ldr	r2, [pc, #100]	; (1a001198 <Chip_Clock_CalcMainPLLValue+0x78>)
1a001134:	4293      	cmp	r3, r2
1a001136:	d821      	bhi.n	1a00117c <Chip_Clock_CalcMainPLLValue+0x5c>
1a001138:	b318      	cbz	r0, 1a001182 <Chip_Clock_CalcMainPLLValue+0x62>
	ppll->ctrl = 1 << 7; /* Enable direct mode [If possible] */
1a00113a:	2380      	movs	r3, #128	; 0x80
1a00113c:	6023      	str	r3, [r4, #0]
	ppll->nsel = 0;
1a00113e:	2300      	movs	r3, #0
1a001140:	60a3      	str	r3, [r4, #8]
	ppll->psel = 0;
1a001142:	60e3      	str	r3, [r4, #12]
	ppll->msel = freq / ppll->fin;
1a001144:	fbb5 f3f0 	udiv	r3, r5, r0
1a001148:	6123      	str	r3, [r4, #16]
	if (freq < PLL_MIN_CCO_FREQ || ppll->msel * ppll->fin != freq) {
1a00114a:	4a14      	ldr	r2, [pc, #80]	; (1a00119c <Chip_Clock_CalcMainPLLValue+0x7c>)
1a00114c:	4295      	cmp	r5, r2
1a00114e:	d903      	bls.n	1a001158 <Chip_Clock_CalcMainPLLValue+0x38>
1a001150:	fb03 f000 	mul.w	r0, r3, r0
1a001154:	42a8      	cmp	r0, r5
1a001156:	d007      	beq.n	1a001168 <Chip_Clock_CalcMainPLLValue+0x48>
		pll_get_frac(freq, ppll);
1a001158:	4621      	mov	r1, r4
1a00115a:	4628      	mov	r0, r5
1a00115c:	f7ff fe96 	bl	1a000e8c <pll_get_frac>
		if (!ppll->nsel) {
1a001160:	68a3      	ldr	r3, [r4, #8]
1a001162:	b18b      	cbz	r3, 1a001188 <Chip_Clock_CalcMainPLLValue+0x68>
		ppll->nsel --;
1a001164:	3b01      	subs	r3, #1
1a001166:	60a3      	str	r3, [r4, #8]
	if (ppll->msel == 0) {
1a001168:	6923      	ldr	r3, [r4, #16]
1a00116a:	b183      	cbz	r3, 1a00118e <Chip_Clock_CalcMainPLLValue+0x6e>
	if (ppll->psel) {
1a00116c:	68e2      	ldr	r2, [r4, #12]
1a00116e:	b10a      	cbz	r2, 1a001174 <Chip_Clock_CalcMainPLLValue+0x54>
		ppll->psel --;
1a001170:	3a01      	subs	r2, #1
1a001172:	60e2      	str	r2, [r4, #12]
	ppll->msel --;
1a001174:	3b01      	subs	r3, #1
1a001176:	6123      	str	r3, [r4, #16]
	return 0;
1a001178:	2000      	movs	r0, #0
}
1a00117a:	bd38      	pop	{r3, r4, r5, pc}
		return -1;
1a00117c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001180:	e7fb      	b.n	1a00117a <Chip_Clock_CalcMainPLLValue+0x5a>
1a001182:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001186:	e7f8      	b.n	1a00117a <Chip_Clock_CalcMainPLLValue+0x5a>
			return -1;
1a001188:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00118c:	e7f5      	b.n	1a00117a <Chip_Clock_CalcMainPLLValue+0x5a>
		return - 1;
1a00118e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001192:	e7f2      	b.n	1a00117a <Chip_Clock_CalcMainPLLValue+0x5a>
1a001194:	ff6b3a10 	.word	0xff6b3a10
1a001198:	0b940510 	.word	0x0b940510
1a00119c:	094c5eff 	.word	0x094c5eff

1a0011a0 <Chip_Clock_GetMainPLLHz>:
{
1a0011a0:	b530      	push	{r4, r5, lr}
1a0011a2:	b083      	sub	sp, #12
	uint32_t PLLReg = LPC_CGU->PLL1_CTRL;
1a0011a4:	4d17      	ldr	r5, [pc, #92]	; (1a001204 <Chip_Clock_GetMainPLLHz+0x64>)
1a0011a6:	6c6c      	ldr	r4, [r5, #68]	; 0x44
	uint32_t freq = Chip_Clock_GetClockInputHz((CHIP_CGU_CLKIN_T) ((PLLReg >> 24) & 0xF));
1a0011a8:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a0011ac:	f7ff ff5c 	bl	1a001068 <Chip_Clock_GetClockInputHz>
	const uint8_t ptab[] = {1, 2, 4, 8};
1a0011b0:	4b15      	ldr	r3, [pc, #84]	; (1a001208 <Chip_Clock_GetMainPLLHz+0x68>)
1a0011b2:	681b      	ldr	r3, [r3, #0]
1a0011b4:	9301      	str	r3, [sp, #4]
	if (!(LPC_CGU->PLL1_STAT & 1)) {
1a0011b6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
1a0011b8:	f013 0f01 	tst.w	r3, #1
1a0011bc:	d020      	beq.n	1a001200 <Chip_Clock_GetMainPLLHz+0x60>
	msel = (PLLReg >> 16) & 0xFF;
1a0011be:	f3c4 4307 	ubfx	r3, r4, #16, #8
	nsel = (PLLReg >> 12) & 0x3;
1a0011c2:	f3c4 3201 	ubfx	r2, r4, #12, #2
	psel = (PLLReg >> 8) & 0x3;
1a0011c6:	f3c4 2101 	ubfx	r1, r4, #8, #2
	fbsel = (PLLReg >> 6) & 0x1;
1a0011ca:	f3c4 1580 	ubfx	r5, r4, #6, #1
	m = msel + 1;
1a0011ce:	3301      	adds	r3, #1
	n = nsel + 1;
1a0011d0:	3201      	adds	r2, #1
	p = ptab[psel];
1a0011d2:	f10d 0c08 	add.w	ip, sp, #8
1a0011d6:	4461      	add	r1, ip
1a0011d8:	f811 1c04 	ldrb.w	r1, [r1, #-4]
	if (direct || fbsel) {
1a0011dc:	f014 0f80 	tst.w	r4, #128	; 0x80
1a0011e0:	d108      	bne.n	1a0011f4 <Chip_Clock_GetMainPLLHz+0x54>
1a0011e2:	b93d      	cbnz	r5, 1a0011f4 <Chip_Clock_GetMainPLLHz+0x54>
	return (m / (2 * p)) * (freq / n);
1a0011e4:	0049      	lsls	r1, r1, #1
1a0011e6:	fbb3 f3f1 	udiv	r3, r3, r1
1a0011ea:	fbb0 f0f2 	udiv	r0, r0, r2
1a0011ee:	fb00 f003 	mul.w	r0, r0, r3
1a0011f2:	e003      	b.n	1a0011fc <Chip_Clock_GetMainPLLHz+0x5c>
		return m * (freq / n);
1a0011f4:	fbb0 f0f2 	udiv	r0, r0, r2
1a0011f8:	fb03 f000 	mul.w	r0, r3, r0
}
1a0011fc:	b003      	add	sp, #12
1a0011fe:	bd30      	pop	{r4, r5, pc}
		return 0;
1a001200:	2000      	movs	r0, #0
1a001202:	e7fb      	b.n	1a0011fc <Chip_Clock_GetMainPLLHz+0x5c>
1a001204:	40050000 	.word	0x40050000
1a001208:	1a00781c 	.word	0x1a00781c

1a00120c <Chip_Clock_GetDivRate>:
{
1a00120c:	b538      	push	{r3, r4, r5, lr}
1a00120e:	460c      	mov	r4, r1
	input = Chip_Clock_GetDividerSource(divider);
1a001210:	4608      	mov	r0, r1
1a001212:	f7ff ff0d 	bl	1a001030 <Chip_Clock_GetDividerSource>
1a001216:	4605      	mov	r5, r0
	div = Chip_Clock_GetDividerDivisor(divider);
1a001218:	4620      	mov	r0, r4
1a00121a:	f7ff ff17 	bl	1a00104c <Chip_Clock_GetDividerDivisor>
1a00121e:	4604      	mov	r4, r0
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
1a001220:	4628      	mov	r0, r5
1a001222:	f7ff ff21 	bl	1a001068 <Chip_Clock_GetClockInputHz>
1a001226:	3401      	adds	r4, #1
}
1a001228:	fbb0 f0f4 	udiv	r0, r0, r4
1a00122c:	bd38      	pop	{r3, r4, r5, pc}
1a00122e:	Address 0x000000001a00122e is out of bounds.


1a001230 <Chip_Clock_SetBaseClock>:
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
}

/* Sets a CGU Base Clock clock source */
void Chip_Clock_SetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock, CHIP_CGU_CLKIN_T Input, bool autoblocken, bool powerdn)
{
1a001230:	b430      	push	{r4, r5}
	uint32_t reg = LPC_CGU->BASE_CLK[BaseClock];
1a001232:	f100 0416 	add.w	r4, r0, #22
1a001236:	00a4      	lsls	r4, r4, #2
1a001238:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a00123c:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a001240:	6864      	ldr	r4, [r4, #4]

	if (BaseClock < CLK_BASE_NONE) {
1a001242:	281b      	cmp	r0, #27
1a001244:	d813      	bhi.n	1a00126e <Chip_Clock_SetBaseClock+0x3e>
		if (Input != CLKINPUT_PD) {
1a001246:	2911      	cmp	r1, #17
1a001248:	d01a      	beq.n	1a001280 <Chip_Clock_SetBaseClock+0x50>
			/* Mask off fields we plan to update */
			reg &= ~((0x1F << 24) | 1 | (1 << 11));
1a00124a:	4d0e      	ldr	r5, [pc, #56]	; (1a001284 <Chip_Clock_SetBaseClock+0x54>)
1a00124c:	4025      	ands	r5, r4

			if (autoblocken) {
1a00124e:	b10a      	cbz	r2, 1a001254 <Chip_Clock_SetBaseClock+0x24>
				reg |= (1 << 11);
1a001250:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
			}
			if (powerdn) {
1a001254:	b10b      	cbz	r3, 1a00125a <Chip_Clock_SetBaseClock+0x2a>
				reg |= (1 << 0);
1a001256:	f045 0501 	orr.w	r5, r5, #1
			}

			/* Set clock source */
			reg |= (Input << 24);
1a00125a:	ea45 6501 	orr.w	r5, r5, r1, lsl #24

			LPC_CGU->BASE_CLK[BaseClock] = reg;
1a00125e:	3016      	adds	r0, #22
1a001260:	0080      	lsls	r0, r0, #2
1a001262:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001266:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00126a:	6045      	str	r5, [r0, #4]
1a00126c:	e008      	b.n	1a001280 <Chip_Clock_SetBaseClock+0x50>
		}
	}
	else {
		LPC_CGU->BASE_CLK[BaseClock] = reg | 1;	/* Power down this base clock */
1a00126e:	f044 0401 	orr.w	r4, r4, #1
1a001272:	3016      	adds	r0, #22
1a001274:	0080      	lsls	r0, r0, #2
1a001276:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a00127a:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00127e:	6044      	str	r4, [r0, #4]
	}
}
1a001280:	bc30      	pop	{r4, r5}
1a001282:	4770      	bx	lr
1a001284:	e0fff7fe 	.word	0xe0fff7fe

1a001288 <Chip_Clock_GetBaseClock>:
/* Gets a CGU Base Clock clock source */
CHIP_CGU_CLKIN_T Chip_Clock_GetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock)
{
	uint32_t reg;

	if (BaseClock >= CLK_BASE_NONE) {
1a001288:	281b      	cmp	r0, #27
1a00128a:	d80c      	bhi.n	1a0012a6 <Chip_Clock_GetBaseClock+0x1e>
		return CLKINPUT_PD;
	}

	reg = LPC_CGU->BASE_CLK[BaseClock];
1a00128c:	3016      	adds	r0, #22
1a00128e:	0080      	lsls	r0, r0, #2
1a001290:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001294:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a001298:	6840      	ldr	r0, [r0, #4]

	/* base clock is powered down? */
	if (reg & 1) {
1a00129a:	f010 0f01 	tst.w	r0, #1
1a00129e:	d104      	bne.n	1a0012aa <Chip_Clock_GetBaseClock+0x22>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a0012a0:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a0012a4:	4770      	bx	lr
		return CLKINPUT_PD;
1a0012a6:	2011      	movs	r0, #17
1a0012a8:	4770      	bx	lr
		return CLKINPUT_PD;
1a0012aa:	2011      	movs	r0, #17
}
1a0012ac:	4770      	bx	lr

1a0012ae <Chip_Clock_GetBaseClocktHz>:
{
1a0012ae:	b508      	push	{r3, lr}
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
1a0012b0:	f7ff ffea 	bl	1a001288 <Chip_Clock_GetBaseClock>
1a0012b4:	f7ff fed8 	bl	1a001068 <Chip_Clock_GetClockInputHz>
}
1a0012b8:	bd08      	pop	{r3, pc}
1a0012ba:	Address 0x000000001a0012ba is out of bounds.


1a0012bc <Chip_Clock_EnableOpts>:
/* Enables a peripheral clock and sets clock states */
void Chip_Clock_EnableOpts(CHIP_CCU_CLK_T clk, bool autoen, bool wakeupen, int div)
{
	uint32_t reg = 1;

	if (autoen) {
1a0012bc:	b971      	cbnz	r1, 1a0012dc <Chip_Clock_EnableOpts+0x20>
	uint32_t reg = 1;
1a0012be:	2101      	movs	r1, #1
		reg |= (1 << 1);
	}
	if (wakeupen) {
1a0012c0:	b10a      	cbz	r2, 1a0012c6 <Chip_Clock_EnableOpts+0xa>
		reg |= (1 << 2);
1a0012c2:	f041 0104 	orr.w	r1, r1, #4
	}

	/* Not all clocks support a divider, but we won't check that here. Only
	   dividers of 1 and 2 are allowed. Assume 1 if not 2 */
	if (div == 2) {
1a0012c6:	2b02      	cmp	r3, #2
1a0012c8:	d00a      	beq.n	1a0012e0 <Chip_Clock_EnableOpts+0x24>
		reg |= (1 << 5);
	}

	/* Setup peripheral clock and start running */
	if (clk >= CLK_CCU2_START) {
1a0012ca:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0012ce:	d30a      	bcc.n	1a0012e6 <Chip_Clock_EnableOpts+0x2a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG = reg;
1a0012d0:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0012d4:	4b06      	ldr	r3, [pc, #24]	; (1a0012f0 <Chip_Clock_EnableOpts+0x34>)
1a0012d6:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a0012da:	4770      	bx	lr
		reg |= (1 << 1);
1a0012dc:	2103      	movs	r1, #3
1a0012de:	e7ef      	b.n	1a0012c0 <Chip_Clock_EnableOpts+0x4>
		reg |= (1 << 5);
1a0012e0:	f041 0120 	orr.w	r1, r1, #32
1a0012e4:	e7f1      	b.n	1a0012ca <Chip_Clock_EnableOpts+0xe>
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG = reg;
1a0012e6:	3020      	adds	r0, #32
1a0012e8:	4b02      	ldr	r3, [pc, #8]	; (1a0012f4 <Chip_Clock_EnableOpts+0x38>)
1a0012ea:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
	}
}
1a0012ee:	4770      	bx	lr
1a0012f0:	40052000 	.word	0x40052000
1a0012f4:	40051000 	.word	0x40051000

1a0012f8 <Chip_Clock_Enable>:

/* Enables a peripheral clock */
void Chip_Clock_Enable(CHIP_CCU_CLK_T clk)
{
	/* Start peripheral clock running */
	if (clk >= CLK_CCU2_START) {
1a0012f8:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0012fc:	d309      	bcc.n	1a001312 <Chip_Clock_Enable+0x1a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG |= 1;
1a0012fe:	4a09      	ldr	r2, [pc, #36]	; (1a001324 <Chip_Clock_Enable+0x2c>)
1a001300:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001304:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a001308:	f043 0301 	orr.w	r3, r3, #1
1a00130c:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001310:	4770      	bx	lr
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG |= 1;
1a001312:	4a05      	ldr	r2, [pc, #20]	; (1a001328 <Chip_Clock_Enable+0x30>)
1a001314:	3020      	adds	r0, #32
1a001316:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a00131a:	f043 0301 	orr.w	r3, r3, #1
1a00131e:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
	}
}
1a001322:	4770      	bx	lr
1a001324:	40052000 	.word	0x40052000
1a001328:	40051000 	.word	0x40051000

1a00132c <Chip_Clock_Disable>:

/* Disables a peripheral clock */
void Chip_Clock_Disable(CHIP_CCU_CLK_T clk)
{
	/* Stop peripheral clock */
	if (clk >= CLK_CCU2_START) {
1a00132c:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001330:	d309      	bcc.n	1a001346 <Chip_Clock_Disable+0x1a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG &= ~1;
1a001332:	4a09      	ldr	r2, [pc, #36]	; (1a001358 <Chip_Clock_Disable+0x2c>)
1a001334:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001338:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a00133c:	f023 0301 	bic.w	r3, r3, #1
1a001340:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001344:	4770      	bx	lr
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG &= ~1;
1a001346:	4a05      	ldr	r2, [pc, #20]	; (1a00135c <Chip_Clock_Disable+0x30>)
1a001348:	3020      	adds	r0, #32
1a00134a:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a00134e:	f023 0301 	bic.w	r3, r3, #1
1a001352:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
	}
}
1a001356:	4770      	bx	lr
1a001358:	40052000 	.word	0x40052000
1a00135c:	40051000 	.word	0x40051000

1a001360 <Chip_Clock_GetRate>:
	LPC_CCU2->PM = 0;
}

/* Returns a peripheral clock rate */
uint32_t Chip_Clock_GetRate(CHIP_CCU_CLK_T clk)
{
1a001360:	b510      	push	{r4, lr}
	CHIP_CGU_BASE_CLK_T baseclk;
	uint32_t reg, div, rate;

	/* Get CCU config register for clock */
	if (clk >= CLK_CCU2_START) {
1a001362:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001366:	d309      	bcc.n	1a00137c <Chip_Clock_GetRate+0x1c>
		reg = LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG;
1a001368:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a00136c:	4a0d      	ldr	r2, [pc, #52]	; (1a0013a4 <Chip_Clock_GetRate+0x44>)
1a00136e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
	else {
		reg = LPC_CCU1->CLKCCU[clk].CFG;
	}

	/* Is the clock enabled? */
	if (reg & 1) {
1a001372:	f014 0f01 	tst.w	r4, #1
1a001376:	d107      	bne.n	1a001388 <Chip_Clock_GetRate+0x28>

		}
		rate = rate / div;
	}
	else {
		rate = 0;
1a001378:	2000      	movs	r0, #0
	}

	return rate;
}
1a00137a:	bd10      	pop	{r4, pc}
		reg = LPC_CCU1->CLKCCU[clk].CFG;
1a00137c:	f100 0320 	add.w	r3, r0, #32
1a001380:	4a09      	ldr	r2, [pc, #36]	; (1a0013a8 <Chip_Clock_GetRate+0x48>)
1a001382:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a001386:	e7f4      	b.n	1a001372 <Chip_Clock_GetRate+0x12>
		baseclk = Chip_Clock_FindBaseClock(clk);
1a001388:	f7ff fe06 	bl	1a000f98 <Chip_Clock_FindBaseClock>
		rate = Chip_Clock_GetBaseClocktHz(baseclk);
1a00138c:	f7ff ff8f 	bl	1a0012ae <Chip_Clock_GetBaseClocktHz>
		if (((reg >> 5) & 0x7) == 0) {
1a001390:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a001394:	d103      	bne.n	1a00139e <Chip_Clock_GetRate+0x3e>
			div = 1;
1a001396:	2301      	movs	r3, #1
		rate = rate / div;
1a001398:	fbb0 f0f3 	udiv	r0, r0, r3
1a00139c:	e7ed      	b.n	1a00137a <Chip_Clock_GetRate+0x1a>
			div = 2;/* No other dividers supported */
1a00139e:	2302      	movs	r3, #2
1a0013a0:	e7fa      	b.n	1a001398 <Chip_Clock_GetRate+0x38>
1a0013a2:	bf00      	nop
1a0013a4:	40052000 	.word	0x40052000
1a0013a8:	40051000 	.word	0x40051000

1a0013ac <SystemCoreClockUpdate>:


/* Update system core clock rate, should be called if the system has
   a clock rate change */
void SystemCoreClockUpdate(void)
{
1a0013ac:	b508      	push	{r3, lr}
	/* CPU core speed */
	SystemCoreClock = Chip_Clock_GetRate(CLK_MX_MXCORE);
1a0013ae:	2069      	movs	r0, #105	; 0x69
1a0013b0:	f7ff ffd6 	bl	1a001360 <Chip_Clock_GetRate>
1a0013b4:	4b01      	ldr	r3, [pc, #4]	; (1a0013bc <SystemCoreClockUpdate+0x10>)
1a0013b6:	6018      	str	r0, [r3, #0]
}
1a0013b8:	bd08      	pop	{r3, pc}
1a0013ba:	bf00      	nop
1a0013bc:	10000afc 	.word	0x10000afc

1a0013c0 <Chip_GPIO_Init>:
 ****************************************************************************/

/* Initialize GPIO block */
void Chip_GPIO_Init(LPC_GPIO_T *pGPIO)
{
}
1a0013c0:	4770      	bx	lr
1a0013c2:	Address 0x000000001a0013c2 is out of bounds.


1a0013c4 <Chip_SetupCoreClock>:
/*****************************************************************************
 * Public functions
 ****************************************************************************/
/* Setup Chip Core clock */
void Chip_SetupCoreClock(CHIP_CGU_CLKIN_T clkin, uint32_t core_freq, bool setbase)
{
1a0013c4:	b570      	push	{r4, r5, r6, lr}
1a0013c6:	b08a      	sub	sp, #40	; 0x28
1a0013c8:	4605      	mov	r5, r0
1a0013ca:	460e      	mov	r6, r1
1a0013cc:	4614      	mov	r4, r2
	int i;
	volatile uint32_t delay = 50000; // FIXME: original was 500, fix for horrible crystals. @Eric
1a0013ce:	f24c 3350 	movw	r3, #50000	; 0xc350
1a0013d2:	9309      	str	r3, [sp, #36]	; 0x24
	uint32_t direct = 0, pdivide = 0;
	PLL_PARAM_T ppll;

	if (clkin == CLKIN_CRYSTAL) {
1a0013d4:	2806      	cmp	r0, #6
1a0013d6:	d018      	beq.n	1a00140a <Chip_SetupCoreClock+0x46>
		/* Switch main system clocking to crystal */
		Chip_Clock_EnableCrystal();
	}
	Chip_Clock_SetBaseClock(CLK_BASE_MX, clkin, true, false);
1a0013d8:	2300      	movs	r3, #0
1a0013da:	2201      	movs	r2, #1
1a0013dc:	4629      	mov	r1, r5
1a0013de:	2004      	movs	r0, #4
1a0013e0:	f7ff ff26 	bl	1a001230 <Chip_Clock_SetBaseClock>
 * Saves power if the main PLL is not needed.
 */
__STATIC_INLINE void Chip_Clock_DisableMainPLL(void)
{
	/* power down main PLL */
	LPC_CGU->PLL1_CTRL |= 1;
1a0013e4:	4a4a      	ldr	r2, [pc, #296]	; (1a001510 <Chip_SetupCoreClock+0x14c>)
1a0013e6:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a0013e8:	f043 0301 	orr.w	r3, r3, #1
1a0013ec:	6453      	str	r3, [r2, #68]	; 0x44
	Chip_Clock_DisableMainPLL(); /* Disable PLL */

	/* Calculate the PLL Parameters */
	ppll.srcin = clkin;
1a0013ee:	f88d 5008 	strb.w	r5, [sp, #8]
	Chip_Clock_CalcMainPLLValue(core_freq, &ppll);
1a0013f2:	a901      	add	r1, sp, #4
1a0013f4:	4630      	mov	r0, r6
1a0013f6:	f7ff fe93 	bl	1a001120 <Chip_Clock_CalcMainPLLValue>

	if (core_freq > 110000000UL) {
1a0013fa:	4b46      	ldr	r3, [pc, #280]	; (1a001514 <Chip_SetupCoreClock+0x150>)
1a0013fc:	429e      	cmp	r6, r3
1a0013fe:	d916      	bls.n	1a00142e <Chip_SetupCoreClock+0x6a>
		if (ppll.ctrl & (1 << 6)) {
1a001400:	9b01      	ldr	r3, [sp, #4]
1a001402:	f013 0f40 	tst.w	r3, #64	; 0x40
1a001406:	d003      	beq.n	1a001410 <Chip_SetupCoreClock+0x4c>
			while(1);		// to run in integer mode above 110 MHz, you need to use IDIV clock to boot strap CPU to that freq
1a001408:	e7fe      	b.n	1a001408 <Chip_SetupCoreClock+0x44>
		Chip_Clock_EnableCrystal();
1a00140a:	f7ff fdeb 	bl	1a000fe4 <Chip_Clock_EnableCrystal>
1a00140e:	e7e3      	b.n	1a0013d8 <Chip_SetupCoreClock+0x14>
		} else if (ppll.ctrl & (1 << 7)){
1a001410:	f013 0f80 	tst.w	r3, #128	; 0x80
1a001414:	d005      	beq.n	1a001422 <Chip_SetupCoreClock+0x5e>
			direct = 1;
			ppll.ctrl &= ~(1 << 7);
1a001416:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a00141a:	9301      	str	r3, [sp, #4]
	uint32_t direct = 0, pdivide = 0;
1a00141c:	2500      	movs	r5, #0
			direct = 1;
1a00141e:	2601      	movs	r6, #1
1a001420:	e007      	b.n	1a001432 <Chip_SetupCoreClock+0x6e>
		} else {
			pdivide = 1;
			ppll.psel++;
1a001422:	9b04      	ldr	r3, [sp, #16]
1a001424:	3301      	adds	r3, #1
1a001426:	9304      	str	r3, [sp, #16]
			pdivide = 1;
1a001428:	2501      	movs	r5, #1
	uint32_t direct = 0, pdivide = 0;
1a00142a:	2600      	movs	r6, #0
1a00142c:	e001      	b.n	1a001432 <Chip_SetupCoreClock+0x6e>
1a00142e:	2500      	movs	r5, #0
1a001430:	462e      	mov	r6, r5
 * Make sure the main PLL is enabled.
 */
__STATIC_INLINE void Chip_Clock_SetupMainPLL(const PLL_PARAM_T *ppll)
{
	/* power up main PLL */
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a001432:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a001436:	9b01      	ldr	r3, [sp, #4]
1a001438:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a00143c:	9a05      	ldr	r2, [sp, #20]
1a00143e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a001442:	9a03      	ldr	r2, [sp, #12]
1a001444:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a001448:	9a04      	ldr	r2, [sp, #16]
1a00144a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a00144e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a001452:	4a2f      	ldr	r2, [pc, #188]	; (1a001510 <Chip_SetupCoreClock+0x14c>)
1a001454:	6453      	str	r3, [r2, #68]	; 0x44
 * @note	The main PLL should be locked prior to using it as a clock input for a base clock.
 */
__STATIC_INLINE int Chip_Clock_MainPLLLocked(void)
{
	/* Return true if locked */
	return (LPC_CGU->PLL1_STAT & 1) != 0;
1a001456:	4b2e      	ldr	r3, [pc, #184]	; (1a001510 <Chip_SetupCoreClock+0x14c>)
1a001458:	6c1b      	ldr	r3, [r3, #64]	; 0x40

	/* Setup and start the PLL */
	Chip_Clock_SetupMainPLL(&ppll);

	/* Wait for the PLL to lock */
	while(!Chip_Clock_MainPLLLocked()) {}
1a00145a:	f013 0f01 	tst.w	r3, #1
1a00145e:	d0fa      	beq.n	1a001456 <Chip_SetupCoreClock+0x92>

	/* Set core clock base as PLL1 */
	Chip_Clock_SetBaseClock(CLK_BASE_MX, CLKIN_MAINPLL, true, false);
1a001460:	2300      	movs	r3, #0
1a001462:	2201      	movs	r2, #1
1a001464:	2109      	movs	r1, #9
1a001466:	2004      	movs	r0, #4
1a001468:	f7ff fee2 	bl	1a001230 <Chip_Clock_SetBaseClock>

	if (direct) {
1a00146c:	b306      	cbz	r6, 1a0014b0 <Chip_SetupCoreClock+0xec>
		delay = 50000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a00146e:	f24c 3350 	movw	r3, #50000	; 0xc350
1a001472:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize*/
1a001474:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a001476:	1e5a      	subs	r2, r3, #1
1a001478:	9209      	str	r2, [sp, #36]	; 0x24
1a00147a:	2b00      	cmp	r3, #0
1a00147c:	d1fa      	bne.n	1a001474 <Chip_SetupCoreClock+0xb0>
		ppll.ctrl |= 1 << 7;
1a00147e:	9b01      	ldr	r3, [sp, #4]
1a001480:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a001484:	9301      	str	r3, [sp, #4]
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a001486:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a00148a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a00148e:	9a05      	ldr	r2, [sp, #20]
1a001490:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a001494:	9a03      	ldr	r2, [sp, #12]
1a001496:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a00149a:	9a04      	ldr	r2, [sp, #16]
1a00149c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a0014a0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0014a4:	4a1a      	ldr	r2, [pc, #104]	; (1a001510 <Chip_SetupCoreClock+0x14c>)
1a0014a6:	6453      	str	r3, [r2, #68]	; 0x44
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
		ppll.psel--;
		Chip_Clock_SetupMainPLL(&ppll); /* Set PDIV to operate at full frequency */
	}

	if (setbase) {
1a0014a8:	2c00      	cmp	r4, #0
1a0014aa:	d12e      	bne.n	1a00150a <Chip_SetupCoreClock+0x146>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
									InitClkStates[i].autoblock_enab, InitClkStates[i].powerdn);
		}
	}
}
1a0014ac:	b00a      	add	sp, #40	; 0x28
1a0014ae:	bd70      	pop	{r4, r5, r6, pc}
	} else if (pdivide) {
1a0014b0:	2d00      	cmp	r5, #0
1a0014b2:	d0f9      	beq.n	1a0014a8 <Chip_SetupCoreClock+0xe4>
		delay = 50000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a0014b4:	f24c 3350 	movw	r3, #50000	; 0xc350
1a0014b8:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
1a0014ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0014bc:	1e5a      	subs	r2, r3, #1
1a0014be:	9209      	str	r2, [sp, #36]	; 0x24
1a0014c0:	2b00      	cmp	r3, #0
1a0014c2:	d1fa      	bne.n	1a0014ba <Chip_SetupCoreClock+0xf6>
		ppll.psel--;
1a0014c4:	9b04      	ldr	r3, [sp, #16]
1a0014c6:	1e5a      	subs	r2, r3, #1
1a0014c8:	9204      	str	r2, [sp, #16]
1a0014ca:	f89d 1008 	ldrb.w	r1, [sp, #8]
1a0014ce:	9b01      	ldr	r3, [sp, #4]
1a0014d0:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
1a0014d4:	9905      	ldr	r1, [sp, #20]
1a0014d6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a0014da:	9903      	ldr	r1, [sp, #12]
1a0014dc:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
1a0014e0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a0014e4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0014e8:	4a09      	ldr	r2, [pc, #36]	; (1a001510 <Chip_SetupCoreClock+0x14c>)
1a0014ea:	6453      	str	r3, [r2, #68]	; 0x44
1a0014ec:	e7dc      	b.n	1a0014a8 <Chip_SetupCoreClock+0xe4>
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
1a0014ee:	480a      	ldr	r0, [pc, #40]	; (1a001518 <Chip_SetupCoreClock+0x154>)
1a0014f0:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a0014f4:	78cb      	ldrb	r3, [r1, #3]
1a0014f6:	788a      	ldrb	r2, [r1, #2]
1a0014f8:	7849      	ldrb	r1, [r1, #1]
1a0014fa:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a0014fe:	f7ff fe97 	bl	1a001230 <Chip_Clock_SetBaseClock>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
1a001502:	3401      	adds	r4, #1
1a001504:	2c11      	cmp	r4, #17
1a001506:	d9f2      	bls.n	1a0014ee <Chip_SetupCoreClock+0x12a>
1a001508:	e7d0      	b.n	1a0014ac <Chip_SetupCoreClock+0xe8>
1a00150a:	2400      	movs	r4, #0
1a00150c:	e7fa      	b.n	1a001504 <Chip_SetupCoreClock+0x140>
1a00150e:	bf00      	nop
1a001510:	40050000 	.word	0x40050000
1a001514:	068e7780 	.word	0x068e7780
1a001518:	1a007894 	.word	0x1a007894

1a00151c <Chip_SSP_GetClockIndex>:
/* Returns clock index for the register interface */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a00151c:	4b03      	ldr	r3, [pc, #12]	; (1a00152c <Chip_SSP_GetClockIndex+0x10>)
1a00151e:	4298      	cmp	r0, r3
1a001520:	d001      	beq.n	1a001526 <Chip_SSP_GetClockIndex+0xa>
		clkSSP = CLK_MX_SSP1;
	}
	else {
		clkSSP = CLK_MX_SSP0;
1a001522:	2083      	movs	r0, #131	; 0x83
	}

	return clkSSP;
}
1a001524:	4770      	bx	lr
		clkSSP = CLK_MX_SSP1;
1a001526:	20a5      	movs	r0, #165	; 0xa5
1a001528:	4770      	bx	lr
1a00152a:	bf00      	nop
1a00152c:	400c5000 	.word	0x400c5000

1a001530 <Chip_SSP_GetPeriphClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetPeriphClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a001530:	4b04      	ldr	r3, [pc, #16]	; (1a001544 <Chip_SSP_GetPeriphClockIndex+0x14>)
1a001532:	4298      	cmp	r0, r3
1a001534:	d002      	beq.n	1a00153c <Chip_SSP_GetPeriphClockIndex+0xc>
		clkSSP = CLK_APB2_SSP1;
	}
	else {
		clkSSP = CLK_APB0_SSP0;
1a001536:	f240 2002 	movw	r0, #514	; 0x202
	}

	return clkSSP;
}
1a00153a:	4770      	bx	lr
		clkSSP = CLK_APB2_SSP1;
1a00153c:	f44f 70f1 	mov.w	r0, #482	; 0x1e2
1a001540:	4770      	bx	lr
1a001542:	bf00      	nop
1a001544:	400c5000 	.word	0x400c5000

1a001548 <Chip_SSP_SetClockRate>:

/*Set up output clocks per bit for SSP bus*/
void Chip_SSP_SetClockRate(LPC_SSP_T *pSSP, uint32_t clk_rate, uint32_t prescale)
{
	uint32_t temp;
	temp = pSSP->CR0 & (~(SSP_CR0_SCR(0xFF)));
1a001548:	6803      	ldr	r3, [r0, #0]
1a00154a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
	pSSP->CR0 = temp | (SSP_CR0_SCR(clk_rate));
1a00154e:	0209      	lsls	r1, r1, #8
1a001550:	b289      	uxth	r1, r1
1a001552:	4319      	orrs	r1, r3
1a001554:	6001      	str	r1, [r0, #0]
	pSSP->CPSR = prescale;
1a001556:	6102      	str	r2, [r0, #16]
}
1a001558:	4770      	bx	lr

1a00155a <Chip_SSP_SetBitRate>:
	}
}

/* Set the clock frequency for SSP interface */
void Chip_SSP_SetBitRate(LPC_SSP_T *pSSP, uint32_t bitRate)
{
1a00155a:	b570      	push	{r4, r5, r6, lr}
1a00155c:	4606      	mov	r6, r0
1a00155e:	460d      	mov	r5, r1
	uint32_t ssp_clk, cr0_div, cmp_clk, prescale;

	ssp_clk = Chip_Clock_GetRate(Chip_SSP_GetPeriphClockIndex(pSSP));
1a001560:	f7ff ffe6 	bl	1a001530 <Chip_SSP_GetPeriphClockIndex>
1a001564:	f7ff fefc 	bl	1a001360 <Chip_Clock_GetRate>

	cr0_div = 0;
	cmp_clk = 0xFFFFFFFF;
	prescale = 2;
1a001568:	2202      	movs	r2, #2
	cmp_clk = 0xFFFFFFFF;
1a00156a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
	cr0_div = 0;
1a00156e:	2100      	movs	r1, #0

	while (cmp_clk > bitRate) {
1a001570:	e000      	b.n	1a001574 <Chip_SSP_SetBitRate+0x1a>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
		if (cmp_clk > bitRate) {
			cr0_div++;
1a001572:	4621      	mov	r1, r4
	while (cmp_clk > bitRate) {
1a001574:	42ab      	cmp	r3, r5
1a001576:	d90b      	bls.n	1a001590 <Chip_SSP_SetBitRate+0x36>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
1a001578:	1c4c      	adds	r4, r1, #1
1a00157a:	fb02 f304 	mul.w	r3, r2, r4
1a00157e:	fbb0 f3f3 	udiv	r3, r0, r3
		if (cmp_clk > bitRate) {
1a001582:	429d      	cmp	r5, r3
1a001584:	d2f6      	bcs.n	1a001574 <Chip_SSP_SetBitRate+0x1a>
			if (cr0_div > 0xFF) {
1a001586:	2cff      	cmp	r4, #255	; 0xff
1a001588:	d9f3      	bls.n	1a001572 <Chip_SSP_SetBitRate+0x18>
				cr0_div = 0;
				prescale += 2;
1a00158a:	3202      	adds	r2, #2
				cr0_div = 0;
1a00158c:	2100      	movs	r1, #0
1a00158e:	e7f1      	b.n	1a001574 <Chip_SSP_SetBitRate+0x1a>
			}
		}
	}

	Chip_SSP_SetClockRate(pSSP, cr0_div, prescale);
1a001590:	4630      	mov	r0, r6
1a001592:	f7ff ffd9 	bl	1a001548 <Chip_SSP_SetClockRate>
}
1a001596:	bd70      	pop	{r4, r5, r6, pc}

1a001598 <Chip_SSP_Init>:

/* Initialize the SSP */
void Chip_SSP_Init(LPC_SSP_T *pSSP)
{
1a001598:	b510      	push	{r4, lr}
1a00159a:	4604      	mov	r4, r0
	Chip_Clock_Enable(Chip_SSP_GetClockIndex(pSSP));
1a00159c:	f7ff ffbe 	bl	1a00151c <Chip_SSP_GetClockIndex>
1a0015a0:	f7ff feaa 	bl	1a0012f8 <Chip_Clock_Enable>
	Chip_Clock_Enable(Chip_SSP_GetPeriphClockIndex(pSSP));
1a0015a4:	4620      	mov	r0, r4
1a0015a6:	f7ff ffc3 	bl	1a001530 <Chip_SSP_GetPeriphClockIndex>
1a0015aa:	f7ff fea5 	bl	1a0012f8 <Chip_Clock_Enable>
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a0015ae:	6863      	ldr	r3, [r4, #4]
1a0015b0:	f023 0304 	bic.w	r3, r3, #4
1a0015b4:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a0015b6:	6823      	ldr	r3, [r4, #0]
1a0015b8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a0015bc:	f043 0307 	orr.w	r3, r3, #7
1a0015c0:	6023      	str	r3, [r4, #0]

	Chip_SSP_Set_Mode(pSSP, SSP_MODE_MASTER);
	Chip_SSP_SetFormat(pSSP, SSP_BITS_8, SSP_FRAMEFORMAT_SPI, SSP_CLOCK_CPHA0_CPOL0);
	Chip_SSP_SetBitRate(pSSP, 100000);
1a0015c2:	4902      	ldr	r1, [pc, #8]	; (1a0015cc <Chip_SSP_Init+0x34>)
1a0015c4:	4620      	mov	r0, r4
1a0015c6:	f7ff ffc8 	bl	1a00155a <Chip_SSP_SetBitRate>
}
1a0015ca:	bd10      	pop	{r4, pc}
1a0015cc:	000186a0 	.word	0x000186a0

1a0015d0 <Chip_I2C_EventHandler>:
{
	struct i2c_interface *iic = &i2c[id];
	volatile I2C_STATUS_T *stat;

	/* Only WAIT event needs to be handled */
	if (event != I2C_EVENT_WAIT) {
1a0015d0:	2901      	cmp	r1, #1
1a0015d2:	d109      	bne.n	1a0015e8 <Chip_I2C_EventHandler+0x18>
		return;
	}

	stat = &iic->mXfer->status;
1a0015d4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
1a0015d8:	0082      	lsls	r2, r0, #2
1a0015da:	4b04      	ldr	r3, [pc, #16]	; (1a0015ec <Chip_I2C_EventHandler+0x1c>)
1a0015dc:	4413      	add	r3, r2
1a0015de:	691a      	ldr	r2, [r3, #16]
	/* Wait for the status to change */
	while (*stat == I2C_STATUS_BUSY) {}
1a0015e0:	7d13      	ldrb	r3, [r2, #20]
1a0015e2:	b2db      	uxtb	r3, r3
1a0015e4:	2b04      	cmp	r3, #4
1a0015e6:	d0fb      	beq.n	1a0015e0 <Chip_I2C_EventHandler+0x10>
}
1a0015e8:	4770      	bx	lr
1a0015ea:	bf00      	nop
1a0015ec:	10000000 	.word	0x10000000

1a0015f0 <Chip_I2C_Init>:
	}
}

/* Initializes the LPC_I2C peripheral with specified parameter */
void Chip_I2C_Init(I2C_ID_T id)
{
1a0015f0:	b570      	push	{r4, r5, r6, lr}
1a0015f2:	4605      	mov	r5, r0
	Chip_Clock_Enable(i2c[id].clk);
1a0015f4:	4e06      	ldr	r6, [pc, #24]	; (1a001610 <Chip_I2C_Init+0x20>)
1a0015f6:	00c4      	lsls	r4, r0, #3
1a0015f8:	1a22      	subs	r2, r4, r0
1a0015fa:	0093      	lsls	r3, r2, #2
1a0015fc:	4433      	add	r3, r6
1a0015fe:	8898      	ldrh	r0, [r3, #4]
1a001600:	f7ff fe7a 	bl	1a0012f8 <Chip_Clock_Enable>
	enableClk(id);

	/* Set I2C operation to default */
	LPC_I2Cx(id)->CONCLR = (I2C_CON_AA | I2C_CON_SI | I2C_CON_STA | I2C_CON_I2EN);
1a001604:	1b64      	subs	r4, r4, r5
1a001606:	00a3      	lsls	r3, r4, #2
1a001608:	58f3      	ldr	r3, [r6, r3]
1a00160a:	226c      	movs	r2, #108	; 0x6c
1a00160c:	619a      	str	r2, [r3, #24]
}
1a00160e:	bd70      	pop	{r4, r5, r6, pc}
1a001610:	10000000 	.word	0x10000000

1a001614 <Chip_I2C_SetClockRate>:
	disableClk(id);
}

/* Set up clock rate for LPC_I2C peripheral */
void Chip_I2C_SetClockRate(I2C_ID_T id, uint32_t clockrate)
{
1a001614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a001618:	460c      	mov	r4, r1
	return Chip_Clock_GetRate(i2c[id].clk);
1a00161a:	4e0b      	ldr	r6, [pc, #44]	; (1a001648 <Chip_I2C_SetClockRate+0x34>)
1a00161c:	00c5      	lsls	r5, r0, #3
1a00161e:	1a2b      	subs	r3, r5, r0
1a001620:	ea4f 0883 	mov.w	r8, r3, lsl #2
1a001624:	eb06 0308 	add.w	r3, r6, r8
1a001628:	8898      	ldrh	r0, [r3, #4]
1a00162a:	f7ff fe99 	bl	1a001360 <Chip_Clock_GetRate>
	uint32_t SCLValue;

	SCLValue = (getClkRate(id) / clockrate);
1a00162e:	fbb0 f0f4 	udiv	r0, r0, r4
	LPC_I2Cx(id)->SCLH = (uint32_t) (SCLValue >> 1);
1a001632:	f856 3008 	ldr.w	r3, [r6, r8]
1a001636:	0842      	lsrs	r2, r0, #1
1a001638:	611a      	str	r2, [r3, #16]
	LPC_I2Cx(id)->SCLL = (uint32_t) (SCLValue - LPC_I2Cx(id)->SCLH);
1a00163a:	f856 3008 	ldr.w	r3, [r6, r8]
1a00163e:	691a      	ldr	r2, [r3, #16]
1a001640:	1a80      	subs	r0, r0, r2
1a001642:	6158      	str	r0, [r3, #20]
}
1a001644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a001648:	10000000 	.word	0x10000000

1a00164c <SystemInit>:
 */

#include <board.h>

void SystemInit(void)
{
1a00164c:	b508      	push	{r3, lr}
   extern void *g_pfnVectors;
   SCB->VTOR = (unsigned int) &g_pfnVectors;
1a00164e:	4a0b      	ldr	r2, [pc, #44]	; (1a00167c <SystemInit+0x30>)
1a001650:	4b0b      	ldr	r3, [pc, #44]	; (1a001680 <SystemInit+0x34>)
1a001652:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE uint32_t SCB_GetFPUType(void)
{
  uint32_t mvfr0;

  mvfr0 = FPU->MVFR0;
1a001654:	f503 730c 	add.w	r3, r3, #560	; 0x230
1a001658:	691b      	ldr	r3, [r3, #16]
  if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1a00165a:	f403 637f 	and.w	r3, r3, #4080	; 0xff0
1a00165e:	2b20      	cmp	r3, #32
1a001660:	d004      	beq.n	1a00166c <SystemInit+0x20>

   if (SCB_GetFPUType() > 0)
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */

   /* Board specific SystemInit */
   Board_SystemInit();
1a001662:	f7ff fa29 	bl	1a000ab8 <Board_SystemInit>
   Board_Init();
1a001666:	f7ff f9af 	bl	1a0009c8 <Board_Init>
}
1a00166a:	bd08      	pop	{r3, pc}
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
1a00166c:	4a04      	ldr	r2, [pc, #16]	; (1a001680 <SystemInit+0x34>)
1a00166e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
1a001672:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a001676:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
1a00167a:	e7f2      	b.n	1a001662 <SystemInit+0x16>
1a00167c:	1a000000 	.word	0x1a000000
1a001680:	e000ed00 	.word	0xe000ed00

1a001684 <cyclesCounterInit>:
 * @return TRUE si esta OK, FALSE en caso de error.
 */
bool_t cyclesCounterInit( uint32_t clockSpeed )
{
   //Asigna  a la variable local ClockSpeed el valor recibido como argumento.
   ClockSpeed = clockSpeed;
1a001684:	4b04      	ldr	r3, [pc, #16]	; (1a001698 <cyclesCounterInit+0x14>)
1a001686:	6018      	str	r0, [r3, #0]
   //Iniciar el contador de ciclos de clock.
   DWT_CTRL  |= 1; // *DWT_CTRL  |= 1;
1a001688:	4a04      	ldr	r2, [pc, #16]	; (1a00169c <cyclesCounterInit+0x18>)
1a00168a:	6813      	ldr	r3, [r2, #0]
1a00168c:	f043 0301 	orr.w	r3, r3, #1
1a001690:	6013      	str	r3, [r2, #0]
   return TRUE;
}
1a001692:	2001      	movs	r0, #1
1a001694:	4770      	bx	lr
1a001696:	bf00      	nop
1a001698:	10000038 	.word	0x10000038
1a00169c:	e0001000 	.word	0xe0001000

1a0016a0 <tickRead>:
   #ifdef USE_FREERTOS
      return xTaskGetTickCount();
   #else
      return tickCounter;
   #endif
}
1a0016a0:	4b01      	ldr	r3, [pc, #4]	; (1a0016a8 <tickRead+0x8>)
1a0016a2:	e9d3 0100 	ldrd	r0, r1, [r3]
1a0016a6:	4770      	bx	lr
1a0016a8:	10000a60 	.word	0x10000a60

1a0016ac <tickPowerSet>:
void tickPowerSet( bool_t power )
{
   #ifdef USE_FREERTOS
      uartWriteString( UART_USB, "Use of tickPowerSet() in a program with freeRTOS has no effect\r\n" );
   #else
      if( power ) {
1a0016ac:	b118      	cbz	r0, 1a0016b6 <tickPowerSet+0xa>
         // Enable SysTick IRQ and SysTick Timer
         SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
1a0016ae:	4b04      	ldr	r3, [pc, #16]	; (1a0016c0 <tickPowerSet+0x14>)
1a0016b0:	2207      	movs	r2, #7
1a0016b2:	601a      	str	r2, [r3, #0]
1a0016b4:	4770      	bx	lr
                         SysTick_CTRL_TICKINT_Msk   |
                         SysTick_CTRL_ENABLE_Msk;
      } else {
         // Disable SysTick IRQ and SysTick Timer
         SysTick->CTRL = 0x0000000;
1a0016b6:	4b02      	ldr	r3, [pc, #8]	; (1a0016c0 <tickPowerSet+0x14>)
1a0016b8:	2200      	movs	r2, #0
1a0016ba:	601a      	str	r2, [r3, #0]
      }
   #endif
}
1a0016bc:	4770      	bx	lr
1a0016be:	bf00      	nop
1a0016c0:	e000e010 	.word	0xe000e010

1a0016c4 <tickInit>:
{
1a0016c4:	b538      	push	{r3, r4, r5, lr}
      if( tickRateMSvalue == 0 ) {
1a0016c6:	ea50 0401 	orrs.w	r4, r0, r1
1a0016ca:	d02a      	beq.n	1a001722 <tickInit+0x5e>
         if( (tickRateMSvalue >= 1) && (tickRateMSvalue <= 50) ) {
1a0016cc:	f110 32ff 	adds.w	r2, r0, #4294967295	; 0xffffffff
1a0016d0:	f141 33ff 	adc.w	r3, r1, #4294967295	; 0xffffffff
1a0016d4:	2b00      	cmp	r3, #0
1a0016d6:	bf08      	it	eq
1a0016d8:	2a32      	cmpeq	r2, #50	; 0x32
1a0016da:	d227      	bcs.n	1a00172c <tickInit+0x68>
            tickRateMS = tickRateMSvalue;
1a0016dc:	4b14      	ldr	r3, [pc, #80]	; (1a001730 <tickInit+0x6c>)
1a0016de:	e9c3 0100 	strd	r0, r1, [r3]
            SysTick_Config( SystemCoreClock * tickRateMSvalue / 1000 );
1a0016e2:	4b14      	ldr	r3, [pc, #80]	; (1a001734 <tickInit+0x70>)
1a0016e4:	681b      	ldr	r3, [r3, #0]
1a0016e6:	fba3 4500 	umull	r4, r5, r3, r0
1a0016ea:	fb03 5501 	mla	r5, r3, r1, r5
1a0016ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
1a0016f2:	2300      	movs	r3, #0
1a0016f4:	4620      	mov	r0, r4
1a0016f6:	4629      	mov	r1, r5
1a0016f8:	f000 ff02 	bl	1a002500 <__aeabi_uldivmod>
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
1a0016fc:	3801      	subs	r0, #1
1a0016fe:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a001702:	d209      	bcs.n	1a001718 <tickInit+0x54>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
1a001704:	4b0c      	ldr	r3, [pc, #48]	; (1a001738 <tickInit+0x74>)
1a001706:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
1a001708:	4a0c      	ldr	r2, [pc, #48]	; (1a00173c <tickInit+0x78>)
1a00170a:	21e0      	movs	r1, #224	; 0xe0
1a00170c:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
1a001710:	2200      	movs	r2, #0
1a001712:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1a001714:	2207      	movs	r2, #7
1a001716:	601a      	str	r2, [r3, #0]
            tickPowerSet( ON );
1a001718:	2001      	movs	r0, #1
1a00171a:	f7ff ffc7 	bl	1a0016ac <tickPowerSet>
      bool_t ret_val = 1;
1a00171e:	2001      	movs	r0, #1
}
1a001720:	bd38      	pop	{r3, r4, r5, pc}
         tickPowerSet( OFF );
1a001722:	2000      	movs	r0, #0
1a001724:	f7ff ffc2 	bl	1a0016ac <tickPowerSet>
         ret_val = 0;
1a001728:	2000      	movs	r0, #0
1a00172a:	e7f9      	b.n	1a001720 <tickInit+0x5c>
            ret_val = 0;
1a00172c:	2000      	movs	r0, #0
1a00172e:	e7f7      	b.n	1a001720 <tickInit+0x5c>
1a001730:	10000040 	.word	0x10000040
1a001734:	10000afc 	.word	0x10000afc
1a001738:	e000e010 	.word	0xe000e010
1a00173c:	e000ed00 	.word	0xe000ed00

1a001740 <SysTick_Handler>:

//__attribute__ ((section(".after_vectors")))

// SysTick Timer ISR Handler
void tickerCallback( void )   // Before SysTick_Handler
{
1a001740:	b508      	push	{r3, lr}
   // Increment Tick counters
   tickCounter++;
1a001742:	4a07      	ldr	r2, [pc, #28]	; (1a001760 <SysTick_Handler+0x20>)
1a001744:	6813      	ldr	r3, [r2, #0]
1a001746:	6851      	ldr	r1, [r2, #4]
1a001748:	3301      	adds	r3, #1
1a00174a:	f141 0100 	adc.w	r1, r1, #0
1a00174e:	6013      	str	r3, [r2, #0]
1a001750:	6051      	str	r1, [r2, #4]
   // Execute Tick Hook function if pointer is not NULL
   if( (tickHookFunction != NULL) ) {
1a001752:	4b04      	ldr	r3, [pc, #16]	; (1a001764 <SysTick_Handler+0x24>)
1a001754:	681b      	ldr	r3, [r3, #0]
1a001756:	b113      	cbz	r3, 1a00175e <SysTick_Handler+0x1e>
      (* tickHookFunction )( callBackFuncParams );
1a001758:	4a03      	ldr	r2, [pc, #12]	; (1a001768 <SysTick_Handler+0x28>)
1a00175a:	6810      	ldr	r0, [r2, #0]
1a00175c:	4798      	blx	r3
   }
}
1a00175e:	bd08      	pop	{r3, pc}
1a001760:	10000a60 	.word	0x10000a60
1a001764:	10000a68 	.word	0x10000a68
1a001768:	10000a5c 	.word	0x10000a5c

1a00176c <adcInit>:
 * @brief:  enable/disable the ADC and DAC peripheral
 * @param:  ADC_ENABLE, ADC_DISABLE
 * @return: none
*/
void adcInit( adcInit_t config )
{
1a00176c:	b530      	push	{r4, r5, lr}
1a00176e:	b083      	sub	sp, #12
   T_FIL3  ---- 7   ADC0_0 (ANALOG_SEL)
   T_COL1  ---- 132 ADC0_4 (ANALOG_SEL)
   ENET_MDC --- 140 ADC1_6 (ANALOG_SEL)
   */
   
   switch(config) {
1a001770:	b118      	cbz	r0, 1a00177a <adcInit+0xe>
1a001772:	2801      	cmp	r0, #1
1a001774:	d04b      	beq.n	1a00180e <adcInit+0xa2>
         /* Disable ADC peripheral */
         Chip_ADC_DeInit( LPC_ADC0 );
         break;
      }

}
1a001776:	b003      	add	sp, #12
1a001778:	bd30      	pop	{r4, r5, pc}
         ADC_CLOCK_SETUP_T ADCSetup = {
1a00177a:	4b27      	ldr	r3, [pc, #156]	; (1a001818 <adcInit+0xac>)
1a00177c:	9300      	str	r3, [sp, #0]
1a00177e:	2500      	movs	r5, #0
1a001780:	f88d 5004 	strb.w	r5, [sp, #4]
1a001784:	f88d 5005 	strb.w	r5, [sp, #5]
         Chip_ADC_Init( LPC_ADC0, &ADCSetup );
1a001788:	4c24      	ldr	r4, [pc, #144]	; (1a00181c <adcInit+0xb0>)
1a00178a:	4669      	mov	r1, sp
1a00178c:	4620      	mov	r0, r4
1a00178e:	f7ff fa7d 	bl	1a000c8c <Chip_ADC_Init>
         Chip_ADC_SetBurstCmd( LPC_ADC0, DISABLE );
1a001792:	4629      	mov	r1, r5
1a001794:	4620      	mov	r0, r4
1a001796:	f7ff fb18 	bl	1a000dca <Chip_ADC_SetBurstCmd>
         Chip_ADC_SetSampleRate( LPC_ADC0, &ADCSetup, ADC_MAX_SAMPLE_RATE/2 );
1a00179a:	4a21      	ldr	r2, [pc, #132]	; (1a001820 <adcInit+0xb4>)
1a00179c:	4669      	mov	r1, sp
1a00179e:	4620      	mov	r0, r4
1a0017a0:	f7ff fadf 	bl	1a000d62 <Chip_ADC_SetSampleRate>
         Chip_ADC_EnableChannel( LPC_ADC0, ADC_CH1, DISABLE );
1a0017a4:	462a      	mov	r2, r5
1a0017a6:	2101      	movs	r1, #1
1a0017a8:	4620      	mov	r0, r4
1a0017aa:	f7ff faf9 	bl	1a000da0 <Chip_ADC_EnableChannel>
         Chip_ADC_Int_SetChannelCmd( LPC_ADC0, ADC_CH1, DISABLE );
1a0017ae:	462a      	mov	r2, r5
1a0017b0:	2101      	movs	r1, #1
1a0017b2:	4620      	mov	r0, r4
1a0017b4:	f7ff fab4 	bl	1a000d20 <Chip_ADC_Int_SetChannelCmd>
         Chip_ADC_EnableChannel( LPC_ADC0, ADC_CH2, DISABLE );
1a0017b8:	462a      	mov	r2, r5
1a0017ba:	2102      	movs	r1, #2
1a0017bc:	4620      	mov	r0, r4
1a0017be:	f7ff faef 	bl	1a000da0 <Chip_ADC_EnableChannel>
         Chip_ADC_Int_SetChannelCmd( LPC_ADC0, ADC_CH2, DISABLE );
1a0017c2:	462a      	mov	r2, r5
1a0017c4:	2102      	movs	r1, #2
1a0017c6:	4620      	mov	r0, r4
1a0017c8:	f7ff faaa 	bl	1a000d20 <Chip_ADC_Int_SetChannelCmd>
         Chip_ADC_EnableChannel( LPC_ADC0, ADC_CH3, DISABLE );
1a0017cc:	462a      	mov	r2, r5
1a0017ce:	2103      	movs	r1, #3
1a0017d0:	4620      	mov	r0, r4
1a0017d2:	f7ff fae5 	bl	1a000da0 <Chip_ADC_EnableChannel>
         Chip_ADC_Int_SetChannelCmd( LPC_ADC0, ADC_CH3, DISABLE );
1a0017d6:	462a      	mov	r2, r5
1a0017d8:	2103      	movs	r1, #3
1a0017da:	4620      	mov	r0, r4
1a0017dc:	f7ff faa0 	bl	1a000d20 <Chip_ADC_Int_SetChannelCmd>
         Chip_ADC_EnableChannel( LPC_ADC0, ADC_CH4, DISABLE );
1a0017e0:	462a      	mov	r2, r5
1a0017e2:	2104      	movs	r1, #4
1a0017e4:	4620      	mov	r0, r4
1a0017e6:	f7ff fadb 	bl	1a000da0 <Chip_ADC_EnableChannel>
         Chip_ADC_Int_SetChannelCmd( LPC_ADC0, ADC_CH4, DISABLE );
1a0017ea:	462a      	mov	r2, r5
1a0017ec:	2104      	movs	r1, #4
1a0017ee:	4620      	mov	r0, r4
1a0017f0:	f7ff fa96 	bl	1a000d20 <Chip_ADC_Int_SetChannelCmd>
	LPC_SCU->ENAIO[ADC_ID] |= 1UL << channel;
1a0017f4:	4a0b      	ldr	r2, [pc, #44]	; (1a001824 <adcInit+0xb8>)
1a0017f6:	f8d2 3c88 	ldr.w	r3, [r2, #3208]	; 0xc88
1a0017fa:	f043 0310 	orr.w	r3, r3, #16
1a0017fe:	f8c2 3c88 	str.w	r3, [r2, #3208]	; 0xc88
         Chip_ADC_Int_SetChannelCmd( LPC_ADC0, ADC_CH5, DISABLE ); // Revisar codigo
1a001802:	462a      	mov	r2, r5
1a001804:	2105      	movs	r1, #5
1a001806:	4620      	mov	r0, r4
1a001808:	f7ff fa8a 	bl	1a000d20 <Chip_ADC_Int_SetChannelCmd>
      break;
1a00180c:	e7b3      	b.n	1a001776 <adcInit+0xa>
         Chip_ADC_DeInit( LPC_ADC0 );
1a00180e:	4803      	ldr	r0, [pc, #12]	; (1a00181c <adcInit+0xb0>)
1a001810:	f7ff fa5c 	bl	1a000ccc <Chip_ADC_DeInit>
}
1a001814:	e7af      	b.n	1a001776 <adcInit+0xa>
1a001816:	bf00      	nop
1a001818:	00061a80 	.word	0x00061a80
1a00181c:	400e3000 	.word	0x400e3000
1a001820:	00030d40 	.word	0x00030d40
1a001824:	40086000 	.word	0x40086000

1a001828 <adcRead>:
 * @brief   Get the value of one ADC channel. Mode: BLOCKING
 * @param   AI0 ... AIn
 * @return  analog value
 */
uint16_t adcRead( adcMap_t analogInput )
{
1a001828:	b570      	push	{r4, r5, r6, lr}
1a00182a:	b082      	sub	sp, #8
   uint8_t lpcAdcChannel = (uint8_t)(analogInput + 1);
1a00182c:	3001      	adds	r0, #1
1a00182e:	b2c4      	uxtb	r4, r0
   uint16_t analogValue = 0;
1a001830:	2600      	movs	r6, #0
1a001832:	f8ad 6006 	strh.w	r6, [sp, #6]

   // Enable channel
   Chip_ADC_EnableChannel(LPC_ADC0, lpcAdcChannel, ENABLE);
1a001836:	4d11      	ldr	r5, [pc, #68]	; (1a00187c <adcRead+0x54>)
1a001838:	2201      	movs	r2, #1
1a00183a:	4621      	mov	r1, r4
1a00183c:	4628      	mov	r0, r5
1a00183e:	f7ff faaf 	bl	1a000da0 <Chip_ADC_EnableChannel>

   // Start conversion
   Chip_ADC_SetStartMode(LPC_ADC0, ADC_START_NOW, ADC_TRIGGERMODE_RISING);
1a001842:	4632      	mov	r2, r6
1a001844:	2101      	movs	r1, #1
1a001846:	4628      	mov	r0, r5
1a001848:	f7ff fa7b 	bl	1a000d42 <Chip_ADC_SetStartMode>

   // Wait for conversion complete
   while(
      (Chip_ADC_ReadStatus(LPC_ADC0, lpcAdcChannel, ADC_DR_DONE_STAT) != SET)
1a00184c:	2200      	movs	r2, #0
1a00184e:	4621      	mov	r1, r4
1a001850:	480a      	ldr	r0, [pc, #40]	; (1a00187c <adcRead+0x54>)
1a001852:	f7ff fa4a 	bl	1a000cea <Chip_ADC_ReadStatus>
   while(
1a001856:	2801      	cmp	r0, #1
1a001858:	d1f8      	bne.n	1a00184c <adcRead+0x24>
   );

   // Enable Read value
   Chip_ADC_ReadValue( LPC_ADC0, lpcAdcChannel, &analogValue );
1a00185a:	4d08      	ldr	r5, [pc, #32]	; (1a00187c <adcRead+0x54>)
1a00185c:	f10d 0206 	add.w	r2, sp, #6
1a001860:	4621      	mov	r1, r4
1a001862:	4628      	mov	r0, r5
1a001864:	f7ff fa3d 	bl	1a000ce2 <Chip_ADC_ReadValue>

   // Disable channel
   Chip_ADC_EnableChannel( LPC_ADC0, lpcAdcChannel, DISABLE );
1a001868:	2200      	movs	r2, #0
1a00186a:	4621      	mov	r1, r4
1a00186c:	4628      	mov	r0, r5
1a00186e:	f7ff fa97 	bl	1a000da0 <Chip_ADC_EnableChannel>

   return analogValue;
}
1a001872:	f8bd 0006 	ldrh.w	r0, [sp, #6]
1a001876:	b002      	add	sp, #8
1a001878:	bd70      	pop	{r4, r5, r6, pc}
1a00187a:	bf00      	nop
1a00187c:	400e3000 	.word	0x400e3000

1a001880 <gpioObtainPinInit>:

static void gpioObtainPinInit( gpioMap_t pin,
                               int8_t *pinNamePort, int8_t *pinNamePin,
                               int8_t *func, int8_t *gpioPort,
                               int8_t *gpioPin )
{
1a001880:	b430      	push	{r4, r5}

   *pinNamePort = gpioPinsInit[pin].pinName.port;
1a001882:	4d0b      	ldr	r5, [pc, #44]	; (1a0018b0 <gpioObtainPinInit+0x30>)
1a001884:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a001888:	182c      	adds	r4, r5, r0
1a00188a:	5628      	ldrsb	r0, [r5, r0]
1a00188c:	7008      	strb	r0, [r1, #0]
   *pinNamePin  = gpioPinsInit[pin].pinName.pin;
1a00188e:	f994 1001 	ldrsb.w	r1, [r4, #1]
1a001892:	7011      	strb	r1, [r2, #0]
   *func        = gpioPinsInit[pin].func;
1a001894:	f994 2002 	ldrsb.w	r2, [r4, #2]
1a001898:	701a      	strb	r2, [r3, #0]
   *gpioPort    = gpioPinsInit[pin].gpio.port;
1a00189a:	f994 2003 	ldrsb.w	r2, [r4, #3]
1a00189e:	9b02      	ldr	r3, [sp, #8]
1a0018a0:	701a      	strb	r2, [r3, #0]
   *gpioPin     = gpioPinsInit[pin].gpio.pin;
1a0018a2:	f994 2004 	ldrsb.w	r2, [r4, #4]
1a0018a6:	9b03      	ldr	r3, [sp, #12]
1a0018a8:	701a      	strb	r2, [r3, #0]
}
1a0018aa:	bc30      	pop	{r4, r5}
1a0018ac:	4770      	bx	lr
1a0018ae:	bf00      	nop
1a0018b0:	1a0078dc 	.word	0x1a0078dc

1a0018b4 <gpioInit>:

/*==================[external functions definition]==========================*/

bool_t gpioInit( gpioMap_t pin, gpioInit_t config )
{
   if( pin == VCC ){
1a0018b4:	f110 0f02 	cmn.w	r0, #2
1a0018b8:	f000 80c7 	beq.w	1a001a4a <gpioInit+0x196>
	  return FALSE;
   }
   if( pin == GND ){
1a0018bc:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a0018c0:	f000 80c5 	beq.w	1a001a4e <gpioInit+0x19a>
{
1a0018c4:	b570      	push	{r4, r5, r6, lr}
1a0018c6:	b084      	sub	sp, #16
1a0018c8:	460c      	mov	r4, r1
	  return FALSE;
   }

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a0018ca:	2300      	movs	r3, #0
1a0018cc:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a0018d0:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a0018d4:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a0018d8:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a0018dc:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a0018e0:	f10d 030b 	add.w	r3, sp, #11
1a0018e4:	9301      	str	r3, [sp, #4]
1a0018e6:	ab03      	add	r3, sp, #12
1a0018e8:	9300      	str	r3, [sp, #0]
1a0018ea:	f10d 030d 	add.w	r3, sp, #13
1a0018ee:	f10d 020e 	add.w	r2, sp, #14
1a0018f2:	f10d 010f 	add.w	r1, sp, #15
1a0018f6:	f7ff ffc3 	bl	1a001880 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   switch(config) {
1a0018fa:	2c05      	cmp	r4, #5
1a0018fc:	f200 80a9 	bhi.w	1a001a52 <gpioInit+0x19e>
1a001900:	e8df f004 	tbb	[pc, r4]
1a001904:	45278109 	.word	0x45278109
1a001908:	0363      	.short	0x0363

   case GPIO_ENABLE:
      /* Initializes GPIO */
      Chip_GPIO_Init(LPC_GPIO_PORT);
1a00190a:	4853      	ldr	r0, [pc, #332]	; (1a001a58 <gpioInit+0x1a4>)
1a00190c:	f7ff fd58 	bl	1a0013c0 <Chip_GPIO_Init>
   bool_t ret_val     = 1;
1a001910:	2001      	movs	r0, #1
      break;
   }

   return ret_val;

}
1a001912:	b004      	add	sp, #16
1a001914:	bd70      	pop	{r4, r5, r6, pc}
      Chip_SCU_PinMux(
1a001916:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00191a:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00191e:	f89d 200d 	ldrb.w	r2, [sp, #13]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a001922:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a001926:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00192a:	494c      	ldr	r1, [pc, #304]	; (1a001a5c <gpioInit+0x1a8>)
1a00192c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a001930:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001934:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001938:	2001      	movs	r0, #1
1a00193a:	fa00 f102 	lsl.w	r1, r0, r2
{
	if (out) {
		pGPIO->DIR[portNum] |= bitValue;
	}
	else {
		pGPIO->DIR[portNum] &= ~bitValue;
1a00193e:	4c46      	ldr	r4, [pc, #280]	; (1a001a58 <gpioInit+0x1a4>)
1a001940:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001944:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001948:	ea22 0201 	bic.w	r2, r2, r1
1a00194c:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001950:	e7df      	b.n	1a001912 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a001952:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001956:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00195a:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00195e:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a001962:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001966:	493d      	ldr	r1, [pc, #244]	; (1a001a5c <gpioInit+0x1a8>)
1a001968:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a00196c:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001970:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001974:	2001      	movs	r0, #1
1a001976:	fa00 f102 	lsl.w	r1, r0, r2
1a00197a:	4c37      	ldr	r4, [pc, #220]	; (1a001a58 <gpioInit+0x1a4>)
1a00197c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001980:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001984:	ea22 0201 	bic.w	r2, r2, r1
1a001988:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a00198c:	e7c1      	b.n	1a001912 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a00198e:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001992:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001996:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00199a:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a00199e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0019a2:	492e      	ldr	r1, [pc, #184]	; (1a001a5c <gpioInit+0x1a8>)
1a0019a4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0019a8:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0019ac:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0019b0:	2001      	movs	r0, #1
1a0019b2:	fa00 f102 	lsl.w	r1, r0, r2
1a0019b6:	4c28      	ldr	r4, [pc, #160]	; (1a001a58 <gpioInit+0x1a4>)
1a0019b8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0019bc:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0019c0:	ea22 0201 	bic.w	r2, r2, r1
1a0019c4:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a0019c8:	e7a3      	b.n	1a001912 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a0019ca:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a0019ce:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a0019d2:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0019d6:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a0019da:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0019de:	491f      	ldr	r1, [pc, #124]	; (1a001a5c <gpioInit+0x1a8>)
1a0019e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0019e4:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0019e8:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0019ec:	2001      	movs	r0, #1
1a0019ee:	fa00 f102 	lsl.w	r1, r0, r2
1a0019f2:	4c19      	ldr	r4, [pc, #100]	; (1a001a58 <gpioInit+0x1a4>)
1a0019f4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0019f8:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0019fc:	ea22 0201 	bic.w	r2, r2, r1
1a001a00:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001a04:	e785      	b.n	1a001912 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a001a06:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001a0a:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001a0e:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a001a12:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a001a16:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001a1a:	4910      	ldr	r1, [pc, #64]	; (1a001a5c <gpioInit+0x1a8>)
1a001a1c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_OUTPUT );
1a001a20:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a001a24:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001a28:	2001      	movs	r0, #1
1a001a2a:	fa00 f102 	lsl.w	r1, r0, r2
		pGPIO->DIR[portNum] |= bitValue;
1a001a2e:	4b0a      	ldr	r3, [pc, #40]	; (1a001a58 <gpioInit+0x1a4>)
1a001a30:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a001a34:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1a001a38:	4331      	orrs	r1, r6
1a001a3a:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
      Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, 0);
1a001a3e:	b2d2      	uxtb	r2, r2
	pGPIO->B[port][pin] = setting;
1a001a40:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a001a44:	2100      	movs	r1, #0
1a001a46:	5499      	strb	r1, [r3, r2]
1a001a48:	e763      	b.n	1a001912 <gpioInit+0x5e>
	  return FALSE;
1a001a4a:	2000      	movs	r0, #0
1a001a4c:	4770      	bx	lr
	  return FALSE;
1a001a4e:	2000      	movs	r0, #0
}
1a001a50:	4770      	bx	lr
      ret_val = 0;
1a001a52:	2000      	movs	r0, #0
1a001a54:	e75d      	b.n	1a001912 <gpioInit+0x5e>
1a001a56:	bf00      	nop
1a001a58:	400f4000 	.word	0x400f4000
1a001a5c:	40086000 	.word	0x40086000

1a001a60 <gpioWrite>:


bool_t gpioWrite( gpioMap_t pin, bool_t value )
{
   if( pin == VCC ){
1a001a60:	f110 0f02 	cmn.w	r0, #2
1a001a64:	d02d      	beq.n	1a001ac2 <gpioWrite+0x62>
	  return FALSE;
   }
   if( pin == GND ){
1a001a66:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a001a6a:	d02c      	beq.n	1a001ac6 <gpioWrite+0x66>
{
1a001a6c:	b510      	push	{r4, lr}
1a001a6e:	b084      	sub	sp, #16
1a001a70:	460c      	mov	r4, r1
	  return FALSE;
   }

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a001a72:	2300      	movs	r3, #0
1a001a74:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a001a78:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a001a7c:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a001a80:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001a84:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001a88:	f10d 030b 	add.w	r3, sp, #11
1a001a8c:	9301      	str	r3, [sp, #4]
1a001a8e:	ab03      	add	r3, sp, #12
1a001a90:	9300      	str	r3, [sp, #0]
1a001a92:	f10d 030d 	add.w	r3, sp, #13
1a001a96:	f10d 020e 	add.w	r2, sp, #14
1a001a9a:	f10d 010f 	add.w	r1, sp, #15
1a001a9e:	f7ff feef 	bl	1a001880 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, value);
1a001aa2:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001aa6:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a001aaa:	1c21      	adds	r1, r4, #0
1a001aac:	bf18      	it	ne
1a001aae:	2101      	movne	r1, #1
1a001ab0:	015b      	lsls	r3, r3, #5
1a001ab2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a001ab6:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a001aba:	5499      	strb	r1, [r3, r2]

   return ret_val;
1a001abc:	2001      	movs	r0, #1
}
1a001abe:	b004      	add	sp, #16
1a001ac0:	bd10      	pop	{r4, pc}
	  return FALSE;
1a001ac2:	2000      	movs	r0, #0
1a001ac4:	4770      	bx	lr
	  return FALSE;
1a001ac6:	2000      	movs	r0, #0
}
1a001ac8:	4770      	bx	lr

1a001aca <gpioRead>:
}


bool_t gpioRead( gpioMap_t pin )
{
   if( pin == VCC ){
1a001aca:	f110 0f02 	cmn.w	r0, #2
1a001ace:	d02c      	beq.n	1a001b2a <gpioRead+0x60>
      return TRUE;
   }
   if( pin == GND ){
1a001ad0:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a001ad4:	d02b      	beq.n	1a001b2e <gpioRead+0x64>
{
1a001ad6:	b500      	push	{lr}
1a001ad8:	b085      	sub	sp, #20
      return FALSE;
   }

   bool_t ret_val     = OFF;

   int8_t pinNamePort = 0;
1a001ada:	2300      	movs	r3, #0
1a001adc:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a001ae0:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a001ae4:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a001ae8:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001aec:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001af0:	f10d 030b 	add.w	r3, sp, #11
1a001af4:	9301      	str	r3, [sp, #4]
1a001af6:	ab03      	add	r3, sp, #12
1a001af8:	9300      	str	r3, [sp, #0]
1a001afa:	f10d 030d 	add.w	r3, sp, #13
1a001afe:	f10d 020e 	add.w	r2, sp, #14
1a001b02:	f10d 010f 	add.w	r1, sp, #15
1a001b06:	f7ff febb 	bl	1a001880 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   ret_val = (bool_t) Chip_GPIO_ReadPortBit( LPC_GPIO_PORT, gpioPort, gpioPin );
1a001b0a:	f99d 300c 	ldrsb.w	r3, [sp, #12]
1a001b0e:	f89d 200b 	ldrb.w	r2, [sp, #11]
	return (bool) pGPIO->B[port][pin];
1a001b12:	015b      	lsls	r3, r3, #5
1a001b14:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a001b18:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a001b1c:	5c98      	ldrb	r0, [r3, r2]
1a001b1e:	3000      	adds	r0, #0
1a001b20:	bf18      	it	ne
1a001b22:	2001      	movne	r0, #1

   return ret_val;
}
1a001b24:	b005      	add	sp, #20
1a001b26:	f85d fb04 	ldr.w	pc, [sp], #4
      return TRUE;
1a001b2a:	2001      	movs	r0, #1
1a001b2c:	4770      	bx	lr
      return FALSE;
1a001b2e:	2000      	movs	r0, #0
}
1a001b30:	4770      	bx	lr

1a001b32 <gpioToggle>:
{
1a001b32:	b510      	push	{r4, lr}
1a001b34:	4604      	mov	r4, r0
   return gpioWrite( pin, !gpioRead(pin) );
1a001b36:	f7ff ffc8 	bl	1a001aca <gpioRead>
1a001b3a:	fab0 f180 	clz	r1, r0
1a001b3e:	0949      	lsrs	r1, r1, #5
1a001b40:	4620      	mov	r0, r4
1a001b42:	f7ff ff8d 	bl	1a001a60 <gpioWrite>
}
1a001b46:	bd10      	pop	{r4, pc}

1a001b48 <USB0_IRQHandler>:
/**
 * @brief   Handle interrupt from USB
 * @return  Nothing
 */
#ifndef USB_HOST_ONLY // Parche para envitar conflictos con biblioteca host
void USB_IRQHandler(void){
1a001b48:	b508      	push	{r3, lr}
   USBD_API->hw->ISR(g_hUsb);
1a001b4a:	4b04      	ldr	r3, [pc, #16]	; (1a001b5c <USB0_IRQHandler+0x14>)
1a001b4c:	681b      	ldr	r3, [r3, #0]
1a001b4e:	681b      	ldr	r3, [r3, #0]
1a001b50:	68db      	ldr	r3, [r3, #12]
1a001b52:	4a03      	ldr	r2, [pc, #12]	; (1a001b60 <USB0_IRQHandler+0x18>)
1a001b54:	6810      	ldr	r0, [r2, #0]
1a001b56:	4798      	blx	r3
}
1a001b58:	bd08      	pop	{r3, pc}
1a001b5a:	bf00      	nop
1a001b5c:	10000b00 	.word	0x10000b00
1a001b60:	10000a6c 	.word	0x10000a6c

1a001b64 <boardInit>:

/*==================[external functions definition]==========================*/

/* Set up and initialize board hardware */
void boardInit(void)
{
1a001b64:	b508      	push	{r3, lr}
   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate();
1a001b66:	f7ff fc21 	bl	1a0013ac <SystemCoreClockUpdate>

   cyclesCounterInit( SystemCoreClock );
1a001b6a:	4b1a      	ldr	r3, [pc, #104]	; (1a001bd4 <boardInit+0x70>)
1a001b6c:	6818      	ldr	r0, [r3, #0]
1a001b6e:	f7ff fd89 	bl	1a001684 <cyclesCounterInit>

   // Inicializar el conteo de Ticks con resolucion de 1ms (si no se usa freeRTOS)
   #ifndef USE_FREERTOS
      tickInit( 1 );
1a001b72:	2001      	movs	r0, #1
1a001b74:	2100      	movs	r1, #0
1a001b76:	f7ff fda5 	bl	1a0016c4 <tickInit>
      //#error CIAA-NXP

   #elif BOARD==edu_ciaa_nxp

      // Inicializar GPIOs
      gpioInit( 0, GPIO_ENABLE );
1a001b7a:	2105      	movs	r1, #5
1a001b7c:	2000      	movs	r0, #0
1a001b7e:	f7ff fe99 	bl	1a0018b4 <gpioInit>

      // Configuracion de pines de entrada para Teclas de la EDU-CIAA-NXP
      gpioInit( TEC1, GPIO_INPUT );
1a001b82:	2100      	movs	r1, #0
1a001b84:	2024      	movs	r0, #36	; 0x24
1a001b86:	f7ff fe95 	bl	1a0018b4 <gpioInit>
      gpioInit( TEC2, GPIO_INPUT );
1a001b8a:	2100      	movs	r1, #0
1a001b8c:	2025      	movs	r0, #37	; 0x25
1a001b8e:	f7ff fe91 	bl	1a0018b4 <gpioInit>
      gpioInit( TEC3, GPIO_INPUT );
1a001b92:	2100      	movs	r1, #0
1a001b94:	2026      	movs	r0, #38	; 0x26
1a001b96:	f7ff fe8d 	bl	1a0018b4 <gpioInit>
      gpioInit( TEC4, GPIO_INPUT );
1a001b9a:	2100      	movs	r1, #0
1a001b9c:	2027      	movs	r0, #39	; 0x27
1a001b9e:	f7ff fe89 	bl	1a0018b4 <gpioInit>

      // Configuracion de pines de salida para Leds de la EDU-CIAA-NXP
      gpioInit( LEDR, GPIO_OUTPUT );
1a001ba2:	2101      	movs	r1, #1
1a001ba4:	2028      	movs	r0, #40	; 0x28
1a001ba6:	f7ff fe85 	bl	1a0018b4 <gpioInit>
      gpioInit( LEDG, GPIO_OUTPUT );
1a001baa:	2101      	movs	r1, #1
1a001bac:	2029      	movs	r0, #41	; 0x29
1a001bae:	f7ff fe81 	bl	1a0018b4 <gpioInit>
      gpioInit( LEDB, GPIO_OUTPUT );
1a001bb2:	2101      	movs	r1, #1
1a001bb4:	202a      	movs	r0, #42	; 0x2a
1a001bb6:	f7ff fe7d 	bl	1a0018b4 <gpioInit>
      gpioInit( LED1, GPIO_OUTPUT );
1a001bba:	2101      	movs	r1, #1
1a001bbc:	202b      	movs	r0, #43	; 0x2b
1a001bbe:	f7ff fe79 	bl	1a0018b4 <gpioInit>
      gpioInit( LED2, GPIO_OUTPUT );
1a001bc2:	2101      	movs	r1, #1
1a001bc4:	202c      	movs	r0, #44	; 0x2c
1a001bc6:	f7ff fe75 	bl	1a0018b4 <gpioInit>
      gpioInit( LED3, GPIO_OUTPUT );
1a001bca:	2101      	movs	r1, #1
1a001bcc:	202d      	movs	r0, #45	; 0x2d
1a001bce:	f7ff fe71 	bl	1a0018b4 <gpioInit>
   #else
      #error BOARD compile variable must be defined

   #endif

}
1a001bd2:	bd08      	pop	{r3, pc}
1a001bd4:	10000afc 	.word	0x10000afc

1a001bd8 <delayInit>:


/* ---- Non Blocking Delay ---- */

void delayInit( delay_t * delay, tick_t duration )
{
1a001bd8:	b510      	push	{r4, lr}
1a001bda:	4604      	mov	r4, r0
1a001bdc:	4610      	mov	r0, r2
1a001bde:	4619      	mov	r1, r3
   delay->duration = duration/tickRateMS;
1a001be0:	4b04      	ldr	r3, [pc, #16]	; (1a001bf4 <delayInit+0x1c>)
1a001be2:	e9d3 2300 	ldrd	r2, r3, [r3]
1a001be6:	f000 fc8b 	bl	1a002500 <__aeabi_uldivmod>
1a001bea:	e9c4 0102 	strd	r0, r1, [r4, #8]
   delay->running = 0;
1a001bee:	2300      	movs	r3, #0
1a001bf0:	7423      	strb	r3, [r4, #16]
}
1a001bf2:	bd10      	pop	{r4, pc}
1a001bf4:	10000040 	.word	0x10000040

1a001bf8 <delayRead>:

bool_t delayRead( delay_t * delay )
{
1a001bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001bfa:	4604      	mov	r4, r0
   bool_t timeArrived = 0;

   if( !delay->running ) {
1a001bfc:	7c05      	ldrb	r5, [r0, #16]
1a001bfe:	b93d      	cbnz	r5, 1a001c10 <delayRead+0x18>
      delay->startTime = tickRead();
1a001c00:	f7ff fd4e 	bl	1a0016a0 <tickRead>
1a001c04:	e9c4 0100 	strd	r0, r1, [r4]
      delay->running = 1;
1a001c08:	2301      	movs	r3, #1
1a001c0a:	7423      	strb	r3, [r4, #16]
         delay->running = 0;
      }
   }

   return timeArrived;
}
1a001c0c:	4628      	mov	r0, r5
1a001c0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ( (tick_t)(tickRead() - delay->startTime) >= delay->duration ) {
1a001c10:	f7ff fd46 	bl	1a0016a0 <tickRead>
1a001c14:	6823      	ldr	r3, [r4, #0]
1a001c16:	6862      	ldr	r2, [r4, #4]
1a001c18:	1ac6      	subs	r6, r0, r3
1a001c1a:	eb61 0702 	sbc.w	r7, r1, r2
1a001c1e:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
1a001c22:	429f      	cmp	r7, r3
1a001c24:	bf08      	it	eq
1a001c26:	4296      	cmpeq	r6, r2
1a001c28:	d303      	bcc.n	1a001c32 <delayRead+0x3a>
         delay->running = 0;
1a001c2a:	2300      	movs	r3, #0
1a001c2c:	7423      	strb	r3, [r4, #16]
         timeArrived = 1;
1a001c2e:	2501      	movs	r5, #1
1a001c30:	e7ec      	b.n	1a001c0c <delayRead+0x14>
   bool_t timeArrived = 0;
1a001c32:	2500      	movs	r5, #0
1a001c34:	e7ea      	b.n	1a001c0c <delayRead+0x14>
1a001c36:	Address 0x000000001a001c36 is out of bounds.


1a001c38 <delayWrite>:

void delayWrite( delay_t * delay, tick_t duration )
{
1a001c38:	b510      	push	{r4, lr}
1a001c3a:	4604      	mov	r4, r0
1a001c3c:	4610      	mov	r0, r2
1a001c3e:	4619      	mov	r1, r3
   delay->duration = duration/tickRateMS;
1a001c40:	4b03      	ldr	r3, [pc, #12]	; (1a001c50 <delayWrite+0x18>)
1a001c42:	e9d3 2300 	ldrd	r2, r3, [r3]
1a001c46:	f000 fc5b 	bl	1a002500 <__aeabi_uldivmod>
1a001c4a:	e9c4 0102 	strd	r0, r1, [r4, #8]
}
1a001c4e:	bd10      	pop	{r4, pc}
1a001c50:	10000040 	.word	0x10000040

1a001c54 <__aeabi_drsub>:
1a001c54:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
1a001c58:	e002      	b.n	1a001c60 <__adddf3>
1a001c5a:	bf00      	nop

1a001c5c <__aeabi_dsub>:
1a001c5c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

1a001c60 <__adddf3>:
1a001c60:	b530      	push	{r4, r5, lr}
1a001c62:	ea4f 0441 	mov.w	r4, r1, lsl #1
1a001c66:	ea4f 0543 	mov.w	r5, r3, lsl #1
1a001c6a:	ea94 0f05 	teq	r4, r5
1a001c6e:	bf08      	it	eq
1a001c70:	ea90 0f02 	teqeq	r0, r2
1a001c74:	bf1f      	itttt	ne
1a001c76:	ea54 0c00 	orrsne.w	ip, r4, r0
1a001c7a:	ea55 0c02 	orrsne.w	ip, r5, r2
1a001c7e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1a001c82:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a001c86:	f000 80e2 	beq.w	1a001e4e <__adddf3+0x1ee>
1a001c8a:	ea4f 5454 	mov.w	r4, r4, lsr #21
1a001c8e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1a001c92:	bfb8      	it	lt
1a001c94:	426d      	neglt	r5, r5
1a001c96:	dd0c      	ble.n	1a001cb2 <__adddf3+0x52>
1a001c98:	442c      	add	r4, r5
1a001c9a:	ea80 0202 	eor.w	r2, r0, r2
1a001c9e:	ea81 0303 	eor.w	r3, r1, r3
1a001ca2:	ea82 0000 	eor.w	r0, r2, r0
1a001ca6:	ea83 0101 	eor.w	r1, r3, r1
1a001caa:	ea80 0202 	eor.w	r2, r0, r2
1a001cae:	ea81 0303 	eor.w	r3, r1, r3
1a001cb2:	2d36      	cmp	r5, #54	; 0x36
1a001cb4:	bf88      	it	hi
1a001cb6:	bd30      	pophi	{r4, r5, pc}
1a001cb8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a001cbc:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a001cc0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
1a001cc4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1a001cc8:	d002      	beq.n	1a001cd0 <__adddf3+0x70>
1a001cca:	4240      	negs	r0, r0
1a001ccc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a001cd0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
1a001cd4:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a001cd8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1a001cdc:	d002      	beq.n	1a001ce4 <__adddf3+0x84>
1a001cde:	4252      	negs	r2, r2
1a001ce0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a001ce4:	ea94 0f05 	teq	r4, r5
1a001ce8:	f000 80a7 	beq.w	1a001e3a <__adddf3+0x1da>
1a001cec:	f1a4 0401 	sub.w	r4, r4, #1
1a001cf0:	f1d5 0e20 	rsbs	lr, r5, #32
1a001cf4:	db0d      	blt.n	1a001d12 <__adddf3+0xb2>
1a001cf6:	fa02 fc0e 	lsl.w	ip, r2, lr
1a001cfa:	fa22 f205 	lsr.w	r2, r2, r5
1a001cfe:	1880      	adds	r0, r0, r2
1a001d00:	f141 0100 	adc.w	r1, r1, #0
1a001d04:	fa03 f20e 	lsl.w	r2, r3, lr
1a001d08:	1880      	adds	r0, r0, r2
1a001d0a:	fa43 f305 	asr.w	r3, r3, r5
1a001d0e:	4159      	adcs	r1, r3
1a001d10:	e00e      	b.n	1a001d30 <__adddf3+0xd0>
1a001d12:	f1a5 0520 	sub.w	r5, r5, #32
1a001d16:	f10e 0e20 	add.w	lr, lr, #32
1a001d1a:	2a01      	cmp	r2, #1
1a001d1c:	fa03 fc0e 	lsl.w	ip, r3, lr
1a001d20:	bf28      	it	cs
1a001d22:	f04c 0c02 	orrcs.w	ip, ip, #2
1a001d26:	fa43 f305 	asr.w	r3, r3, r5
1a001d2a:	18c0      	adds	r0, r0, r3
1a001d2c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1a001d30:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001d34:	d507      	bpl.n	1a001d46 <__adddf3+0xe6>
1a001d36:	f04f 0e00 	mov.w	lr, #0
1a001d3a:	f1dc 0c00 	rsbs	ip, ip, #0
1a001d3e:	eb7e 0000 	sbcs.w	r0, lr, r0
1a001d42:	eb6e 0101 	sbc.w	r1, lr, r1
1a001d46:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1a001d4a:	d31b      	bcc.n	1a001d84 <__adddf3+0x124>
1a001d4c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
1a001d50:	d30c      	bcc.n	1a001d6c <__adddf3+0x10c>
1a001d52:	0849      	lsrs	r1, r1, #1
1a001d54:	ea5f 0030 	movs.w	r0, r0, rrx
1a001d58:	ea4f 0c3c 	mov.w	ip, ip, rrx
1a001d5c:	f104 0401 	add.w	r4, r4, #1
1a001d60:	ea4f 5244 	mov.w	r2, r4, lsl #21
1a001d64:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
1a001d68:	f080 809a 	bcs.w	1a001ea0 <__adddf3+0x240>
1a001d6c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
1a001d70:	bf08      	it	eq
1a001d72:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a001d76:	f150 0000 	adcs.w	r0, r0, #0
1a001d7a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001d7e:	ea41 0105 	orr.w	r1, r1, r5
1a001d82:	bd30      	pop	{r4, r5, pc}
1a001d84:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1a001d88:	4140      	adcs	r0, r0
1a001d8a:	eb41 0101 	adc.w	r1, r1, r1
1a001d8e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001d92:	f1a4 0401 	sub.w	r4, r4, #1
1a001d96:	d1e9      	bne.n	1a001d6c <__adddf3+0x10c>
1a001d98:	f091 0f00 	teq	r1, #0
1a001d9c:	bf04      	itt	eq
1a001d9e:	4601      	moveq	r1, r0
1a001da0:	2000      	moveq	r0, #0
1a001da2:	fab1 f381 	clz	r3, r1
1a001da6:	bf08      	it	eq
1a001da8:	3320      	addeq	r3, #32
1a001daa:	f1a3 030b 	sub.w	r3, r3, #11
1a001dae:	f1b3 0220 	subs.w	r2, r3, #32
1a001db2:	da0c      	bge.n	1a001dce <__adddf3+0x16e>
1a001db4:	320c      	adds	r2, #12
1a001db6:	dd08      	ble.n	1a001dca <__adddf3+0x16a>
1a001db8:	f102 0c14 	add.w	ip, r2, #20
1a001dbc:	f1c2 020c 	rsb	r2, r2, #12
1a001dc0:	fa01 f00c 	lsl.w	r0, r1, ip
1a001dc4:	fa21 f102 	lsr.w	r1, r1, r2
1a001dc8:	e00c      	b.n	1a001de4 <__adddf3+0x184>
1a001dca:	f102 0214 	add.w	r2, r2, #20
1a001dce:	bfd8      	it	le
1a001dd0:	f1c2 0c20 	rsble	ip, r2, #32
1a001dd4:	fa01 f102 	lsl.w	r1, r1, r2
1a001dd8:	fa20 fc0c 	lsr.w	ip, r0, ip
1a001ddc:	bfdc      	itt	le
1a001dde:	ea41 010c 	orrle.w	r1, r1, ip
1a001de2:	4090      	lslle	r0, r2
1a001de4:	1ae4      	subs	r4, r4, r3
1a001de6:	bfa2      	ittt	ge
1a001de8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1a001dec:	4329      	orrge	r1, r5
1a001dee:	bd30      	popge	{r4, r5, pc}
1a001df0:	ea6f 0404 	mvn.w	r4, r4
1a001df4:	3c1f      	subs	r4, #31
1a001df6:	da1c      	bge.n	1a001e32 <__adddf3+0x1d2>
1a001df8:	340c      	adds	r4, #12
1a001dfa:	dc0e      	bgt.n	1a001e1a <__adddf3+0x1ba>
1a001dfc:	f104 0414 	add.w	r4, r4, #20
1a001e00:	f1c4 0220 	rsb	r2, r4, #32
1a001e04:	fa20 f004 	lsr.w	r0, r0, r4
1a001e08:	fa01 f302 	lsl.w	r3, r1, r2
1a001e0c:	ea40 0003 	orr.w	r0, r0, r3
1a001e10:	fa21 f304 	lsr.w	r3, r1, r4
1a001e14:	ea45 0103 	orr.w	r1, r5, r3
1a001e18:	bd30      	pop	{r4, r5, pc}
1a001e1a:	f1c4 040c 	rsb	r4, r4, #12
1a001e1e:	f1c4 0220 	rsb	r2, r4, #32
1a001e22:	fa20 f002 	lsr.w	r0, r0, r2
1a001e26:	fa01 f304 	lsl.w	r3, r1, r4
1a001e2a:	ea40 0003 	orr.w	r0, r0, r3
1a001e2e:	4629      	mov	r1, r5
1a001e30:	bd30      	pop	{r4, r5, pc}
1a001e32:	fa21 f004 	lsr.w	r0, r1, r4
1a001e36:	4629      	mov	r1, r5
1a001e38:	bd30      	pop	{r4, r5, pc}
1a001e3a:	f094 0f00 	teq	r4, #0
1a001e3e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
1a001e42:	bf06      	itte	eq
1a001e44:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
1a001e48:	3401      	addeq	r4, #1
1a001e4a:	3d01      	subne	r5, #1
1a001e4c:	e74e      	b.n	1a001cec <__adddf3+0x8c>
1a001e4e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a001e52:	bf18      	it	ne
1a001e54:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a001e58:	d029      	beq.n	1a001eae <__adddf3+0x24e>
1a001e5a:	ea94 0f05 	teq	r4, r5
1a001e5e:	bf08      	it	eq
1a001e60:	ea90 0f02 	teqeq	r0, r2
1a001e64:	d005      	beq.n	1a001e72 <__adddf3+0x212>
1a001e66:	ea54 0c00 	orrs.w	ip, r4, r0
1a001e6a:	bf04      	itt	eq
1a001e6c:	4619      	moveq	r1, r3
1a001e6e:	4610      	moveq	r0, r2
1a001e70:	bd30      	pop	{r4, r5, pc}
1a001e72:	ea91 0f03 	teq	r1, r3
1a001e76:	bf1e      	ittt	ne
1a001e78:	2100      	movne	r1, #0
1a001e7a:	2000      	movne	r0, #0
1a001e7c:	bd30      	popne	{r4, r5, pc}
1a001e7e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1a001e82:	d105      	bne.n	1a001e90 <__adddf3+0x230>
1a001e84:	0040      	lsls	r0, r0, #1
1a001e86:	4149      	adcs	r1, r1
1a001e88:	bf28      	it	cs
1a001e8a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1a001e8e:	bd30      	pop	{r4, r5, pc}
1a001e90:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
1a001e94:	bf3c      	itt	cc
1a001e96:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1a001e9a:	bd30      	popcc	{r4, r5, pc}
1a001e9c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001ea0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
1a001ea4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a001ea8:	f04f 0000 	mov.w	r0, #0
1a001eac:	bd30      	pop	{r4, r5, pc}
1a001eae:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a001eb2:	bf1a      	itte	ne
1a001eb4:	4619      	movne	r1, r3
1a001eb6:	4610      	movne	r0, r2
1a001eb8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1a001ebc:	bf1c      	itt	ne
1a001ebe:	460b      	movne	r3, r1
1a001ec0:	4602      	movne	r2, r0
1a001ec2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a001ec6:	bf06      	itte	eq
1a001ec8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1a001ecc:	ea91 0f03 	teqeq	r1, r3
1a001ed0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
1a001ed4:	bd30      	pop	{r4, r5, pc}
1a001ed6:	bf00      	nop

1a001ed8 <__aeabi_ui2d>:
1a001ed8:	f090 0f00 	teq	r0, #0
1a001edc:	bf04      	itt	eq
1a001ede:	2100      	moveq	r1, #0
1a001ee0:	4770      	bxeq	lr
1a001ee2:	b530      	push	{r4, r5, lr}
1a001ee4:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001ee8:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001eec:	f04f 0500 	mov.w	r5, #0
1a001ef0:	f04f 0100 	mov.w	r1, #0
1a001ef4:	e750      	b.n	1a001d98 <__adddf3+0x138>
1a001ef6:	bf00      	nop

1a001ef8 <__aeabi_i2d>:
1a001ef8:	f090 0f00 	teq	r0, #0
1a001efc:	bf04      	itt	eq
1a001efe:	2100      	moveq	r1, #0
1a001f00:	4770      	bxeq	lr
1a001f02:	b530      	push	{r4, r5, lr}
1a001f04:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001f08:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001f0c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
1a001f10:	bf48      	it	mi
1a001f12:	4240      	negmi	r0, r0
1a001f14:	f04f 0100 	mov.w	r1, #0
1a001f18:	e73e      	b.n	1a001d98 <__adddf3+0x138>
1a001f1a:	bf00      	nop

1a001f1c <__aeabi_f2d>:
1a001f1c:	0042      	lsls	r2, r0, #1
1a001f1e:	ea4f 01e2 	mov.w	r1, r2, asr #3
1a001f22:	ea4f 0131 	mov.w	r1, r1, rrx
1a001f26:	ea4f 7002 	mov.w	r0, r2, lsl #28
1a001f2a:	bf1f      	itttt	ne
1a001f2c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
1a001f30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
1a001f34:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
1a001f38:	4770      	bxne	lr
1a001f3a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
1a001f3e:	bf08      	it	eq
1a001f40:	4770      	bxeq	lr
1a001f42:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
1a001f46:	bf04      	itt	eq
1a001f48:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
1a001f4c:	4770      	bxeq	lr
1a001f4e:	b530      	push	{r4, r5, lr}
1a001f50:	f44f 7460 	mov.w	r4, #896	; 0x380
1a001f54:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001f58:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001f5c:	e71c      	b.n	1a001d98 <__adddf3+0x138>
1a001f5e:	bf00      	nop

1a001f60 <__aeabi_ul2d>:
1a001f60:	ea50 0201 	orrs.w	r2, r0, r1
1a001f64:	bf08      	it	eq
1a001f66:	4770      	bxeq	lr
1a001f68:	b530      	push	{r4, r5, lr}
1a001f6a:	f04f 0500 	mov.w	r5, #0
1a001f6e:	e00a      	b.n	1a001f86 <__aeabi_l2d+0x16>

1a001f70 <__aeabi_l2d>:
1a001f70:	ea50 0201 	orrs.w	r2, r0, r1
1a001f74:	bf08      	it	eq
1a001f76:	4770      	bxeq	lr
1a001f78:	b530      	push	{r4, r5, lr}
1a001f7a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1a001f7e:	d502      	bpl.n	1a001f86 <__aeabi_l2d+0x16>
1a001f80:	4240      	negs	r0, r0
1a001f82:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a001f86:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001f8a:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001f8e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1a001f92:	f43f aed8 	beq.w	1a001d46 <__adddf3+0xe6>
1a001f96:	f04f 0203 	mov.w	r2, #3
1a001f9a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001f9e:	bf18      	it	ne
1a001fa0:	3203      	addne	r2, #3
1a001fa2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001fa6:	bf18      	it	ne
1a001fa8:	3203      	addne	r2, #3
1a001faa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1a001fae:	f1c2 0320 	rsb	r3, r2, #32
1a001fb2:	fa00 fc03 	lsl.w	ip, r0, r3
1a001fb6:	fa20 f002 	lsr.w	r0, r0, r2
1a001fba:	fa01 fe03 	lsl.w	lr, r1, r3
1a001fbe:	ea40 000e 	orr.w	r0, r0, lr
1a001fc2:	fa21 f102 	lsr.w	r1, r1, r2
1a001fc6:	4414      	add	r4, r2
1a001fc8:	e6bd      	b.n	1a001d46 <__adddf3+0xe6>
1a001fca:	bf00      	nop

1a001fcc <__aeabi_dmul>:
1a001fcc:	b570      	push	{r4, r5, r6, lr}
1a001fce:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001fd2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001fd6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001fda:	bf1d      	ittte	ne
1a001fdc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001fe0:	ea94 0f0c 	teqne	r4, ip
1a001fe4:	ea95 0f0c 	teqne	r5, ip
1a001fe8:	f000 f8de 	bleq	1a0021a8 <__aeabi_dmul+0x1dc>
1a001fec:	442c      	add	r4, r5
1a001fee:	ea81 0603 	eor.w	r6, r1, r3
1a001ff2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1a001ff6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1a001ffa:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1a001ffe:	bf18      	it	ne
1a002000:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1a002004:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a002008:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a00200c:	d038      	beq.n	1a002080 <__aeabi_dmul+0xb4>
1a00200e:	fba0 ce02 	umull	ip, lr, r0, r2
1a002012:	f04f 0500 	mov.w	r5, #0
1a002016:	fbe1 e502 	umlal	lr, r5, r1, r2
1a00201a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
1a00201e:	fbe0 e503 	umlal	lr, r5, r0, r3
1a002022:	f04f 0600 	mov.w	r6, #0
1a002026:	fbe1 5603 	umlal	r5, r6, r1, r3
1a00202a:	f09c 0f00 	teq	ip, #0
1a00202e:	bf18      	it	ne
1a002030:	f04e 0e01 	orrne.w	lr, lr, #1
1a002034:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
1a002038:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
1a00203c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
1a002040:	d204      	bcs.n	1a00204c <__aeabi_dmul+0x80>
1a002042:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1a002046:	416d      	adcs	r5, r5
1a002048:	eb46 0606 	adc.w	r6, r6, r6
1a00204c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1a002050:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1a002054:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1a002058:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1a00205c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1a002060:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a002064:	bf88      	it	hi
1a002066:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a00206a:	d81e      	bhi.n	1a0020aa <__aeabi_dmul+0xde>
1a00206c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
1a002070:	bf08      	it	eq
1a002072:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1a002076:	f150 0000 	adcs.w	r0, r0, #0
1a00207a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a00207e:	bd70      	pop	{r4, r5, r6, pc}
1a002080:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1a002084:	ea46 0101 	orr.w	r1, r6, r1
1a002088:	ea40 0002 	orr.w	r0, r0, r2
1a00208c:	ea81 0103 	eor.w	r1, r1, r3
1a002090:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1a002094:	bfc2      	ittt	gt
1a002096:	ebd4 050c 	rsbsgt	r5, r4, ip
1a00209a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a00209e:	bd70      	popgt	{r4, r5, r6, pc}
1a0020a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a0020a4:	f04f 0e00 	mov.w	lr, #0
1a0020a8:	3c01      	subs	r4, #1
1a0020aa:	f300 80ab 	bgt.w	1a002204 <__aeabi_dmul+0x238>
1a0020ae:	f114 0f36 	cmn.w	r4, #54	; 0x36
1a0020b2:	bfde      	ittt	le
1a0020b4:	2000      	movle	r0, #0
1a0020b6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
1a0020ba:	bd70      	pople	{r4, r5, r6, pc}
1a0020bc:	f1c4 0400 	rsb	r4, r4, #0
1a0020c0:	3c20      	subs	r4, #32
1a0020c2:	da35      	bge.n	1a002130 <__aeabi_dmul+0x164>
1a0020c4:	340c      	adds	r4, #12
1a0020c6:	dc1b      	bgt.n	1a002100 <__aeabi_dmul+0x134>
1a0020c8:	f104 0414 	add.w	r4, r4, #20
1a0020cc:	f1c4 0520 	rsb	r5, r4, #32
1a0020d0:	fa00 f305 	lsl.w	r3, r0, r5
1a0020d4:	fa20 f004 	lsr.w	r0, r0, r4
1a0020d8:	fa01 f205 	lsl.w	r2, r1, r5
1a0020dc:	ea40 0002 	orr.w	r0, r0, r2
1a0020e0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1a0020e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a0020e8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a0020ec:	fa21 f604 	lsr.w	r6, r1, r4
1a0020f0:	eb42 0106 	adc.w	r1, r2, r6
1a0020f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a0020f8:	bf08      	it	eq
1a0020fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a0020fe:	bd70      	pop	{r4, r5, r6, pc}
1a002100:	f1c4 040c 	rsb	r4, r4, #12
1a002104:	f1c4 0520 	rsb	r5, r4, #32
1a002108:	fa00 f304 	lsl.w	r3, r0, r4
1a00210c:	fa20 f005 	lsr.w	r0, r0, r5
1a002110:	fa01 f204 	lsl.w	r2, r1, r4
1a002114:	ea40 0002 	orr.w	r0, r0, r2
1a002118:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a00211c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a002120:	f141 0100 	adc.w	r1, r1, #0
1a002124:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a002128:	bf08      	it	eq
1a00212a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a00212e:	bd70      	pop	{r4, r5, r6, pc}
1a002130:	f1c4 0520 	rsb	r5, r4, #32
1a002134:	fa00 f205 	lsl.w	r2, r0, r5
1a002138:	ea4e 0e02 	orr.w	lr, lr, r2
1a00213c:	fa20 f304 	lsr.w	r3, r0, r4
1a002140:	fa01 f205 	lsl.w	r2, r1, r5
1a002144:	ea43 0302 	orr.w	r3, r3, r2
1a002148:	fa21 f004 	lsr.w	r0, r1, r4
1a00214c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a002150:	fa21 f204 	lsr.w	r2, r1, r4
1a002154:	ea20 0002 	bic.w	r0, r0, r2
1a002158:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1a00215c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a002160:	bf08      	it	eq
1a002162:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a002166:	bd70      	pop	{r4, r5, r6, pc}
1a002168:	f094 0f00 	teq	r4, #0
1a00216c:	d10f      	bne.n	1a00218e <__aeabi_dmul+0x1c2>
1a00216e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
1a002172:	0040      	lsls	r0, r0, #1
1a002174:	eb41 0101 	adc.w	r1, r1, r1
1a002178:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a00217c:	bf08      	it	eq
1a00217e:	3c01      	subeq	r4, #1
1a002180:	d0f7      	beq.n	1a002172 <__aeabi_dmul+0x1a6>
1a002182:	ea41 0106 	orr.w	r1, r1, r6
1a002186:	f095 0f00 	teq	r5, #0
1a00218a:	bf18      	it	ne
1a00218c:	4770      	bxne	lr
1a00218e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1a002192:	0052      	lsls	r2, r2, #1
1a002194:	eb43 0303 	adc.w	r3, r3, r3
1a002198:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
1a00219c:	bf08      	it	eq
1a00219e:	3d01      	subeq	r5, #1
1a0021a0:	d0f7      	beq.n	1a002192 <__aeabi_dmul+0x1c6>
1a0021a2:	ea43 0306 	orr.w	r3, r3, r6
1a0021a6:	4770      	bx	lr
1a0021a8:	ea94 0f0c 	teq	r4, ip
1a0021ac:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a0021b0:	bf18      	it	ne
1a0021b2:	ea95 0f0c 	teqne	r5, ip
1a0021b6:	d00c      	beq.n	1a0021d2 <__aeabi_dmul+0x206>
1a0021b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a0021bc:	bf18      	it	ne
1a0021be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a0021c2:	d1d1      	bne.n	1a002168 <__aeabi_dmul+0x19c>
1a0021c4:	ea81 0103 	eor.w	r1, r1, r3
1a0021c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a0021cc:	f04f 0000 	mov.w	r0, #0
1a0021d0:	bd70      	pop	{r4, r5, r6, pc}
1a0021d2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a0021d6:	bf06      	itte	eq
1a0021d8:	4610      	moveq	r0, r2
1a0021da:	4619      	moveq	r1, r3
1a0021dc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a0021e0:	d019      	beq.n	1a002216 <__aeabi_dmul+0x24a>
1a0021e2:	ea94 0f0c 	teq	r4, ip
1a0021e6:	d102      	bne.n	1a0021ee <__aeabi_dmul+0x222>
1a0021e8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1a0021ec:	d113      	bne.n	1a002216 <__aeabi_dmul+0x24a>
1a0021ee:	ea95 0f0c 	teq	r5, ip
1a0021f2:	d105      	bne.n	1a002200 <__aeabi_dmul+0x234>
1a0021f4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1a0021f8:	bf1c      	itt	ne
1a0021fa:	4610      	movne	r0, r2
1a0021fc:	4619      	movne	r1, r3
1a0021fe:	d10a      	bne.n	1a002216 <__aeabi_dmul+0x24a>
1a002200:	ea81 0103 	eor.w	r1, r1, r3
1a002204:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a002208:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a00220c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a002210:	f04f 0000 	mov.w	r0, #0
1a002214:	bd70      	pop	{r4, r5, r6, pc}
1a002216:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a00221a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
1a00221e:	bd70      	pop	{r4, r5, r6, pc}

1a002220 <__aeabi_ddiv>:
1a002220:	b570      	push	{r4, r5, r6, lr}
1a002222:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a002226:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a00222a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a00222e:	bf1d      	ittte	ne
1a002230:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a002234:	ea94 0f0c 	teqne	r4, ip
1a002238:	ea95 0f0c 	teqne	r5, ip
1a00223c:	f000 f8a7 	bleq	1a00238e <__aeabi_ddiv+0x16e>
1a002240:	eba4 0405 	sub.w	r4, r4, r5
1a002244:	ea81 0e03 	eor.w	lr, r1, r3
1a002248:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a00224c:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a002250:	f000 8088 	beq.w	1a002364 <__aeabi_ddiv+0x144>
1a002254:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a002258:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
1a00225c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1a002260:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1a002264:	ea4f 2202 	mov.w	r2, r2, lsl #8
1a002268:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1a00226c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1a002270:	ea4f 2600 	mov.w	r6, r0, lsl #8
1a002274:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1a002278:	429d      	cmp	r5, r3
1a00227a:	bf08      	it	eq
1a00227c:	4296      	cmpeq	r6, r2
1a00227e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1a002282:	f504 7440 	add.w	r4, r4, #768	; 0x300
1a002286:	d202      	bcs.n	1a00228e <__aeabi_ddiv+0x6e>
1a002288:	085b      	lsrs	r3, r3, #1
1a00228a:	ea4f 0232 	mov.w	r2, r2, rrx
1a00228e:	1ab6      	subs	r6, r6, r2
1a002290:	eb65 0503 	sbc.w	r5, r5, r3
1a002294:	085b      	lsrs	r3, r3, #1
1a002296:	ea4f 0232 	mov.w	r2, r2, rrx
1a00229a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1a00229e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1a0022a2:	ebb6 0e02 	subs.w	lr, r6, r2
1a0022a6:	eb75 0e03 	sbcs.w	lr, r5, r3
1a0022aa:	bf22      	ittt	cs
1a0022ac:	1ab6      	subcs	r6, r6, r2
1a0022ae:	4675      	movcs	r5, lr
1a0022b0:	ea40 000c 	orrcs.w	r0, r0, ip
1a0022b4:	085b      	lsrs	r3, r3, #1
1a0022b6:	ea4f 0232 	mov.w	r2, r2, rrx
1a0022ba:	ebb6 0e02 	subs.w	lr, r6, r2
1a0022be:	eb75 0e03 	sbcs.w	lr, r5, r3
1a0022c2:	bf22      	ittt	cs
1a0022c4:	1ab6      	subcs	r6, r6, r2
1a0022c6:	4675      	movcs	r5, lr
1a0022c8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1a0022cc:	085b      	lsrs	r3, r3, #1
1a0022ce:	ea4f 0232 	mov.w	r2, r2, rrx
1a0022d2:	ebb6 0e02 	subs.w	lr, r6, r2
1a0022d6:	eb75 0e03 	sbcs.w	lr, r5, r3
1a0022da:	bf22      	ittt	cs
1a0022dc:	1ab6      	subcs	r6, r6, r2
1a0022de:	4675      	movcs	r5, lr
1a0022e0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1a0022e4:	085b      	lsrs	r3, r3, #1
1a0022e6:	ea4f 0232 	mov.w	r2, r2, rrx
1a0022ea:	ebb6 0e02 	subs.w	lr, r6, r2
1a0022ee:	eb75 0e03 	sbcs.w	lr, r5, r3
1a0022f2:	bf22      	ittt	cs
1a0022f4:	1ab6      	subcs	r6, r6, r2
1a0022f6:	4675      	movcs	r5, lr
1a0022f8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1a0022fc:	ea55 0e06 	orrs.w	lr, r5, r6
1a002300:	d018      	beq.n	1a002334 <__aeabi_ddiv+0x114>
1a002302:	ea4f 1505 	mov.w	r5, r5, lsl #4
1a002306:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1a00230a:	ea4f 1606 	mov.w	r6, r6, lsl #4
1a00230e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1a002312:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1a002316:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1a00231a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1a00231e:	d1c0      	bne.n	1a0022a2 <__aeabi_ddiv+0x82>
1a002320:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a002324:	d10b      	bne.n	1a00233e <__aeabi_ddiv+0x11e>
1a002326:	ea41 0100 	orr.w	r1, r1, r0
1a00232a:	f04f 0000 	mov.w	r0, #0
1a00232e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
1a002332:	e7b6      	b.n	1a0022a2 <__aeabi_ddiv+0x82>
1a002334:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a002338:	bf04      	itt	eq
1a00233a:	4301      	orreq	r1, r0
1a00233c:	2000      	moveq	r0, #0
1a00233e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a002342:	bf88      	it	hi
1a002344:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a002348:	f63f aeaf 	bhi.w	1a0020aa <__aeabi_dmul+0xde>
1a00234c:	ebb5 0c03 	subs.w	ip, r5, r3
1a002350:	bf04      	itt	eq
1a002352:	ebb6 0c02 	subseq.w	ip, r6, r2
1a002356:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a00235a:	f150 0000 	adcs.w	r0, r0, #0
1a00235e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a002362:	bd70      	pop	{r4, r5, r6, pc}
1a002364:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
1a002368:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1a00236c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1a002370:	bfc2      	ittt	gt
1a002372:	ebd4 050c 	rsbsgt	r5, r4, ip
1a002376:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a00237a:	bd70      	popgt	{r4, r5, r6, pc}
1a00237c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a002380:	f04f 0e00 	mov.w	lr, #0
1a002384:	3c01      	subs	r4, #1
1a002386:	e690      	b.n	1a0020aa <__aeabi_dmul+0xde>
1a002388:	ea45 0e06 	orr.w	lr, r5, r6
1a00238c:	e68d      	b.n	1a0020aa <__aeabi_dmul+0xde>
1a00238e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a002392:	ea94 0f0c 	teq	r4, ip
1a002396:	bf08      	it	eq
1a002398:	ea95 0f0c 	teqeq	r5, ip
1a00239c:	f43f af3b 	beq.w	1a002216 <__aeabi_dmul+0x24a>
1a0023a0:	ea94 0f0c 	teq	r4, ip
1a0023a4:	d10a      	bne.n	1a0023bc <__aeabi_ddiv+0x19c>
1a0023a6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a0023aa:	f47f af34 	bne.w	1a002216 <__aeabi_dmul+0x24a>
1a0023ae:	ea95 0f0c 	teq	r5, ip
1a0023b2:	f47f af25 	bne.w	1a002200 <__aeabi_dmul+0x234>
1a0023b6:	4610      	mov	r0, r2
1a0023b8:	4619      	mov	r1, r3
1a0023ba:	e72c      	b.n	1a002216 <__aeabi_dmul+0x24a>
1a0023bc:	ea95 0f0c 	teq	r5, ip
1a0023c0:	d106      	bne.n	1a0023d0 <__aeabi_ddiv+0x1b0>
1a0023c2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a0023c6:	f43f aefd 	beq.w	1a0021c4 <__aeabi_dmul+0x1f8>
1a0023ca:	4610      	mov	r0, r2
1a0023cc:	4619      	mov	r1, r3
1a0023ce:	e722      	b.n	1a002216 <__aeabi_dmul+0x24a>
1a0023d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a0023d4:	bf18      	it	ne
1a0023d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a0023da:	f47f aec5 	bne.w	1a002168 <__aeabi_dmul+0x19c>
1a0023de:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1a0023e2:	f47f af0d 	bne.w	1a002200 <__aeabi_dmul+0x234>
1a0023e6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1a0023ea:	f47f aeeb 	bne.w	1a0021c4 <__aeabi_dmul+0x1f8>
1a0023ee:	e712      	b.n	1a002216 <__aeabi_dmul+0x24a>

1a0023f0 <__gedf2>:
1a0023f0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
1a0023f4:	e006      	b.n	1a002404 <__cmpdf2+0x4>
1a0023f6:	bf00      	nop

1a0023f8 <__ledf2>:
1a0023f8:	f04f 0c01 	mov.w	ip, #1
1a0023fc:	e002      	b.n	1a002404 <__cmpdf2+0x4>
1a0023fe:	bf00      	nop

1a002400 <__cmpdf2>:
1a002400:	f04f 0c01 	mov.w	ip, #1
1a002404:	f84d cd04 	str.w	ip, [sp, #-4]!
1a002408:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a00240c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a002410:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a002414:	bf18      	it	ne
1a002416:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1a00241a:	d01b      	beq.n	1a002454 <__cmpdf2+0x54>
1a00241c:	b001      	add	sp, #4
1a00241e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1a002422:	bf0c      	ite	eq
1a002424:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1a002428:	ea91 0f03 	teqne	r1, r3
1a00242c:	bf02      	ittt	eq
1a00242e:	ea90 0f02 	teqeq	r0, r2
1a002432:	2000      	moveq	r0, #0
1a002434:	4770      	bxeq	lr
1a002436:	f110 0f00 	cmn.w	r0, #0
1a00243a:	ea91 0f03 	teq	r1, r3
1a00243e:	bf58      	it	pl
1a002440:	4299      	cmppl	r1, r3
1a002442:	bf08      	it	eq
1a002444:	4290      	cmpeq	r0, r2
1a002446:	bf2c      	ite	cs
1a002448:	17d8      	asrcs	r0, r3, #31
1a00244a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1a00244e:	f040 0001 	orr.w	r0, r0, #1
1a002452:	4770      	bx	lr
1a002454:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a002458:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a00245c:	d102      	bne.n	1a002464 <__cmpdf2+0x64>
1a00245e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a002462:	d107      	bne.n	1a002474 <__cmpdf2+0x74>
1a002464:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a002468:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a00246c:	d1d6      	bne.n	1a00241c <__cmpdf2+0x1c>
1a00246e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a002472:	d0d3      	beq.n	1a00241c <__cmpdf2+0x1c>
1a002474:	f85d 0b04 	ldr.w	r0, [sp], #4
1a002478:	4770      	bx	lr
1a00247a:	bf00      	nop

1a00247c <__aeabi_cdrcmple>:
1a00247c:	4684      	mov	ip, r0
1a00247e:	4610      	mov	r0, r2
1a002480:	4662      	mov	r2, ip
1a002482:	468c      	mov	ip, r1
1a002484:	4619      	mov	r1, r3
1a002486:	4663      	mov	r3, ip
1a002488:	e000      	b.n	1a00248c <__aeabi_cdcmpeq>
1a00248a:	bf00      	nop

1a00248c <__aeabi_cdcmpeq>:
1a00248c:	b501      	push	{r0, lr}
1a00248e:	f7ff ffb7 	bl	1a002400 <__cmpdf2>
1a002492:	2800      	cmp	r0, #0
1a002494:	bf48      	it	mi
1a002496:	f110 0f00 	cmnmi.w	r0, #0
1a00249a:	bd01      	pop	{r0, pc}

1a00249c <__aeabi_dcmpeq>:
1a00249c:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0024a0:	f7ff fff4 	bl	1a00248c <__aeabi_cdcmpeq>
1a0024a4:	bf0c      	ite	eq
1a0024a6:	2001      	moveq	r0, #1
1a0024a8:	2000      	movne	r0, #0
1a0024aa:	f85d fb08 	ldr.w	pc, [sp], #8
1a0024ae:	bf00      	nop

1a0024b0 <__aeabi_dcmplt>:
1a0024b0:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0024b4:	f7ff ffea 	bl	1a00248c <__aeabi_cdcmpeq>
1a0024b8:	bf34      	ite	cc
1a0024ba:	2001      	movcc	r0, #1
1a0024bc:	2000      	movcs	r0, #0
1a0024be:	f85d fb08 	ldr.w	pc, [sp], #8
1a0024c2:	bf00      	nop

1a0024c4 <__aeabi_dcmple>:
1a0024c4:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0024c8:	f7ff ffe0 	bl	1a00248c <__aeabi_cdcmpeq>
1a0024cc:	bf94      	ite	ls
1a0024ce:	2001      	movls	r0, #1
1a0024d0:	2000      	movhi	r0, #0
1a0024d2:	f85d fb08 	ldr.w	pc, [sp], #8
1a0024d6:	bf00      	nop

1a0024d8 <__aeabi_dcmpge>:
1a0024d8:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0024dc:	f7ff ffce 	bl	1a00247c <__aeabi_cdrcmple>
1a0024e0:	bf94      	ite	ls
1a0024e2:	2001      	movls	r0, #1
1a0024e4:	2000      	movhi	r0, #0
1a0024e6:	f85d fb08 	ldr.w	pc, [sp], #8
1a0024ea:	bf00      	nop

1a0024ec <__aeabi_dcmpgt>:
1a0024ec:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0024f0:	f7ff ffc4 	bl	1a00247c <__aeabi_cdrcmple>
1a0024f4:	bf34      	ite	cc
1a0024f6:	2001      	movcc	r0, #1
1a0024f8:	2000      	movcs	r0, #0
1a0024fa:	f85d fb08 	ldr.w	pc, [sp], #8
1a0024fe:	bf00      	nop

1a002500 <__aeabi_uldivmod>:
1a002500:	b953      	cbnz	r3, 1a002518 <__aeabi_uldivmod+0x18>
1a002502:	b94a      	cbnz	r2, 1a002518 <__aeabi_uldivmod+0x18>
1a002504:	2900      	cmp	r1, #0
1a002506:	bf08      	it	eq
1a002508:	2800      	cmpeq	r0, #0
1a00250a:	bf1c      	itt	ne
1a00250c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
1a002510:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
1a002514:	f000 b974 	b.w	1a002800 <__aeabi_idiv0>
1a002518:	f1ad 0c08 	sub.w	ip, sp, #8
1a00251c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1a002520:	f000 f806 	bl	1a002530 <__udivmoddi4>
1a002524:	f8dd e004 	ldr.w	lr, [sp, #4]
1a002528:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a00252c:	b004      	add	sp, #16
1a00252e:	4770      	bx	lr

1a002530 <__udivmoddi4>:
1a002530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a002534:	9e08      	ldr	r6, [sp, #32]
1a002536:	4604      	mov	r4, r0
1a002538:	4688      	mov	r8, r1
1a00253a:	2b00      	cmp	r3, #0
1a00253c:	f040 8085 	bne.w	1a00264a <__udivmoddi4+0x11a>
1a002540:	428a      	cmp	r2, r1
1a002542:	4615      	mov	r5, r2
1a002544:	d948      	bls.n	1a0025d8 <__udivmoddi4+0xa8>
1a002546:	fab2 f282 	clz	r2, r2
1a00254a:	b14a      	cbz	r2, 1a002560 <__udivmoddi4+0x30>
1a00254c:	f1c2 0720 	rsb	r7, r2, #32
1a002550:	fa01 f302 	lsl.w	r3, r1, r2
1a002554:	fa20 f707 	lsr.w	r7, r0, r7
1a002558:	4095      	lsls	r5, r2
1a00255a:	ea47 0803 	orr.w	r8, r7, r3
1a00255e:	4094      	lsls	r4, r2
1a002560:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002564:	0c23      	lsrs	r3, r4, #16
1a002566:	fbb8 f7fe 	udiv	r7, r8, lr
1a00256a:	fa1f fc85 	uxth.w	ip, r5
1a00256e:	fb0e 8817 	mls	r8, lr, r7, r8
1a002572:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a002576:	fb07 f10c 	mul.w	r1, r7, ip
1a00257a:	4299      	cmp	r1, r3
1a00257c:	d909      	bls.n	1a002592 <__udivmoddi4+0x62>
1a00257e:	18eb      	adds	r3, r5, r3
1a002580:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
1a002584:	f080 80e3 	bcs.w	1a00274e <__udivmoddi4+0x21e>
1a002588:	4299      	cmp	r1, r3
1a00258a:	f240 80e0 	bls.w	1a00274e <__udivmoddi4+0x21e>
1a00258e:	3f02      	subs	r7, #2
1a002590:	442b      	add	r3, r5
1a002592:	1a5b      	subs	r3, r3, r1
1a002594:	b2a4      	uxth	r4, r4
1a002596:	fbb3 f0fe 	udiv	r0, r3, lr
1a00259a:	fb0e 3310 	mls	r3, lr, r0, r3
1a00259e:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a0025a2:	fb00 fc0c 	mul.w	ip, r0, ip
1a0025a6:	45a4      	cmp	ip, r4
1a0025a8:	d909      	bls.n	1a0025be <__udivmoddi4+0x8e>
1a0025aa:	192c      	adds	r4, r5, r4
1a0025ac:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a0025b0:	f080 80cb 	bcs.w	1a00274a <__udivmoddi4+0x21a>
1a0025b4:	45a4      	cmp	ip, r4
1a0025b6:	f240 80c8 	bls.w	1a00274a <__udivmoddi4+0x21a>
1a0025ba:	3802      	subs	r0, #2
1a0025bc:	442c      	add	r4, r5
1a0025be:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
1a0025c2:	eba4 040c 	sub.w	r4, r4, ip
1a0025c6:	2700      	movs	r7, #0
1a0025c8:	b11e      	cbz	r6, 1a0025d2 <__udivmoddi4+0xa2>
1a0025ca:	40d4      	lsrs	r4, r2
1a0025cc:	2300      	movs	r3, #0
1a0025ce:	e9c6 4300 	strd	r4, r3, [r6]
1a0025d2:	4639      	mov	r1, r7
1a0025d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0025d8:	2a00      	cmp	r2, #0
1a0025da:	d053      	beq.n	1a002684 <__udivmoddi4+0x154>
1a0025dc:	fab2 f282 	clz	r2, r2
1a0025e0:	2a00      	cmp	r2, #0
1a0025e2:	f040 80b6 	bne.w	1a002752 <__udivmoddi4+0x222>
1a0025e6:	1b49      	subs	r1, r1, r5
1a0025e8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0025ec:	fa1f f885 	uxth.w	r8, r5
1a0025f0:	2701      	movs	r7, #1
1a0025f2:	fbb1 fcfe 	udiv	ip, r1, lr
1a0025f6:	0c23      	lsrs	r3, r4, #16
1a0025f8:	fb0e 111c 	mls	r1, lr, ip, r1
1a0025fc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a002600:	fb08 f10c 	mul.w	r1, r8, ip
1a002604:	4299      	cmp	r1, r3
1a002606:	d907      	bls.n	1a002618 <__udivmoddi4+0xe8>
1a002608:	18eb      	adds	r3, r5, r3
1a00260a:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
1a00260e:	d202      	bcs.n	1a002616 <__udivmoddi4+0xe6>
1a002610:	4299      	cmp	r1, r3
1a002612:	f200 80ec 	bhi.w	1a0027ee <__udivmoddi4+0x2be>
1a002616:	4684      	mov	ip, r0
1a002618:	1a59      	subs	r1, r3, r1
1a00261a:	b2a3      	uxth	r3, r4
1a00261c:	fbb1 f0fe 	udiv	r0, r1, lr
1a002620:	fb0e 1410 	mls	r4, lr, r0, r1
1a002624:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
1a002628:	fb08 f800 	mul.w	r8, r8, r0
1a00262c:	45a0      	cmp	r8, r4
1a00262e:	d907      	bls.n	1a002640 <__udivmoddi4+0x110>
1a002630:	192c      	adds	r4, r5, r4
1a002632:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a002636:	d202      	bcs.n	1a00263e <__udivmoddi4+0x10e>
1a002638:	45a0      	cmp	r8, r4
1a00263a:	f200 80dc 	bhi.w	1a0027f6 <__udivmoddi4+0x2c6>
1a00263e:	4618      	mov	r0, r3
1a002640:	eba4 0408 	sub.w	r4, r4, r8
1a002644:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
1a002648:	e7be      	b.n	1a0025c8 <__udivmoddi4+0x98>
1a00264a:	428b      	cmp	r3, r1
1a00264c:	d908      	bls.n	1a002660 <__udivmoddi4+0x130>
1a00264e:	2e00      	cmp	r6, #0
1a002650:	d078      	beq.n	1a002744 <__udivmoddi4+0x214>
1a002652:	2700      	movs	r7, #0
1a002654:	e9c6 0100 	strd	r0, r1, [r6]
1a002658:	4638      	mov	r0, r7
1a00265a:	4639      	mov	r1, r7
1a00265c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a002660:	fab3 f783 	clz	r7, r3
1a002664:	b97f      	cbnz	r7, 1a002686 <__udivmoddi4+0x156>
1a002666:	428b      	cmp	r3, r1
1a002668:	d302      	bcc.n	1a002670 <__udivmoddi4+0x140>
1a00266a:	4282      	cmp	r2, r0
1a00266c:	f200 80bd 	bhi.w	1a0027ea <__udivmoddi4+0x2ba>
1a002670:	1a84      	subs	r4, r0, r2
1a002672:	eb61 0303 	sbc.w	r3, r1, r3
1a002676:	2001      	movs	r0, #1
1a002678:	4698      	mov	r8, r3
1a00267a:	2e00      	cmp	r6, #0
1a00267c:	d0a9      	beq.n	1a0025d2 <__udivmoddi4+0xa2>
1a00267e:	e9c6 4800 	strd	r4, r8, [r6]
1a002682:	e7a6      	b.n	1a0025d2 <__udivmoddi4+0xa2>
1a002684:	deff      	udf	#255	; 0xff
1a002686:	f1c7 0520 	rsb	r5, r7, #32
1a00268a:	40bb      	lsls	r3, r7
1a00268c:	fa22 fc05 	lsr.w	ip, r2, r5
1a002690:	ea4c 0c03 	orr.w	ip, ip, r3
1a002694:	fa01 f407 	lsl.w	r4, r1, r7
1a002698:	fa20 f805 	lsr.w	r8, r0, r5
1a00269c:	fa21 f305 	lsr.w	r3, r1, r5
1a0026a0:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
1a0026a4:	ea48 0404 	orr.w	r4, r8, r4
1a0026a8:	fbb3 f9fe 	udiv	r9, r3, lr
1a0026ac:	0c21      	lsrs	r1, r4, #16
1a0026ae:	fb0e 3319 	mls	r3, lr, r9, r3
1a0026b2:	fa1f f88c 	uxth.w	r8, ip
1a0026b6:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
1a0026ba:	fb09 fa08 	mul.w	sl, r9, r8
1a0026be:	459a      	cmp	sl, r3
1a0026c0:	fa02 f207 	lsl.w	r2, r2, r7
1a0026c4:	fa00 f107 	lsl.w	r1, r0, r7
1a0026c8:	d90b      	bls.n	1a0026e2 <__udivmoddi4+0x1b2>
1a0026ca:	eb1c 0303 	adds.w	r3, ip, r3
1a0026ce:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
1a0026d2:	f080 8088 	bcs.w	1a0027e6 <__udivmoddi4+0x2b6>
1a0026d6:	459a      	cmp	sl, r3
1a0026d8:	f240 8085 	bls.w	1a0027e6 <__udivmoddi4+0x2b6>
1a0026dc:	f1a9 0902 	sub.w	r9, r9, #2
1a0026e0:	4463      	add	r3, ip
1a0026e2:	eba3 030a 	sub.w	r3, r3, sl
1a0026e6:	b2a4      	uxth	r4, r4
1a0026e8:	fbb3 f0fe 	udiv	r0, r3, lr
1a0026ec:	fb0e 3310 	mls	r3, lr, r0, r3
1a0026f0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a0026f4:	fb00 f808 	mul.w	r8, r0, r8
1a0026f8:	45a0      	cmp	r8, r4
1a0026fa:	d908      	bls.n	1a00270e <__udivmoddi4+0x1de>
1a0026fc:	eb1c 0404 	adds.w	r4, ip, r4
1a002700:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a002704:	d26b      	bcs.n	1a0027de <__udivmoddi4+0x2ae>
1a002706:	45a0      	cmp	r8, r4
1a002708:	d969      	bls.n	1a0027de <__udivmoddi4+0x2ae>
1a00270a:	3802      	subs	r0, #2
1a00270c:	4464      	add	r4, ip
1a00270e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
1a002712:	eba4 0408 	sub.w	r4, r4, r8
1a002716:	fba0 8902 	umull	r8, r9, r0, r2
1a00271a:	454c      	cmp	r4, r9
1a00271c:	46c6      	mov	lr, r8
1a00271e:	464b      	mov	r3, r9
1a002720:	d354      	bcc.n	1a0027cc <__udivmoddi4+0x29c>
1a002722:	d051      	beq.n	1a0027c8 <__udivmoddi4+0x298>
1a002724:	2e00      	cmp	r6, #0
1a002726:	d069      	beq.n	1a0027fc <__udivmoddi4+0x2cc>
1a002728:	ebb1 020e 	subs.w	r2, r1, lr
1a00272c:	eb64 0403 	sbc.w	r4, r4, r3
1a002730:	fa04 f505 	lsl.w	r5, r4, r5
1a002734:	fa22 f307 	lsr.w	r3, r2, r7
1a002738:	40fc      	lsrs	r4, r7
1a00273a:	431d      	orrs	r5, r3
1a00273c:	e9c6 5400 	strd	r5, r4, [r6]
1a002740:	2700      	movs	r7, #0
1a002742:	e746      	b.n	1a0025d2 <__udivmoddi4+0xa2>
1a002744:	4637      	mov	r7, r6
1a002746:	4630      	mov	r0, r6
1a002748:	e743      	b.n	1a0025d2 <__udivmoddi4+0xa2>
1a00274a:	4618      	mov	r0, r3
1a00274c:	e737      	b.n	1a0025be <__udivmoddi4+0x8e>
1a00274e:	4607      	mov	r7, r0
1a002750:	e71f      	b.n	1a002592 <__udivmoddi4+0x62>
1a002752:	f1c2 0320 	rsb	r3, r2, #32
1a002756:	fa20 f703 	lsr.w	r7, r0, r3
1a00275a:	4095      	lsls	r5, r2
1a00275c:	fa01 f002 	lsl.w	r0, r1, r2
1a002760:	fa21 f303 	lsr.w	r3, r1, r3
1a002764:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002768:	4338      	orrs	r0, r7
1a00276a:	0c01      	lsrs	r1, r0, #16
1a00276c:	fbb3 f7fe 	udiv	r7, r3, lr
1a002770:	fa1f f885 	uxth.w	r8, r5
1a002774:	fb0e 3317 	mls	r3, lr, r7, r3
1a002778:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a00277c:	fb07 f308 	mul.w	r3, r7, r8
1a002780:	428b      	cmp	r3, r1
1a002782:	fa04 f402 	lsl.w	r4, r4, r2
1a002786:	d907      	bls.n	1a002798 <__udivmoddi4+0x268>
1a002788:	1869      	adds	r1, r5, r1
1a00278a:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
1a00278e:	d228      	bcs.n	1a0027e2 <__udivmoddi4+0x2b2>
1a002790:	428b      	cmp	r3, r1
1a002792:	d926      	bls.n	1a0027e2 <__udivmoddi4+0x2b2>
1a002794:	3f02      	subs	r7, #2
1a002796:	4429      	add	r1, r5
1a002798:	1acb      	subs	r3, r1, r3
1a00279a:	b281      	uxth	r1, r0
1a00279c:	fbb3 f0fe 	udiv	r0, r3, lr
1a0027a0:	fb0e 3310 	mls	r3, lr, r0, r3
1a0027a4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a0027a8:	fb00 f308 	mul.w	r3, r0, r8
1a0027ac:	428b      	cmp	r3, r1
1a0027ae:	d907      	bls.n	1a0027c0 <__udivmoddi4+0x290>
1a0027b0:	1869      	adds	r1, r5, r1
1a0027b2:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
1a0027b6:	d210      	bcs.n	1a0027da <__udivmoddi4+0x2aa>
1a0027b8:	428b      	cmp	r3, r1
1a0027ba:	d90e      	bls.n	1a0027da <__udivmoddi4+0x2aa>
1a0027bc:	3802      	subs	r0, #2
1a0027be:	4429      	add	r1, r5
1a0027c0:	1ac9      	subs	r1, r1, r3
1a0027c2:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
1a0027c6:	e714      	b.n	1a0025f2 <__udivmoddi4+0xc2>
1a0027c8:	4541      	cmp	r1, r8
1a0027ca:	d2ab      	bcs.n	1a002724 <__udivmoddi4+0x1f4>
1a0027cc:	ebb8 0e02 	subs.w	lr, r8, r2
1a0027d0:	eb69 020c 	sbc.w	r2, r9, ip
1a0027d4:	3801      	subs	r0, #1
1a0027d6:	4613      	mov	r3, r2
1a0027d8:	e7a4      	b.n	1a002724 <__udivmoddi4+0x1f4>
1a0027da:	4660      	mov	r0, ip
1a0027dc:	e7f0      	b.n	1a0027c0 <__udivmoddi4+0x290>
1a0027de:	4618      	mov	r0, r3
1a0027e0:	e795      	b.n	1a00270e <__udivmoddi4+0x1de>
1a0027e2:	4667      	mov	r7, ip
1a0027e4:	e7d8      	b.n	1a002798 <__udivmoddi4+0x268>
1a0027e6:	4681      	mov	r9, r0
1a0027e8:	e77b      	b.n	1a0026e2 <__udivmoddi4+0x1b2>
1a0027ea:	4638      	mov	r0, r7
1a0027ec:	e745      	b.n	1a00267a <__udivmoddi4+0x14a>
1a0027ee:	f1ac 0c02 	sub.w	ip, ip, #2
1a0027f2:	442b      	add	r3, r5
1a0027f4:	e710      	b.n	1a002618 <__udivmoddi4+0xe8>
1a0027f6:	3802      	subs	r0, #2
1a0027f8:	442c      	add	r4, r5
1a0027fa:	e721      	b.n	1a002640 <__udivmoddi4+0x110>
1a0027fc:	4637      	mov	r7, r6
1a0027fe:	e6e8      	b.n	1a0025d2 <__udivmoddi4+0xa2>

1a002800 <__aeabi_idiv0>:
1a002800:	4770      	bx	lr
1a002802:	bf00      	nop

1a002804 <__libc_init_array>:
1a002804:	b570      	push	{r4, r5, r6, lr}
1a002806:	4e0d      	ldr	r6, [pc, #52]	; (1a00283c <__libc_init_array+0x38>)
1a002808:	4d0d      	ldr	r5, [pc, #52]	; (1a002840 <__libc_init_array+0x3c>)
1a00280a:	1b76      	subs	r6, r6, r5
1a00280c:	10b6      	asrs	r6, r6, #2
1a00280e:	d006      	beq.n	1a00281e <__libc_init_array+0x1a>
1a002810:	2400      	movs	r4, #0
1a002812:	3401      	adds	r4, #1
1a002814:	f855 3b04 	ldr.w	r3, [r5], #4
1a002818:	4798      	blx	r3
1a00281a:	42a6      	cmp	r6, r4
1a00281c:	d1f9      	bne.n	1a002812 <__libc_init_array+0xe>
1a00281e:	4e09      	ldr	r6, [pc, #36]	; (1a002844 <__libc_init_array+0x40>)
1a002820:	4d09      	ldr	r5, [pc, #36]	; (1a002848 <__libc_init_array+0x44>)
1a002822:	1b76      	subs	r6, r6, r5
1a002824:	f7fd ff99 	bl	1a00075a <_init>
1a002828:	10b6      	asrs	r6, r6, #2
1a00282a:	d006      	beq.n	1a00283a <__libc_init_array+0x36>
1a00282c:	2400      	movs	r4, #0
1a00282e:	3401      	adds	r4, #1
1a002830:	f855 3b04 	ldr.w	r3, [r5], #4
1a002834:	4798      	blx	r3
1a002836:	42a6      	cmp	r6, r4
1a002838:	d1f9      	bne.n	1a00282e <__libc_init_array+0x2a>
1a00283a:	bd70      	pop	{r4, r5, r6, pc}
1a00283c:	1a007c48 	.word	0x1a007c48
1a002840:	1a007c48 	.word	0x1a007c48
1a002844:	1a007c4c 	.word	0x1a007c4c
1a002848:	1a007c48 	.word	0x1a007c48

1a00284c <memcpy>:
1a00284c:	4684      	mov	ip, r0
1a00284e:	ea41 0300 	orr.w	r3, r1, r0
1a002852:	f013 0303 	ands.w	r3, r3, #3
1a002856:	d16d      	bne.n	1a002934 <memcpy+0xe8>
1a002858:	3a40      	subs	r2, #64	; 0x40
1a00285a:	d341      	bcc.n	1a0028e0 <memcpy+0x94>
1a00285c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002860:	f840 3b04 	str.w	r3, [r0], #4
1a002864:	f851 3b04 	ldr.w	r3, [r1], #4
1a002868:	f840 3b04 	str.w	r3, [r0], #4
1a00286c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002870:	f840 3b04 	str.w	r3, [r0], #4
1a002874:	f851 3b04 	ldr.w	r3, [r1], #4
1a002878:	f840 3b04 	str.w	r3, [r0], #4
1a00287c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002880:	f840 3b04 	str.w	r3, [r0], #4
1a002884:	f851 3b04 	ldr.w	r3, [r1], #4
1a002888:	f840 3b04 	str.w	r3, [r0], #4
1a00288c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002890:	f840 3b04 	str.w	r3, [r0], #4
1a002894:	f851 3b04 	ldr.w	r3, [r1], #4
1a002898:	f840 3b04 	str.w	r3, [r0], #4
1a00289c:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028a0:	f840 3b04 	str.w	r3, [r0], #4
1a0028a4:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028a8:	f840 3b04 	str.w	r3, [r0], #4
1a0028ac:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028b0:	f840 3b04 	str.w	r3, [r0], #4
1a0028b4:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028b8:	f840 3b04 	str.w	r3, [r0], #4
1a0028bc:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028c0:	f840 3b04 	str.w	r3, [r0], #4
1a0028c4:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028c8:	f840 3b04 	str.w	r3, [r0], #4
1a0028cc:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028d0:	f840 3b04 	str.w	r3, [r0], #4
1a0028d4:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028d8:	f840 3b04 	str.w	r3, [r0], #4
1a0028dc:	3a40      	subs	r2, #64	; 0x40
1a0028de:	d2bd      	bcs.n	1a00285c <memcpy+0x10>
1a0028e0:	3230      	adds	r2, #48	; 0x30
1a0028e2:	d311      	bcc.n	1a002908 <memcpy+0xbc>
1a0028e4:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028e8:	f840 3b04 	str.w	r3, [r0], #4
1a0028ec:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028f0:	f840 3b04 	str.w	r3, [r0], #4
1a0028f4:	f851 3b04 	ldr.w	r3, [r1], #4
1a0028f8:	f840 3b04 	str.w	r3, [r0], #4
1a0028fc:	f851 3b04 	ldr.w	r3, [r1], #4
1a002900:	f840 3b04 	str.w	r3, [r0], #4
1a002904:	3a10      	subs	r2, #16
1a002906:	d2ed      	bcs.n	1a0028e4 <memcpy+0x98>
1a002908:	320c      	adds	r2, #12
1a00290a:	d305      	bcc.n	1a002918 <memcpy+0xcc>
1a00290c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002910:	f840 3b04 	str.w	r3, [r0], #4
1a002914:	3a04      	subs	r2, #4
1a002916:	d2f9      	bcs.n	1a00290c <memcpy+0xc0>
1a002918:	3204      	adds	r2, #4
1a00291a:	d008      	beq.n	1a00292e <memcpy+0xe2>
1a00291c:	07d2      	lsls	r2, r2, #31
1a00291e:	bf1c      	itt	ne
1a002920:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a002924:	f800 3b01 	strbne.w	r3, [r0], #1
1a002928:	d301      	bcc.n	1a00292e <memcpy+0xe2>
1a00292a:	880b      	ldrh	r3, [r1, #0]
1a00292c:	8003      	strh	r3, [r0, #0]
1a00292e:	4660      	mov	r0, ip
1a002930:	4770      	bx	lr
1a002932:	bf00      	nop
1a002934:	2a08      	cmp	r2, #8
1a002936:	d313      	bcc.n	1a002960 <memcpy+0x114>
1a002938:	078b      	lsls	r3, r1, #30
1a00293a:	d08d      	beq.n	1a002858 <memcpy+0xc>
1a00293c:	f010 0303 	ands.w	r3, r0, #3
1a002940:	d08a      	beq.n	1a002858 <memcpy+0xc>
1a002942:	f1c3 0304 	rsb	r3, r3, #4
1a002946:	1ad2      	subs	r2, r2, r3
1a002948:	07db      	lsls	r3, r3, #31
1a00294a:	bf1c      	itt	ne
1a00294c:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a002950:	f800 3b01 	strbne.w	r3, [r0], #1
1a002954:	d380      	bcc.n	1a002858 <memcpy+0xc>
1a002956:	f831 3b02 	ldrh.w	r3, [r1], #2
1a00295a:	f820 3b02 	strh.w	r3, [r0], #2
1a00295e:	e77b      	b.n	1a002858 <memcpy+0xc>
1a002960:	3a04      	subs	r2, #4
1a002962:	d3d9      	bcc.n	1a002918 <memcpy+0xcc>
1a002964:	3a01      	subs	r2, #1
1a002966:	f811 3b01 	ldrb.w	r3, [r1], #1
1a00296a:	f800 3b01 	strb.w	r3, [r0], #1
1a00296e:	d2f9      	bcs.n	1a002964 <memcpy+0x118>
1a002970:	780b      	ldrb	r3, [r1, #0]
1a002972:	7003      	strb	r3, [r0, #0]
1a002974:	784b      	ldrb	r3, [r1, #1]
1a002976:	7043      	strb	r3, [r0, #1]
1a002978:	788b      	ldrb	r3, [r1, #2]
1a00297a:	7083      	strb	r3, [r0, #2]
1a00297c:	4660      	mov	r0, ip
1a00297e:	4770      	bx	lr

1a002980 <memset>:
1a002980:	b4f0      	push	{r4, r5, r6, r7}
1a002982:	0786      	lsls	r6, r0, #30
1a002984:	d046      	beq.n	1a002a14 <memset+0x94>
1a002986:	1e54      	subs	r4, r2, #1
1a002988:	2a00      	cmp	r2, #0
1a00298a:	d03c      	beq.n	1a002a06 <memset+0x86>
1a00298c:	b2ca      	uxtb	r2, r1
1a00298e:	4603      	mov	r3, r0
1a002990:	e002      	b.n	1a002998 <memset+0x18>
1a002992:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
1a002996:	d336      	bcc.n	1a002a06 <memset+0x86>
1a002998:	f803 2b01 	strb.w	r2, [r3], #1
1a00299c:	079d      	lsls	r5, r3, #30
1a00299e:	d1f8      	bne.n	1a002992 <memset+0x12>
1a0029a0:	2c03      	cmp	r4, #3
1a0029a2:	d929      	bls.n	1a0029f8 <memset+0x78>
1a0029a4:	b2cd      	uxtb	r5, r1
1a0029a6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
1a0029aa:	2c0f      	cmp	r4, #15
1a0029ac:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
1a0029b0:	d933      	bls.n	1a002a1a <memset+0x9a>
1a0029b2:	f1a4 0610 	sub.w	r6, r4, #16
1a0029b6:	0936      	lsrs	r6, r6, #4
1a0029b8:	f103 0720 	add.w	r7, r3, #32
1a0029bc:	eb07 1706 	add.w	r7, r7, r6, lsl #4
1a0029c0:	f103 0210 	add.w	r2, r3, #16
1a0029c4:	e942 5504 	strd	r5, r5, [r2, #-16]
1a0029c8:	e942 5502 	strd	r5, r5, [r2, #-8]
1a0029cc:	3210      	adds	r2, #16
1a0029ce:	42ba      	cmp	r2, r7
1a0029d0:	d1f8      	bne.n	1a0029c4 <memset+0x44>
1a0029d2:	1c72      	adds	r2, r6, #1
1a0029d4:	f014 0f0c 	tst.w	r4, #12
1a0029d8:	eb03 1202 	add.w	r2, r3, r2, lsl #4
1a0029dc:	f004 060f 	and.w	r6, r4, #15
1a0029e0:	d013      	beq.n	1a002a0a <memset+0x8a>
1a0029e2:	1f33      	subs	r3, r6, #4
1a0029e4:	f023 0303 	bic.w	r3, r3, #3
1a0029e8:	3304      	adds	r3, #4
1a0029ea:	4413      	add	r3, r2
1a0029ec:	f842 5b04 	str.w	r5, [r2], #4
1a0029f0:	4293      	cmp	r3, r2
1a0029f2:	d1fb      	bne.n	1a0029ec <memset+0x6c>
1a0029f4:	f006 0403 	and.w	r4, r6, #3
1a0029f8:	b12c      	cbz	r4, 1a002a06 <memset+0x86>
1a0029fa:	b2c9      	uxtb	r1, r1
1a0029fc:	441c      	add	r4, r3
1a0029fe:	f803 1b01 	strb.w	r1, [r3], #1
1a002a02:	429c      	cmp	r4, r3
1a002a04:	d1fb      	bne.n	1a0029fe <memset+0x7e>
1a002a06:	bcf0      	pop	{r4, r5, r6, r7}
1a002a08:	4770      	bx	lr
1a002a0a:	4634      	mov	r4, r6
1a002a0c:	4613      	mov	r3, r2
1a002a0e:	2c00      	cmp	r4, #0
1a002a10:	d1f3      	bne.n	1a0029fa <memset+0x7a>
1a002a12:	e7f8      	b.n	1a002a06 <memset+0x86>
1a002a14:	4614      	mov	r4, r2
1a002a16:	4603      	mov	r3, r0
1a002a18:	e7c2      	b.n	1a0029a0 <memset+0x20>
1a002a1a:	461a      	mov	r2, r3
1a002a1c:	4626      	mov	r6, r4
1a002a1e:	e7e0      	b.n	1a0029e2 <memset+0x62>

1a002a20 <printf>:
1a002a20:	b40f      	push	{r0, r1, r2, r3}
1a002a22:	b500      	push	{lr}
1a002a24:	4907      	ldr	r1, [pc, #28]	; (1a002a44 <printf+0x24>)
1a002a26:	b083      	sub	sp, #12
1a002a28:	ab04      	add	r3, sp, #16
1a002a2a:	6808      	ldr	r0, [r1, #0]
1a002a2c:	f853 2b04 	ldr.w	r2, [r3], #4
1a002a30:	6881      	ldr	r1, [r0, #8]
1a002a32:	9301      	str	r3, [sp, #4]
1a002a34:	f000 f894 	bl	1a002b60 <_vfprintf_r>
1a002a38:	b003      	add	sp, #12
1a002a3a:	f85d eb04 	ldr.w	lr, [sp], #4
1a002a3e:	b004      	add	sp, #16
1a002a40:	4770      	bx	lr
1a002a42:	bf00      	nop
1a002a44:	10000048 	.word	0x10000048
1a002a48:	ffffffff 	.word	0xffffffff
1a002a4c:	ffffffff 	.word	0xffffffff
1a002a50:	ffffffff 	.word	0xffffffff
1a002a54:	ffffffff 	.word	0xffffffff
1a002a58:	ffffffff 	.word	0xffffffff
1a002a5c:	ffffffff 	.word	0xffffffff
1a002a60:	ffffffff 	.word	0xffffffff
1a002a64:	ffffffff 	.word	0xffffffff
1a002a68:	ffffffff 	.word	0xffffffff
1a002a6c:	ffffffff 	.word	0xffffffff
1a002a70:	ffffffff 	.word	0xffffffff
1a002a74:	ffffffff 	.word	0xffffffff
1a002a78:	ffffffff 	.word	0xffffffff
1a002a7c:	ffffffff 	.word	0xffffffff

1a002a80 <strlen>:
1a002a80:	f890 f000 	pld	[r0]
1a002a84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
1a002a88:	f020 0107 	bic.w	r1, r0, #7
1a002a8c:	f06f 0c00 	mvn.w	ip, #0
1a002a90:	f010 0407 	ands.w	r4, r0, #7
1a002a94:	f891 f020 	pld	[r1, #32]
1a002a98:	f040 8049 	bne.w	1a002b2e <strlen+0xae>
1a002a9c:	f04f 0400 	mov.w	r4, #0
1a002aa0:	f06f 0007 	mvn.w	r0, #7
1a002aa4:	e9d1 2300 	ldrd	r2, r3, [r1]
1a002aa8:	f891 f040 	pld	[r1, #64]	; 0x40
1a002aac:	f100 0008 	add.w	r0, r0, #8
1a002ab0:	fa82 f24c 	uadd8	r2, r2, ip
1a002ab4:	faa4 f28c 	sel	r2, r4, ip
1a002ab8:	fa83 f34c 	uadd8	r3, r3, ip
1a002abc:	faa2 f38c 	sel	r3, r2, ip
1a002ac0:	bb4b      	cbnz	r3, 1a002b16 <strlen+0x96>
1a002ac2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
1a002ac6:	fa82 f24c 	uadd8	r2, r2, ip
1a002aca:	f100 0008 	add.w	r0, r0, #8
1a002ace:	faa4 f28c 	sel	r2, r4, ip
1a002ad2:	fa83 f34c 	uadd8	r3, r3, ip
1a002ad6:	faa2 f38c 	sel	r3, r2, ip
1a002ada:	b9e3      	cbnz	r3, 1a002b16 <strlen+0x96>
1a002adc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a002ae0:	fa82 f24c 	uadd8	r2, r2, ip
1a002ae4:	f100 0008 	add.w	r0, r0, #8
1a002ae8:	faa4 f28c 	sel	r2, r4, ip
1a002aec:	fa83 f34c 	uadd8	r3, r3, ip
1a002af0:	faa2 f38c 	sel	r3, r2, ip
1a002af4:	b97b      	cbnz	r3, 1a002b16 <strlen+0x96>
1a002af6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
1a002afa:	f101 0120 	add.w	r1, r1, #32
1a002afe:	fa82 f24c 	uadd8	r2, r2, ip
1a002b02:	f100 0008 	add.w	r0, r0, #8
1a002b06:	faa4 f28c 	sel	r2, r4, ip
1a002b0a:	fa83 f34c 	uadd8	r3, r3, ip
1a002b0e:	faa2 f38c 	sel	r3, r2, ip
1a002b12:	2b00      	cmp	r3, #0
1a002b14:	d0c6      	beq.n	1a002aa4 <strlen+0x24>
1a002b16:	2a00      	cmp	r2, #0
1a002b18:	bf04      	itt	eq
1a002b1a:	3004      	addeq	r0, #4
1a002b1c:	461a      	moveq	r2, r3
1a002b1e:	ba12      	rev	r2, r2
1a002b20:	fab2 f282 	clz	r2, r2
1a002b24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
1a002b28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
1a002b2c:	4770      	bx	lr
1a002b2e:	e9d1 2300 	ldrd	r2, r3, [r1]
1a002b32:	f004 0503 	and.w	r5, r4, #3
1a002b36:	f1c4 0000 	rsb	r0, r4, #0
1a002b3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
1a002b3e:	f014 0f04 	tst.w	r4, #4
1a002b42:	f891 f040 	pld	[r1, #64]	; 0x40
1a002b46:	fa0c f505 	lsl.w	r5, ip, r5
1a002b4a:	ea62 0205 	orn	r2, r2, r5
1a002b4e:	bf1c      	itt	ne
1a002b50:	ea63 0305 	ornne	r3, r3, r5
1a002b54:	4662      	movne	r2, ip
1a002b56:	f04f 0400 	mov.w	r4, #0
1a002b5a:	e7a9      	b.n	1a002ab0 <strlen+0x30>
1a002b5c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a002b60 <_vfprintf_r>:
1a002b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a002b64:	b0d5      	sub	sp, #340	; 0x154
1a002b66:	461c      	mov	r4, r3
1a002b68:	4689      	mov	r9, r1
1a002b6a:	4617      	mov	r7, r2
1a002b6c:	4605      	mov	r5, r0
1a002b6e:	9005      	str	r0, [sp, #20]
1a002b70:	f003 fa34 	bl	1a005fdc <_localeconv_r>
1a002b74:	6803      	ldr	r3, [r0, #0]
1a002b76:	9315      	str	r3, [sp, #84]	; 0x54
1a002b78:	4618      	mov	r0, r3
1a002b7a:	f7ff ff81 	bl	1a002a80 <strlen>
1a002b7e:	9408      	str	r4, [sp, #32]
1a002b80:	9013      	str	r0, [sp, #76]	; 0x4c
1a002b82:	b11d      	cbz	r5, 1a002b8c <_vfprintf_r+0x2c>
1a002b84:	6bab      	ldr	r3, [r5, #56]	; 0x38
1a002b86:	2b00      	cmp	r3, #0
1a002b88:	f000 8411 	beq.w	1a0033ae <_vfprintf_r+0x84e>
1a002b8c:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
1a002b90:	f9b9 200c 	ldrsh.w	r2, [r9, #12]
1a002b94:	07cd      	lsls	r5, r1, #31
1a002b96:	b293      	uxth	r3, r2
1a002b98:	d402      	bmi.n	1a002ba0 <_vfprintf_r+0x40>
1a002b9a:	0598      	lsls	r0, r3, #22
1a002b9c:	f140 8754 	bpl.w	1a003a48 <_vfprintf_r+0xee8>
1a002ba0:	0499      	lsls	r1, r3, #18
1a002ba2:	d40a      	bmi.n	1a002bba <_vfprintf_r+0x5a>
1a002ba4:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
1a002ba8:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
1a002bac:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
1a002bb0:	f8a9 300c 	strh.w	r3, [r9, #12]
1a002bb4:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
1a002bb8:	b29b      	uxth	r3, r3
1a002bba:	071a      	lsls	r2, r3, #28
1a002bbc:	f140 80bf 	bpl.w	1a002d3e <_vfprintf_r+0x1de>
1a002bc0:	f8d9 2010 	ldr.w	r2, [r9, #16]
1a002bc4:	2a00      	cmp	r2, #0
1a002bc6:	f000 80ba 	beq.w	1a002d3e <_vfprintf_r+0x1de>
1a002bca:	f003 021a 	and.w	r2, r3, #26
1a002bce:	2a0a      	cmp	r2, #10
1a002bd0:	f000 80c3 	beq.w	1a002d5a <_vfprintf_r+0x1fa>
1a002bd4:	2300      	movs	r3, #0
1a002bd6:	ed9f 7b9c 	vldr	d7, [pc, #624]	; 1a002e48 <_vfprintf_r+0x2e8>
1a002bda:	9312      	str	r3, [sp, #72]	; 0x48
1a002bdc:	e9cd 3329 	strd	r3, r3, [sp, #164]	; 0xa4
1a002be0:	9314      	str	r3, [sp, #80]	; 0x50
1a002be2:	9316      	str	r3, [sp, #88]	; 0x58
1a002be4:	e9cd 3318 	strd	r3, r3, [sp, #96]	; 0x60
1a002be8:	9317      	str	r3, [sp, #92]	; 0x5c
1a002bea:	9304      	str	r3, [sp, #16]
1a002bec:	ab2b      	add	r3, sp, #172	; 0xac
1a002bee:	9328      	str	r3, [sp, #160]	; 0xa0
1a002bf0:	469b      	mov	fp, r3
1a002bf2:	783b      	ldrb	r3, [r7, #0]
1a002bf4:	f8cd 901c 	str.w	r9, [sp, #28]
1a002bf8:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a002bfc:	2b00      	cmp	r3, #0
1a002bfe:	f000 8267 	beq.w	1a0030d0 <_vfprintf_r+0x570>
1a002c02:	2b25      	cmp	r3, #37	; 0x25
1a002c04:	f001 80ab 	beq.w	1a003d5e <_vfprintf_r+0x11fe>
1a002c08:	463d      	mov	r5, r7
1a002c0a:	e003      	b.n	1a002c14 <_vfprintf_r+0xb4>
1a002c0c:	2b25      	cmp	r3, #37	; 0x25
1a002c0e:	f000 80bb 	beq.w	1a002d88 <_vfprintf_r+0x228>
1a002c12:	4625      	mov	r5, r4
1a002c14:	786b      	ldrb	r3, [r5, #1]
1a002c16:	1c6c      	adds	r4, r5, #1
1a002c18:	2b00      	cmp	r3, #0
1a002c1a:	d1f7      	bne.n	1a002c0c <_vfprintf_r+0xac>
1a002c1c:	1be6      	subs	r6, r4, r7
1a002c1e:	f000 8257 	beq.w	1a0030d0 <_vfprintf_r+0x570>
1a002c22:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
1a002c26:	3301      	adds	r3, #1
1a002c28:	4432      	add	r2, r6
1a002c2a:	2b07      	cmp	r3, #7
1a002c2c:	f8cb 7000 	str.w	r7, [fp]
1a002c30:	f8cb 6004 	str.w	r6, [fp, #4]
1a002c34:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
1a002c38:	f300 80aa 	bgt.w	1a002d90 <_vfprintf_r+0x230>
1a002c3c:	f10b 0b08 	add.w	fp, fp, #8
1a002c40:	9a04      	ldr	r2, [sp, #16]
1a002c42:	786b      	ldrb	r3, [r5, #1]
1a002c44:	4432      	add	r2, r6
1a002c46:	9204      	str	r2, [sp, #16]
1a002c48:	2b00      	cmp	r3, #0
1a002c4a:	f000 8241 	beq.w	1a0030d0 <_vfprintf_r+0x570>
1a002c4e:	2300      	movs	r3, #0
1a002c50:	f894 8001 	ldrb.w	r8, [r4, #1]
1a002c54:	9306      	str	r3, [sp, #24]
1a002c56:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a002c5a:	9302      	str	r3, [sp, #8]
1a002c5c:	f104 0a01 	add.w	sl, r4, #1
1a002c60:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
1a002c64:	262b      	movs	r6, #43	; 0x2b
1a002c66:	2120      	movs	r1, #32
1a002c68:	f10a 0a01 	add.w	sl, sl, #1
1a002c6c:	f1a8 0320 	sub.w	r3, r8, #32
1a002c70:	2b5a      	cmp	r3, #90	; 0x5a
1a002c72:	f200 83a1 	bhi.w	1a0033b8 <_vfprintf_r+0x858>
1a002c76:	e8df f013 	tbh	[pc, r3, lsl #1]
1a002c7a:	0282      	.short	0x0282
1a002c7c:	039f039f 	.word	0x039f039f
1a002c80:	039f027b 	.word	0x039f027b
1a002c84:	039f039f 	.word	0x039f039f
1a002c88:	039f0301 	.word	0x039f0301
1a002c8c:	02f6039f 	.word	0x02f6039f
1a002c90:	039f00df 	.word	0x039f00df
1a002c94:	032b00c4 	.word	0x032b00c4
1a002c98:	0324039f 	.word	0x0324039f
1a002c9c:	00960096 	.word	0x00960096
1a002ca0:	00960096 	.word	0x00960096
1a002ca4:	00960096 	.word	0x00960096
1a002ca8:	00960096 	.word	0x00960096
1a002cac:	039f0096 	.word	0x039f0096
1a002cb0:	039f039f 	.word	0x039f039f
1a002cb4:	039f039f 	.word	0x039f039f
1a002cb8:	039f039f 	.word	0x039f039f
1a002cbc:	039f0345 	.word	0x039f0345
1a002cc0:	016201a8 	.word	0x016201a8
1a002cc4:	03450345 	.word	0x03450345
1a002cc8:	039f0345 	.word	0x039f0345
1a002ccc:	039f039f 	.word	0x039f039f
1a002cd0:	015b039f 	.word	0x015b039f
1a002cd4:	039f039f 	.word	0x039f039f
1a002cd8:	039f014e 	.word	0x039f014e
1a002cdc:	039f039f 	.word	0x039f039f
1a002ce0:	039f0123 	.word	0x039f0123
1a002ce4:	039f0115 	.word	0x039f0115
1a002ce8:	00cb039f 	.word	0x00cb039f
1a002cec:	039f039f 	.word	0x039f039f
1a002cf0:	039f039f 	.word	0x039f039f
1a002cf4:	039f039f 	.word	0x039f039f
1a002cf8:	039f039f 	.word	0x039f039f
1a002cfc:	039f0345 	.word	0x039f0345
1a002d00:	00ef01a8 	.word	0x00ef01a8
1a002d04:	03450345 	.word	0x03450345
1a002d08:	02700345 	.word	0x02700345
1a002d0c:	005b00ef 	.word	0x005b00ef
1a002d10:	02eb039f 	.word	0x02eb039f
1a002d14:	02d1039f 	.word	0x02d1039f
1a002d18:	028c02bd 	.word	0x028c02bd
1a002d1c:	039f005b 	.word	0x039f005b
1a002d20:	005f0123 	.word	0x005f0123
1a002d24:	039f0387 	.word	0x039f0387
1a002d28:	00a5039f 	.word	0x00a5039f
1a002d2c:	005f039f 	.word	0x005f039f
1a002d30:	9b02      	ldr	r3, [sp, #8]
1a002d32:	f043 0320 	orr.w	r3, r3, #32
1a002d36:	9302      	str	r3, [sp, #8]
1a002d38:	f89a 8000 	ldrb.w	r8, [sl]
1a002d3c:	e794      	b.n	1a002c68 <_vfprintf_r+0x108>
1a002d3e:	4649      	mov	r1, r9
1a002d40:	9805      	ldr	r0, [sp, #20]
1a002d42:	f001 fcf9 	bl	1a004738 <__swsetup_r>
1a002d46:	2800      	cmp	r0, #0
1a002d48:	f041 8381 	bne.w	1a00444e <_vfprintf_r+0x18ee>
1a002d4c:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a002d50:	f003 021a 	and.w	r2, r3, #26
1a002d54:	2a0a      	cmp	r2, #10
1a002d56:	f47f af3d 	bne.w	1a002bd4 <_vfprintf_r+0x74>
1a002d5a:	f9b9 200e 	ldrsh.w	r2, [r9, #14]
1a002d5e:	2a00      	cmp	r2, #0
1a002d60:	f6ff af38 	blt.w	1a002bd4 <_vfprintf_r+0x74>
1a002d64:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
1a002d68:	07d6      	lsls	r6, r2, #31
1a002d6a:	d402      	bmi.n	1a002d72 <_vfprintf_r+0x212>
1a002d6c:	059d      	lsls	r5, r3, #22
1a002d6e:	f141 8190 	bpl.w	1a004092 <_vfprintf_r+0x1532>
1a002d72:	4623      	mov	r3, r4
1a002d74:	463a      	mov	r2, r7
1a002d76:	4649      	mov	r1, r9
1a002d78:	9805      	ldr	r0, [sp, #20]
1a002d7a:	f001 fc9b 	bl	1a0046b4 <__sbprintf>
1a002d7e:	9004      	str	r0, [sp, #16]
1a002d80:	9804      	ldr	r0, [sp, #16]
1a002d82:	b055      	add	sp, #340	; 0x154
1a002d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002d88:	1be6      	subs	r6, r4, r7
1a002d8a:	f43f af60 	beq.w	1a002c4e <_vfprintf_r+0xee>
1a002d8e:	e748      	b.n	1a002c22 <_vfprintf_r+0xc2>
1a002d90:	aa28      	add	r2, sp, #160	; 0xa0
1a002d92:	9907      	ldr	r1, [sp, #28]
1a002d94:	9805      	ldr	r0, [sp, #20]
1a002d96:	f004 fad9 	bl	1a00734c <__sprint_r>
1a002d9a:	2800      	cmp	r0, #0
1a002d9c:	f041 8427 	bne.w	1a0045ee <_vfprintf_r+0x1a8e>
1a002da0:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a002da4:	e74c      	b.n	1a002c40 <_vfprintf_r+0xe0>
1a002da6:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a002daa:	2200      	movs	r2, #0
1a002dac:	f81a 8b01 	ldrb.w	r8, [sl], #1
1a002db0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
1a002db4:	eb03 0242 	add.w	r2, r3, r2, lsl #1
1a002db8:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a002dbc:	2b09      	cmp	r3, #9
1a002dbe:	d9f5      	bls.n	1a002dac <_vfprintf_r+0x24c>
1a002dc0:	9206      	str	r2, [sp, #24]
1a002dc2:	e753      	b.n	1a002c6c <_vfprintf_r+0x10c>
1a002dc4:	4b22      	ldr	r3, [pc, #136]	; (1a002e50 <_vfprintf_r+0x2f0>)
1a002dc6:	9314      	str	r3, [sp, #80]	; 0x50
1a002dc8:	9b02      	ldr	r3, [sp, #8]
1a002dca:	069f      	lsls	r7, r3, #26
1a002dcc:	d525      	bpl.n	1a002e1a <_vfprintf_r+0x2ba>
1a002dce:	9c08      	ldr	r4, [sp, #32]
1a002dd0:	3407      	adds	r4, #7
1a002dd2:	f024 0307 	bic.w	r3, r4, #7
1a002dd6:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a002dda:	9308      	str	r3, [sp, #32]
1a002ddc:	9a02      	ldr	r2, [sp, #8]
1a002dde:	07d1      	lsls	r1, r2, #31
1a002de0:	d50a      	bpl.n	1a002df8 <_vfprintf_r+0x298>
1a002de2:	ea54 0305 	orrs.w	r3, r4, r5
1a002de6:	d007      	beq.n	1a002df8 <_vfprintf_r+0x298>
1a002de8:	2330      	movs	r3, #48	; 0x30
1a002dea:	f042 0202 	orr.w	r2, r2, #2
1a002dee:	f88d 8085 	strb.w	r8, [sp, #133]	; 0x85
1a002df2:	9202      	str	r2, [sp, #8]
1a002df4:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a002df8:	9b02      	ldr	r3, [sp, #8]
1a002dfa:	f423 6680 	bic.w	r6, r3, #1024	; 0x400
1a002dfe:	2302      	movs	r3, #2
1a002e00:	e1d9      	b.n	1a0031b6 <_vfprintf_r+0x656>
1a002e02:	f89a 8000 	ldrb.w	r8, [sl]
1a002e06:	9b02      	ldr	r3, [sp, #8]
1a002e08:	f043 0304 	orr.w	r3, r3, #4
1a002e0c:	9302      	str	r3, [sp, #8]
1a002e0e:	e72b      	b.n	1a002c68 <_vfprintf_r+0x108>
1a002e10:	4b10      	ldr	r3, [pc, #64]	; (1a002e54 <_vfprintf_r+0x2f4>)
1a002e12:	9314      	str	r3, [sp, #80]	; 0x50
1a002e14:	9b02      	ldr	r3, [sp, #8]
1a002e16:	069f      	lsls	r7, r3, #26
1a002e18:	d4d9      	bmi.n	1a002dce <_vfprintf_r+0x26e>
1a002e1a:	9b08      	ldr	r3, [sp, #32]
1a002e1c:	f853 4b04 	ldr.w	r4, [r3], #4
1a002e20:	9308      	str	r3, [sp, #32]
1a002e22:	9b02      	ldr	r3, [sp, #8]
1a002e24:	06de      	lsls	r6, r3, #27
1a002e26:	f100 864f 	bmi.w	1a003ac8 <_vfprintf_r+0xf68>
1a002e2a:	9b02      	ldr	r3, [sp, #8]
1a002e2c:	065d      	lsls	r5, r3, #25
1a002e2e:	f140 8647 	bpl.w	1a003ac0 <_vfprintf_r+0xf60>
1a002e32:	b2a4      	uxth	r4, r4
1a002e34:	2500      	movs	r5, #0
1a002e36:	e7d1      	b.n	1a002ddc <_vfprintf_r+0x27c>
1a002e38:	f88d 6083 	strb.w	r6, [sp, #131]	; 0x83
1a002e3c:	f89a 8000 	ldrb.w	r8, [sl]
1a002e40:	e712      	b.n	1a002c68 <_vfprintf_r+0x108>
1a002e42:	bf00      	nop
1a002e44:	f3af 8000 	nop.w
	...
1a002e50:	1a0079e8 	.word	0x1a0079e8
1a002e54:	1a0079d4 	.word	0x1a0079d4
1a002e58:	9e02      	ldr	r6, [sp, #8]
1a002e5a:	06b0      	lsls	r0, r6, #26
1a002e5c:	f140 870b 	bpl.w	1a003c76 <_vfprintf_r+0x1116>
1a002e60:	9c08      	ldr	r4, [sp, #32]
1a002e62:	3407      	adds	r4, #7
1a002e64:	f024 0307 	bic.w	r3, r4, #7
1a002e68:	4619      	mov	r1, r3
1a002e6a:	e8f1 2302 	ldrd	r2, r3, [r1], #8
1a002e6e:	9108      	str	r1, [sp, #32]
1a002e70:	4614      	mov	r4, r2
1a002e72:	461d      	mov	r5, r3
1a002e74:	2a00      	cmp	r2, #0
1a002e76:	f173 0300 	sbcs.w	r3, r3, #0
1a002e7a:	db71      	blt.n	1a002f60 <_vfprintf_r+0x400>
1a002e7c:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a002e80:	f000 82c5 	beq.w	1a00340e <_vfprintf_r+0x8ae>
1a002e84:	f026 0380 	bic.w	r3, r6, #128	; 0x80
1a002e88:	9302      	str	r3, [sp, #8]
1a002e8a:	ea54 0305 	orrs.w	r3, r4, r5
1a002e8e:	f040 82bd 	bne.w	1a00340c <_vfprintf_r+0x8ac>
1a002e92:	f1b9 0f00 	cmp.w	r9, #0
1a002e96:	f041 810e 	bne.w	1a0040b6 <_vfprintf_r+0x1556>
1a002e9a:	f04f 0900 	mov.w	r9, #0
1a002e9e:	464e      	mov	r6, r9
1a002ea0:	af54      	add	r7, sp, #336	; 0x150
1a002ea2:	e2bf      	b.n	1a003424 <_vfprintf_r+0x8c4>
1a002ea4:	9b02      	ldr	r3, [sp, #8]
1a002ea6:	069d      	lsls	r5, r3, #26
1a002ea8:	f043 0610 	orr.w	r6, r3, #16
1a002eac:	f100 828f 	bmi.w	1a0033ce <_vfprintf_r+0x86e>
1a002eb0:	9b08      	ldr	r3, [sp, #32]
1a002eb2:	1d1a      	adds	r2, r3, #4
1a002eb4:	9b08      	ldr	r3, [sp, #32]
1a002eb6:	9208      	str	r2, [sp, #32]
1a002eb8:	681c      	ldr	r4, [r3, #0]
1a002eba:	2500      	movs	r5, #0
1a002ebc:	2301      	movs	r3, #1
1a002ebe:	e17a      	b.n	1a0031b6 <_vfprintf_r+0x656>
1a002ec0:	9c08      	ldr	r4, [sp, #32]
1a002ec2:	f854 7b04 	ldr.w	r7, [r4], #4
1a002ec6:	2500      	movs	r5, #0
1a002ec8:	f88d 5083 	strb.w	r5, [sp, #131]	; 0x83
1a002ecc:	2f00      	cmp	r7, #0
1a002ece:	f000 8737 	beq.w	1a003d40 <_vfprintf_r+0x11e0>
1a002ed2:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a002ed6:	f000 87bc 	beq.w	1a003e52 <_vfprintf_r+0x12f2>
1a002eda:	464a      	mov	r2, r9
1a002edc:	4629      	mov	r1, r5
1a002ede:	4638      	mov	r0, r7
1a002ee0:	f003 fbbe 	bl	1a006660 <memchr>
1a002ee4:	9009      	str	r0, [sp, #36]	; 0x24
1a002ee6:	2800      	cmp	r0, #0
1a002ee8:	f001 824a 	beq.w	1a004380 <_vfprintf_r+0x1820>
1a002eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a002eee:	46a9      	mov	r9, r5
1a002ef0:	1bde      	subs	r6, r3, r7
1a002ef2:	e9cd 990e 	strd	r9, r9, [sp, #56]	; 0x38
1a002ef6:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a002efa:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a002efe:	9408      	str	r4, [sp, #32]
1a002f00:	9303      	str	r3, [sp, #12]
1a002f02:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
1a002f06:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
1a002f0a:	2a00      	cmp	r2, #0
1a002f0c:	d06f      	beq.n	1a002fee <_vfprintf_r+0x48e>
1a002f0e:	9b03      	ldr	r3, [sp, #12]
1a002f10:	3301      	adds	r3, #1
1a002f12:	9303      	str	r3, [sp, #12]
1a002f14:	e06b      	b.n	1a002fee <_vfprintf_r+0x48e>
1a002f16:	9b02      	ldr	r3, [sp, #8]
1a002f18:	069c      	lsls	r4, r3, #26
1a002f1a:	f043 0610 	orr.w	r6, r3, #16
1a002f1e:	f100 825f 	bmi.w	1a0033e0 <_vfprintf_r+0x880>
1a002f22:	9b08      	ldr	r3, [sp, #32]
1a002f24:	1d1a      	adds	r2, r3, #4
1a002f26:	9b08      	ldr	r3, [sp, #32]
1a002f28:	9208      	str	r2, [sp, #32]
1a002f2a:	681c      	ldr	r4, [r3, #0]
1a002f2c:	2500      	movs	r5, #0
1a002f2e:	e25e      	b.n	1a0033ee <_vfprintf_r+0x88e>
1a002f30:	9b02      	ldr	r3, [sp, #8]
1a002f32:	f89a 8000 	ldrb.w	r8, [sl]
1a002f36:	f043 0308 	orr.w	r3, r3, #8
1a002f3a:	9302      	str	r3, [sp, #8]
1a002f3c:	e694      	b.n	1a002c68 <_vfprintf_r+0x108>
1a002f3e:	9b02      	ldr	r3, [sp, #8]
1a002f40:	069c      	lsls	r4, r3, #26
1a002f42:	f043 0610 	orr.w	r6, r3, #16
1a002f46:	d48b      	bmi.n	1a002e60 <_vfprintf_r+0x300>
1a002f48:	9b08      	ldr	r3, [sp, #32]
1a002f4a:	1d1a      	adds	r2, r3, #4
1a002f4c:	9b08      	ldr	r3, [sp, #32]
1a002f4e:	9208      	str	r2, [sp, #32]
1a002f50:	681c      	ldr	r4, [r3, #0]
1a002f52:	17e5      	asrs	r5, r4, #31
1a002f54:	4622      	mov	r2, r4
1a002f56:	462b      	mov	r3, r5
1a002f58:	2a00      	cmp	r2, #0
1a002f5a:	f173 0300 	sbcs.w	r3, r3, #0
1a002f5e:	da8d      	bge.n	1a002e7c <_vfprintf_r+0x31c>
1a002f60:	4264      	negs	r4, r4
1a002f62:	f04f 032d 	mov.w	r3, #45	; 0x2d
1a002f66:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
1a002f6a:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a002f6e:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a002f72:	f04f 0301 	mov.w	r3, #1
1a002f76:	f040 8125 	bne.w	1a0031c4 <_vfprintf_r+0x664>
1a002f7a:	2b01      	cmp	r3, #1
1a002f7c:	f000 8247 	beq.w	1a00340e <_vfprintf_r+0x8ae>
1a002f80:	2b02      	cmp	r3, #2
1a002f82:	f000 8479 	beq.w	1a003878 <_vfprintf_r+0xd18>
1a002f86:	a954      	add	r1, sp, #336	; 0x150
1a002f88:	e000      	b.n	1a002f8c <_vfprintf_r+0x42c>
1a002f8a:	4639      	mov	r1, r7
1a002f8c:	08e2      	lsrs	r2, r4, #3
1a002f8e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
1a002f92:	08e8      	lsrs	r0, r5, #3
1a002f94:	f004 0307 	and.w	r3, r4, #7
1a002f98:	4605      	mov	r5, r0
1a002f9a:	4614      	mov	r4, r2
1a002f9c:	3330      	adds	r3, #48	; 0x30
1a002f9e:	ea54 0205 	orrs.w	r2, r4, r5
1a002fa2:	f801 3c01 	strb.w	r3, [r1, #-1]
1a002fa6:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
1a002faa:	d1ee      	bne.n	1a002f8a <_vfprintf_r+0x42a>
1a002fac:	07f2      	lsls	r2, r6, #31
1a002fae:	f140 8288 	bpl.w	1a0034c2 <_vfprintf_r+0x962>
1a002fb2:	2b30      	cmp	r3, #48	; 0x30
1a002fb4:	f000 8285 	beq.w	1a0034c2 <_vfprintf_r+0x962>
1a002fb8:	2330      	movs	r3, #48	; 0x30
1a002fba:	3902      	subs	r1, #2
1a002fbc:	f807 3c01 	strb.w	r3, [r7, #-1]
1a002fc0:	ab54      	add	r3, sp, #336	; 0x150
1a002fc2:	9602      	str	r6, [sp, #8]
1a002fc4:	460f      	mov	r7, r1
1a002fc6:	1a5e      	subs	r6, r3, r1
1a002fc8:	e22c      	b.n	1a003424 <_vfprintf_r+0x8c4>
1a002fca:	9c08      	ldr	r4, [sp, #32]
1a002fcc:	2300      	movs	r3, #0
1a002fce:	f854 2b04 	ldr.w	r2, [r4], #4
1a002fd2:	f88d 20ec 	strb.w	r2, [sp, #236]	; 0xec
1a002fd6:	2601      	movs	r6, #1
1a002fd8:	461a      	mov	r2, r3
1a002fda:	9603      	str	r6, [sp, #12]
1a002fdc:	9408      	str	r4, [sp, #32]
1a002fde:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
1a002fe2:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a002fe6:	9209      	str	r2, [sp, #36]	; 0x24
1a002fe8:	4691      	mov	r9, r2
1a002fea:	920c      	str	r2, [sp, #48]	; 0x30
1a002fec:	af3b      	add	r7, sp, #236	; 0xec
1a002fee:	9b02      	ldr	r3, [sp, #8]
1a002ff0:	f013 0302 	ands.w	r3, r3, #2
1a002ff4:	930a      	str	r3, [sp, #40]	; 0x28
1a002ff6:	d002      	beq.n	1a002ffe <_vfprintf_r+0x49e>
1a002ff8:	9b03      	ldr	r3, [sp, #12]
1a002ffa:	3302      	adds	r3, #2
1a002ffc:	9303      	str	r3, [sp, #12]
1a002ffe:	9b02      	ldr	r3, [sp, #8]
1a003000:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003002:	f013 0384 	ands.w	r3, r3, #132	; 0x84
1a003006:	930b      	str	r3, [sp, #44]	; 0x2c
1a003008:	d104      	bne.n	1a003014 <_vfprintf_r+0x4b4>
1a00300a:	9b06      	ldr	r3, [sp, #24]
1a00300c:	9903      	ldr	r1, [sp, #12]
1a00300e:	1a5d      	subs	r5, r3, r1
1a003010:	2d00      	cmp	r5, #0
1a003012:	dc66      	bgt.n	1a0030e2 <_vfprintf_r+0x582>
1a003014:	b172      	cbz	r2, 1a003034 <_vfprintf_r+0x4d4>
1a003016:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003018:	3201      	adds	r2, #1
1a00301a:	3401      	adds	r4, #1
1a00301c:	f10d 0083 	add.w	r0, sp, #131	; 0x83
1a003020:	2101      	movs	r1, #1
1a003022:	2a07      	cmp	r2, #7
1a003024:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003028:	e9cb 0100 	strd	r0, r1, [fp]
1a00302c:	f300 83b1 	bgt.w	1a003792 <_vfprintf_r+0xc32>
1a003030:	f10b 0b08 	add.w	fp, fp, #8
1a003034:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003036:	b16b      	cbz	r3, 1a003054 <_vfprintf_r+0x4f4>
1a003038:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a00303a:	3301      	adds	r3, #1
1a00303c:	3402      	adds	r4, #2
1a00303e:	a921      	add	r1, sp, #132	; 0x84
1a003040:	2202      	movs	r2, #2
1a003042:	2b07      	cmp	r3, #7
1a003044:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003048:	e9cb 1200 	strd	r1, r2, [fp]
1a00304c:	f300 83ad 	bgt.w	1a0037aa <_vfprintf_r+0xc4a>
1a003050:	f10b 0b08 	add.w	fp, fp, #8
1a003054:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a003056:	2b80      	cmp	r3, #128	; 0x80
1a003058:	f000 8295 	beq.w	1a003586 <_vfprintf_r+0xa26>
1a00305c:	eba9 0506 	sub.w	r5, r9, r6
1a003060:	2d00      	cmp	r5, #0
1a003062:	f300 82d3 	bgt.w	1a00360c <_vfprintf_r+0xaac>
1a003066:	9b02      	ldr	r3, [sp, #8]
1a003068:	05db      	lsls	r3, r3, #23
1a00306a:	f100 822e 	bmi.w	1a0034ca <_vfprintf_r+0x96a>
1a00306e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003070:	f8cb 7000 	str.w	r7, [fp]
1a003074:	3301      	adds	r3, #1
1a003076:	4434      	add	r4, r6
1a003078:	2b07      	cmp	r3, #7
1a00307a:	942a      	str	r4, [sp, #168]	; 0xa8
1a00307c:	f8cb 6004 	str.w	r6, [fp, #4]
1a003080:	9329      	str	r3, [sp, #164]	; 0xa4
1a003082:	f300 8325 	bgt.w	1a0036d0 <_vfprintf_r+0xb70>
1a003086:	f10b 0b08 	add.w	fp, fp, #8
1a00308a:	9b02      	ldr	r3, [sp, #8]
1a00308c:	075d      	lsls	r5, r3, #29
1a00308e:	d505      	bpl.n	1a00309c <_vfprintf_r+0x53c>
1a003090:	9b06      	ldr	r3, [sp, #24]
1a003092:	9a03      	ldr	r2, [sp, #12]
1a003094:	1a9d      	subs	r5, r3, r2
1a003096:	2d00      	cmp	r5, #0
1a003098:	f300 83ae 	bgt.w	1a0037f8 <_vfprintf_r+0xc98>
1a00309c:	9b04      	ldr	r3, [sp, #16]
1a00309e:	9a06      	ldr	r2, [sp, #24]
1a0030a0:	9903      	ldr	r1, [sp, #12]
1a0030a2:	428a      	cmp	r2, r1
1a0030a4:	bfac      	ite	ge
1a0030a6:	189b      	addge	r3, r3, r2
1a0030a8:	185b      	addlt	r3, r3, r1
1a0030aa:	9304      	str	r3, [sp, #16]
1a0030ac:	2c00      	cmp	r4, #0
1a0030ae:	f040 82e7 	bne.w	1a003680 <_vfprintf_r+0xb20>
1a0030b2:	2300      	movs	r3, #0
1a0030b4:	9329      	str	r3, [sp, #164]	; 0xa4
1a0030b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0030b8:	b11b      	cbz	r3, 1a0030c2 <_vfprintf_r+0x562>
1a0030ba:	9909      	ldr	r1, [sp, #36]	; 0x24
1a0030bc:	9805      	ldr	r0, [sp, #20]
1a0030be:	f002 fce9 	bl	1a005a94 <_free_r>
1a0030c2:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0030c6:	4657      	mov	r7, sl
1a0030c8:	783b      	ldrb	r3, [r7, #0]
1a0030ca:	2b00      	cmp	r3, #0
1a0030cc:	f47f ad99 	bne.w	1a002c02 <_vfprintf_r+0xa2>
1a0030d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
1a0030d2:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0030d6:	2b00      	cmp	r3, #0
1a0030d8:	f040 86f5 	bne.w	1a003ec6 <_vfprintf_r+0x1366>
1a0030dc:	2300      	movs	r3, #0
1a0030de:	9329      	str	r3, [sp, #164]	; 0xa4
1a0030e0:	e375      	b.n	1a0037ce <_vfprintf_r+0xc6e>
1a0030e2:	2d10      	cmp	r5, #16
1a0030e4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a0030e6:	dd29      	ble.n	1a00313c <_vfprintf_r+0x5dc>
1a0030e8:	4659      	mov	r1, fp
1a0030ea:	4620      	mov	r0, r4
1a0030ec:	961e      	str	r6, [sp, #120]	; 0x78
1a0030ee:	2310      	movs	r3, #16
1a0030f0:	9c05      	ldr	r4, [sp, #20]
1a0030f2:	9e07      	ldr	r6, [sp, #28]
1a0030f4:	46bb      	mov	fp, r7
1a0030f6:	e004      	b.n	1a003102 <_vfprintf_r+0x5a2>
1a0030f8:	3d10      	subs	r5, #16
1a0030fa:	2d10      	cmp	r5, #16
1a0030fc:	f101 0108 	add.w	r1, r1, #8
1a003100:	dd18      	ble.n	1a003134 <_vfprintf_r+0x5d4>
1a003102:	3201      	adds	r2, #1
1a003104:	4fbc      	ldr	r7, [pc, #752]	; (1a0033f8 <_vfprintf_r+0x898>)
1a003106:	3010      	adds	r0, #16
1a003108:	2a07      	cmp	r2, #7
1a00310a:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a00310e:	e9c1 7300 	strd	r7, r3, [r1]
1a003112:	ddf1      	ble.n	1a0030f8 <_vfprintf_r+0x598>
1a003114:	aa28      	add	r2, sp, #160	; 0xa0
1a003116:	4631      	mov	r1, r6
1a003118:	4620      	mov	r0, r4
1a00311a:	f004 f917 	bl	1a00734c <__sprint_r>
1a00311e:	2800      	cmp	r0, #0
1a003120:	f040 834f 	bne.w	1a0037c2 <_vfprintf_r+0xc62>
1a003124:	3d10      	subs	r5, #16
1a003126:	2d10      	cmp	r5, #16
1a003128:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a00312c:	a92b      	add	r1, sp, #172	; 0xac
1a00312e:	f04f 0310 	mov.w	r3, #16
1a003132:	dce6      	bgt.n	1a003102 <_vfprintf_r+0x5a2>
1a003134:	9e1e      	ldr	r6, [sp, #120]	; 0x78
1a003136:	465f      	mov	r7, fp
1a003138:	4604      	mov	r4, r0
1a00313a:	468b      	mov	fp, r1
1a00313c:	3201      	adds	r2, #1
1a00313e:	4bae      	ldr	r3, [pc, #696]	; (1a0033f8 <_vfprintf_r+0x898>)
1a003140:	442c      	add	r4, r5
1a003142:	2a07      	cmp	r2, #7
1a003144:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003148:	e9cb 3500 	strd	r3, r5, [fp]
1a00314c:	f300 862a 	bgt.w	1a003da4 <_vfprintf_r+0x1244>
1a003150:	f10b 0b08 	add.w	fp, fp, #8
1a003154:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003158:	e75c      	b.n	1a003014 <_vfprintf_r+0x4b4>
1a00315a:	f89a 8000 	ldrb.w	r8, [sl]
1a00315e:	9b02      	ldr	r3, [sp, #8]
1a003160:	f1b8 0f68 	cmp.w	r8, #104	; 0x68
1a003164:	f000 85e3 	beq.w	1a003d2e <_vfprintf_r+0x11ce>
1a003168:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a00316c:	9302      	str	r3, [sp, #8]
1a00316e:	e57b      	b.n	1a002c68 <_vfprintf_r+0x108>
1a003170:	9b02      	ldr	r3, [sp, #8]
1a003172:	f89a 8000 	ldrb.w	r8, [sl]
1a003176:	f043 0301 	orr.w	r3, r3, #1
1a00317a:	9302      	str	r3, [sp, #8]
1a00317c:	e574      	b.n	1a002c68 <_vfprintf_r+0x108>
1a00317e:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
1a003182:	f89a 8000 	ldrb.w	r8, [sl]
1a003186:	2b00      	cmp	r3, #0
1a003188:	f47f ad6e 	bne.w	1a002c68 <_vfprintf_r+0x108>
1a00318c:	f88d 1083 	strb.w	r1, [sp, #131]	; 0x83
1a003190:	e56a      	b.n	1a002c68 <_vfprintf_r+0x108>
1a003192:	9c08      	ldr	r4, [sp, #32]
1a003194:	f647 0230 	movw	r2, #30768	; 0x7830
1a003198:	f854 3b04 	ldr.w	r3, [r4], #4
1a00319c:	f8ad 2084 	strh.w	r2, [sp, #132]	; 0x84
1a0031a0:	9a02      	ldr	r2, [sp, #8]
1a0031a2:	9408      	str	r4, [sp, #32]
1a0031a4:	461c      	mov	r4, r3
1a0031a6:	4b95      	ldr	r3, [pc, #596]	; (1a0033fc <_vfprintf_r+0x89c>)
1a0031a8:	9314      	str	r3, [sp, #80]	; 0x50
1a0031aa:	f042 0602 	orr.w	r6, r2, #2
1a0031ae:	2500      	movs	r5, #0
1a0031b0:	2302      	movs	r3, #2
1a0031b2:	f04f 0878 	mov.w	r8, #120	; 0x78
1a0031b6:	2200      	movs	r2, #0
1a0031b8:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a0031bc:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a0031c0:	f43f aedb 	beq.w	1a002f7a <_vfprintf_r+0x41a>
1a0031c4:	f026 0280 	bic.w	r2, r6, #128	; 0x80
1a0031c8:	9202      	str	r2, [sp, #8]
1a0031ca:	ea54 0205 	orrs.w	r2, r4, r5
1a0031ce:	f040 82dd 	bne.w	1a00378c <_vfprintf_r+0xc2c>
1a0031d2:	f1b9 0f00 	cmp.w	r9, #0
1a0031d6:	f040 8348 	bne.w	1a00386a <_vfprintf_r+0xd0a>
1a0031da:	2b00      	cmp	r3, #0
1a0031dc:	f47f ae5d 	bne.w	1a002e9a <_vfprintf_r+0x33a>
1a0031e0:	f016 0601 	ands.w	r6, r6, #1
1a0031e4:	f000 846a 	beq.w	1a003abc <_vfprintf_r+0xf5c>
1a0031e8:	2330      	movs	r3, #48	; 0x30
1a0031ea:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
1a0031ee:	f20d 174f 	addw	r7, sp, #335	; 0x14f
1a0031f2:	e117      	b.n	1a003424 <_vfprintf_r+0x8c4>
1a0031f4:	9e02      	ldr	r6, [sp, #8]
1a0031f6:	06b0      	lsls	r0, r6, #26
1a0031f8:	f100 80f2 	bmi.w	1a0033e0 <_vfprintf_r+0x880>
1a0031fc:	9b02      	ldr	r3, [sp, #8]
1a0031fe:	9a08      	ldr	r2, [sp, #32]
1a003200:	06d9      	lsls	r1, r3, #27
1a003202:	f852 4b04 	ldr.w	r4, [r2], #4
1a003206:	f101 8243 	bmi.w	1a004690 <_vfprintf_r+0x1b30>
1a00320a:	9e02      	ldr	r6, [sp, #8]
1a00320c:	4633      	mov	r3, r6
1a00320e:	065b      	lsls	r3, r3, #25
1a003210:	f140 8635 	bpl.w	1a003e7e <_vfprintf_r+0x131e>
1a003214:	9208      	str	r2, [sp, #32]
1a003216:	b2a4      	uxth	r4, r4
1a003218:	2500      	movs	r5, #0
1a00321a:	e0e8      	b.n	1a0033ee <_vfprintf_r+0x88e>
1a00321c:	9902      	ldr	r1, [sp, #8]
1a00321e:	9a08      	ldr	r2, [sp, #32]
1a003220:	0689      	lsls	r1, r1, #26
1a003222:	f102 0304 	add.w	r3, r2, #4
1a003226:	f100 8452 	bmi.w	1a003ace <_vfprintf_r+0xf6e>
1a00322a:	9a02      	ldr	r2, [sp, #8]
1a00322c:	06d7      	lsls	r7, r2, #27
1a00322e:	f100 85e1 	bmi.w	1a003df4 <_vfprintf_r+0x1294>
1a003232:	9a02      	ldr	r2, [sp, #8]
1a003234:	0656      	lsls	r6, r2, #25
1a003236:	f100 8664 	bmi.w	1a003f02 <_vfprintf_r+0x13a2>
1a00323a:	9a02      	ldr	r2, [sp, #8]
1a00323c:	0595      	lsls	r5, r2, #22
1a00323e:	f140 85d9 	bpl.w	1a003df4 <_vfprintf_r+0x1294>
1a003242:	9a08      	ldr	r2, [sp, #32]
1a003244:	9308      	str	r3, [sp, #32]
1a003246:	6812      	ldr	r2, [r2, #0]
1a003248:	9b04      	ldr	r3, [sp, #16]
1a00324a:	7013      	strb	r3, [r2, #0]
1a00324c:	4657      	mov	r7, sl
1a00324e:	e73b      	b.n	1a0030c8 <_vfprintf_r+0x568>
1a003250:	f89a 8000 	ldrb.w	r8, [sl]
1a003254:	9b02      	ldr	r3, [sp, #8]
1a003256:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
1a00325a:	f000 855f 	beq.w	1a003d1c <_vfprintf_r+0x11bc>
1a00325e:	f043 0310 	orr.w	r3, r3, #16
1a003262:	9302      	str	r3, [sp, #8]
1a003264:	e500      	b.n	1a002c68 <_vfprintf_r+0x108>
1a003266:	9b08      	ldr	r3, [sp, #32]
1a003268:	f89a 8000 	ldrb.w	r8, [sl]
1a00326c:	f853 2b04 	ldr.w	r2, [r3], #4
1a003270:	9206      	str	r2, [sp, #24]
1a003272:	2a00      	cmp	r2, #0
1a003274:	f2c0 8513 	blt.w	1a003c9e <_vfprintf_r+0x113e>
1a003278:	9308      	str	r3, [sp, #32]
1a00327a:	e4f5      	b.n	1a002c68 <_vfprintf_r+0x108>
1a00327c:	9d05      	ldr	r5, [sp, #20]
1a00327e:	4628      	mov	r0, r5
1a003280:	f002 feac 	bl	1a005fdc <_localeconv_r>
1a003284:	6843      	ldr	r3, [r0, #4]
1a003286:	9317      	str	r3, [sp, #92]	; 0x5c
1a003288:	4618      	mov	r0, r3
1a00328a:	f7ff fbf9 	bl	1a002a80 <strlen>
1a00328e:	9019      	str	r0, [sp, #100]	; 0x64
1a003290:	4604      	mov	r4, r0
1a003292:	4628      	mov	r0, r5
1a003294:	f002 fea2 	bl	1a005fdc <_localeconv_r>
1a003298:	6883      	ldr	r3, [r0, #8]
1a00329a:	9318      	str	r3, [sp, #96]	; 0x60
1a00329c:	2120      	movs	r1, #32
1a00329e:	2c00      	cmp	r4, #0
1a0032a0:	f43f ad4a 	beq.w	1a002d38 <_vfprintf_r+0x1d8>
1a0032a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
1a0032a6:	f89a 8000 	ldrb.w	r8, [sl]
1a0032aa:	2b00      	cmp	r3, #0
1a0032ac:	f43f acdc 	beq.w	1a002c68 <_vfprintf_r+0x108>
1a0032b0:	781b      	ldrb	r3, [r3, #0]
1a0032b2:	2b00      	cmp	r3, #0
1a0032b4:	f43f acd8 	beq.w	1a002c68 <_vfprintf_r+0x108>
1a0032b8:	9b02      	ldr	r3, [sp, #8]
1a0032ba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
1a0032be:	9302      	str	r3, [sp, #8]
1a0032c0:	e4d2      	b.n	1a002c68 <_vfprintf_r+0x108>
1a0032c2:	9b02      	ldr	r3, [sp, #8]
1a0032c4:	f89a 8000 	ldrb.w	r8, [sl]
1a0032c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0032cc:	9302      	str	r3, [sp, #8]
1a0032ce:	e4cb      	b.n	1a002c68 <_vfprintf_r+0x108>
1a0032d0:	4652      	mov	r2, sl
1a0032d2:	f812 8b01 	ldrb.w	r8, [r2], #1
1a0032d6:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
1a0032da:	f001 81be 	beq.w	1a00465a <_vfprintf_r+0x1afa>
1a0032de:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a0032e2:	2b09      	cmp	r3, #9
1a0032e4:	4692      	mov	sl, r2
1a0032e6:	f04f 0900 	mov.w	r9, #0
1a0032ea:	f63f acbf 	bhi.w	1a002c6c <_vfprintf_r+0x10c>
1a0032ee:	f81a 8b01 	ldrb.w	r8, [sl], #1
1a0032f2:	eb09 0989 	add.w	r9, r9, r9, lsl #2
1a0032f6:	eb03 0949 	add.w	r9, r3, r9, lsl #1
1a0032fa:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a0032fe:	2b09      	cmp	r3, #9
1a003300:	d9f5      	bls.n	1a0032ee <_vfprintf_r+0x78e>
1a003302:	e4b3      	b.n	1a002c6c <_vfprintf_r+0x10c>
1a003304:	9c08      	ldr	r4, [sp, #32]
1a003306:	3407      	adds	r4, #7
1a003308:	f024 0307 	bic.w	r3, r4, #7
1a00330c:	ecb3 7b02 	vldmia	r3!, {d7}
1a003310:	ec55 4b17 	vmov	r4, r5, d7
1a003314:	9308      	str	r3, [sp, #32]
1a003316:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
1a00331a:	931b      	str	r3, [sp, #108]	; 0x6c
1a00331c:	ed8d 7a1a 	vstr	s14, [sp, #104]	; 0x68
1a003320:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
1a003324:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a003328:	4b35      	ldr	r3, [pc, #212]	; (1a003400 <_vfprintf_r+0x8a0>)
1a00332a:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a00332e:	f004 f9cd 	bl	1a0076cc <__aeabi_dcmpun>
1a003332:	2800      	cmp	r0, #0
1a003334:	f040 83dc 	bne.w	1a003af0 <_vfprintf_r+0xf90>
1a003338:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a00333c:	4b30      	ldr	r3, [pc, #192]	; (1a003400 <_vfprintf_r+0x8a0>)
1a00333e:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
1a003342:	f7ff f8bf 	bl	1a0024c4 <__aeabi_dcmple>
1a003346:	2800      	cmp	r0, #0
1a003348:	f040 83d2 	bne.w	1a003af0 <_vfprintf_r+0xf90>
1a00334c:	2200      	movs	r2, #0
1a00334e:	2300      	movs	r3, #0
1a003350:	4620      	mov	r0, r4
1a003352:	4629      	mov	r1, r5
1a003354:	f7ff f8ac 	bl	1a0024b0 <__aeabi_dcmplt>
1a003358:	2800      	cmp	r0, #0
1a00335a:	f040 8780 	bne.w	1a00425e <_vfprintf_r+0x16fe>
1a00335e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003362:	4f28      	ldr	r7, [pc, #160]	; (1a003404 <_vfprintf_r+0x8a4>)
1a003364:	4b28      	ldr	r3, [pc, #160]	; (1a003408 <_vfprintf_r+0x8a8>)
1a003366:	9802      	ldr	r0, [sp, #8]
1a003368:	2100      	movs	r1, #0
1a00336a:	2603      	movs	r6, #3
1a00336c:	f020 0080 	bic.w	r0, r0, #128	; 0x80
1a003370:	9603      	str	r6, [sp, #12]
1a003372:	9109      	str	r1, [sp, #36]	; 0x24
1a003374:	9002      	str	r0, [sp, #8]
1a003376:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
1a00337a:	bfc8      	it	gt
1a00337c:	461f      	movgt	r7, r3
1a00337e:	4689      	mov	r9, r1
1a003380:	910c      	str	r1, [sp, #48]	; 0x30
1a003382:	e9cd 110e 	strd	r1, r1, [sp, #56]	; 0x38
1a003386:	e5c0      	b.n	1a002f0a <_vfprintf_r+0x3aa>
1a003388:	9e02      	ldr	r6, [sp, #8]
1a00338a:	06b4      	lsls	r4, r6, #26
1a00338c:	d41f      	bmi.n	1a0033ce <_vfprintf_r+0x86e>
1a00338e:	9b02      	ldr	r3, [sp, #8]
1a003390:	9a08      	ldr	r2, [sp, #32]
1a003392:	06d8      	lsls	r0, r3, #27
1a003394:	f852 4b04 	ldr.w	r4, [r2], #4
1a003398:	f101 8174 	bmi.w	1a004684 <_vfprintf_r+0x1b24>
1a00339c:	9e02      	ldr	r6, [sp, #8]
1a00339e:	0671      	lsls	r1, r6, #25
1a0033a0:	f140 8577 	bpl.w	1a003e92 <_vfprintf_r+0x1332>
1a0033a4:	9208      	str	r2, [sp, #32]
1a0033a6:	b2a4      	uxth	r4, r4
1a0033a8:	2500      	movs	r5, #0
1a0033aa:	2301      	movs	r3, #1
1a0033ac:	e703      	b.n	1a0031b6 <_vfprintf_r+0x656>
1a0033ae:	9805      	ldr	r0, [sp, #20]
1a0033b0:	f002 faea 	bl	1a005988 <__sinit>
1a0033b4:	f7ff bbea 	b.w	1a002b8c <_vfprintf_r+0x2c>
1a0033b8:	f1b8 0f00 	cmp.w	r8, #0
1a0033bc:	f43f ae88 	beq.w	1a0030d0 <_vfprintf_r+0x570>
1a0033c0:	2300      	movs	r3, #0
1a0033c2:	2601      	movs	r6, #1
1a0033c4:	461a      	mov	r2, r3
1a0033c6:	9603      	str	r6, [sp, #12]
1a0033c8:	f88d 80ec 	strb.w	r8, [sp, #236]	; 0xec
1a0033cc:	e607      	b.n	1a002fde <_vfprintf_r+0x47e>
1a0033ce:	9c08      	ldr	r4, [sp, #32]
1a0033d0:	3407      	adds	r4, #7
1a0033d2:	f024 0307 	bic.w	r3, r4, #7
1a0033d6:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a0033da:	9308      	str	r3, [sp, #32]
1a0033dc:	2301      	movs	r3, #1
1a0033de:	e6ea      	b.n	1a0031b6 <_vfprintf_r+0x656>
1a0033e0:	9c08      	ldr	r4, [sp, #32]
1a0033e2:	3407      	adds	r4, #7
1a0033e4:	f024 0307 	bic.w	r3, r4, #7
1a0033e8:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a0033ec:	9308      	str	r3, [sp, #32]
1a0033ee:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
1a0033f2:	2300      	movs	r3, #0
1a0033f4:	e6df      	b.n	1a0031b6 <_vfprintf_r+0x656>
1a0033f6:	bf00      	nop
1a0033f8:	1a007a08 	.word	0x1a007a08
1a0033fc:	1a0079e8 	.word	0x1a0079e8
1a003400:	7fefffff 	.word	0x7fefffff
1a003404:	1a0079c4 	.word	0x1a0079c4
1a003408:	1a0079c8 	.word	0x1a0079c8
1a00340c:	9e02      	ldr	r6, [sp, #8]
1a00340e:	2d00      	cmp	r5, #0
1a003410:	bf08      	it	eq
1a003412:	2c0a      	cmpeq	r4, #10
1a003414:	d213      	bcs.n	1a00343e <_vfprintf_r+0x8de>
1a003416:	3430      	adds	r4, #48	; 0x30
1a003418:	9602      	str	r6, [sp, #8]
1a00341a:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
1a00341e:	2601      	movs	r6, #1
1a003420:	f20d 174f 	addw	r7, sp, #335	; 0x14f
1a003424:	2300      	movs	r3, #0
1a003426:	454e      	cmp	r6, r9
1a003428:	9309      	str	r3, [sp, #36]	; 0x24
1a00342a:	930c      	str	r3, [sp, #48]	; 0x30
1a00342c:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
1a003430:	4633      	mov	r3, r6
1a003432:	bfb8      	it	lt
1a003434:	464b      	movlt	r3, r9
1a003436:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a00343a:	9303      	str	r3, [sp, #12]
1a00343c:	e565      	b.n	1a002f0a <_vfprintf_r+0x3aa>
1a00343e:	f406 6380 	and.w	r3, r6, #1024	; 0x400
1a003442:	2200      	movs	r2, #0
1a003444:	e9cd a802 	strd	sl, r8, [sp, #8]
1a003448:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
1a00344c:	af54      	add	r7, sp, #336	; 0x150
1a00344e:	46cb      	mov	fp, r9
1a003450:	4692      	mov	sl, r2
1a003452:	46b1      	mov	r9, r6
1a003454:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
1a003458:	461e      	mov	r6, r3
1a00345a:	e007      	b.n	1a00346c <_vfprintf_r+0x90c>
1a00345c:	f7ff f850 	bl	1a002500 <__aeabi_uldivmod>
1a003460:	2d00      	cmp	r5, #0
1a003462:	bf08      	it	eq
1a003464:	2c0a      	cmpeq	r4, #10
1a003466:	d320      	bcc.n	1a0034aa <_vfprintf_r+0x94a>
1a003468:	4604      	mov	r4, r0
1a00346a:	460d      	mov	r5, r1
1a00346c:	220a      	movs	r2, #10
1a00346e:	2300      	movs	r3, #0
1a003470:	4620      	mov	r0, r4
1a003472:	4629      	mov	r1, r5
1a003474:	f7ff f844 	bl	1a002500 <__aeabi_uldivmod>
1a003478:	f102 0c30 	add.w	ip, r2, #48	; 0x30
1a00347c:	f807 cc01 	strb.w	ip, [r7, #-1]
1a003480:	4620      	mov	r0, r4
1a003482:	4629      	mov	r1, r5
1a003484:	220a      	movs	r2, #10
1a003486:	2300      	movs	r3, #0
1a003488:	f10a 0a01 	add.w	sl, sl, #1
1a00348c:	3f01      	subs	r7, #1
1a00348e:	2e00      	cmp	r6, #0
1a003490:	d0e4      	beq.n	1a00345c <_vfprintf_r+0x8fc>
1a003492:	f898 c000 	ldrb.w	ip, [r8]
1a003496:	45e2      	cmp	sl, ip
1a003498:	d1e0      	bne.n	1a00345c <_vfprintf_r+0x8fc>
1a00349a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
1a00349e:	d0dd      	beq.n	1a00345c <_vfprintf_r+0x8fc>
1a0034a0:	429d      	cmp	r5, r3
1a0034a2:	bf08      	it	eq
1a0034a4:	4294      	cmpeq	r4, r2
1a0034a6:	f080 871e 	bcs.w	1a0042e6 <_vfprintf_r+0x1786>
1a0034aa:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
1a0034ae:	464e      	mov	r6, r9
1a0034b0:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
1a0034b4:	46d9      	mov	r9, fp
1a0034b6:	f8dd a008 	ldr.w	sl, [sp, #8]
1a0034ba:	f8dd 800c 	ldr.w	r8, [sp, #12]
1a0034be:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
1a0034c2:	9602      	str	r6, [sp, #8]
1a0034c4:	ab54      	add	r3, sp, #336	; 0x150
1a0034c6:	1bde      	subs	r6, r3, r7
1a0034c8:	e7ac      	b.n	1a003424 <_vfprintf_r+0x8c4>
1a0034ca:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
1a0034ce:	f340 810a 	ble.w	1a0036e6 <_vfprintf_r+0xb86>
1a0034d2:	2200      	movs	r2, #0
1a0034d4:	2300      	movs	r3, #0
1a0034d6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a0034da:	f7fe ffdf 	bl	1a00249c <__aeabi_dcmpeq>
1a0034de:	2800      	cmp	r0, #0
1a0034e0:	f000 81de 	beq.w	1a0038a0 <_vfprintf_r+0xd40>
1a0034e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0034e6:	4ac2      	ldr	r2, [pc, #776]	; (1a0037f0 <_vfprintf_r+0xc90>)
1a0034e8:	f8cb 2000 	str.w	r2, [fp]
1a0034ec:	3301      	adds	r3, #1
1a0034ee:	3401      	adds	r4, #1
1a0034f0:	2201      	movs	r2, #1
1a0034f2:	2b07      	cmp	r3, #7
1a0034f4:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a0034f8:	f8cb 2004 	str.w	r2, [fp, #4]
1a0034fc:	f300 8463 	bgt.w	1a003dc6 <_vfprintf_r+0x1266>
1a003500:	f10b 0b08 	add.w	fp, fp, #8
1a003504:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003506:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003508:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a00350a:	4293      	cmp	r3, r2
1a00350c:	f280 82a5 	bge.w	1a003a5a <_vfprintf_r+0xefa>
1a003510:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003512:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003514:	f8cb 2000 	str.w	r2, [fp]
1a003518:	9a13      	ldr	r2, [sp, #76]	; 0x4c
1a00351a:	f8cb 2004 	str.w	r2, [fp, #4]
1a00351e:	3301      	adds	r3, #1
1a003520:	4414      	add	r4, r2
1a003522:	2b07      	cmp	r3, #7
1a003524:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003528:	f300 83ec 	bgt.w	1a003d04 <_vfprintf_r+0x11a4>
1a00352c:	f10b 0b08 	add.w	fp, fp, #8
1a003530:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a003532:	1e5d      	subs	r5, r3, #1
1a003534:	2d00      	cmp	r5, #0
1a003536:	f77f ada8 	ble.w	1a00308a <_vfprintf_r+0x52a>
1a00353a:	2d10      	cmp	r5, #16
1a00353c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a00353e:	4bad      	ldr	r3, [pc, #692]	; (1a0037f4 <_vfprintf_r+0xc94>)
1a003540:	f340 844e 	ble.w	1a003de0 <_vfprintf_r+0x1280>
1a003544:	2610      	movs	r6, #16
1a003546:	9f05      	ldr	r7, [sp, #20]
1a003548:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a00354c:	4699      	mov	r9, r3
1a00354e:	e005      	b.n	1a00355c <_vfprintf_r+0x9fc>
1a003550:	f10b 0b08 	add.w	fp, fp, #8
1a003554:	3d10      	subs	r5, #16
1a003556:	2d10      	cmp	r5, #16
1a003558:	f340 8441 	ble.w	1a003dde <_vfprintf_r+0x127e>
1a00355c:	3201      	adds	r2, #1
1a00355e:	3410      	adds	r4, #16
1a003560:	2a07      	cmp	r2, #7
1a003562:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003566:	e9cb 9600 	strd	r9, r6, [fp]
1a00356a:	ddf1      	ble.n	1a003550 <_vfprintf_r+0x9f0>
1a00356c:	aa28      	add	r2, sp, #160	; 0xa0
1a00356e:	4641      	mov	r1, r8
1a003570:	4638      	mov	r0, r7
1a003572:	f003 feeb 	bl	1a00734c <__sprint_r>
1a003576:	2800      	cmp	r0, #0
1a003578:	f040 8423 	bne.w	1a003dc2 <_vfprintf_r+0x1262>
1a00357c:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a003580:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003584:	e7e6      	b.n	1a003554 <_vfprintf_r+0x9f4>
1a003586:	9b06      	ldr	r3, [sp, #24]
1a003588:	9a03      	ldr	r2, [sp, #12]
1a00358a:	1a9d      	subs	r5, r3, r2
1a00358c:	2d00      	cmp	r5, #0
1a00358e:	f77f ad65 	ble.w	1a00305c <_vfprintf_r+0x4fc>
1a003592:	2d10      	cmp	r5, #16
1a003594:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003596:	4b97      	ldr	r3, [pc, #604]	; (1a0037f4 <_vfprintf_r+0xc94>)
1a003598:	dd28      	ble.n	1a0035ec <_vfprintf_r+0xa8c>
1a00359a:	960a      	str	r6, [sp, #40]	; 0x28
1a00359c:	4659      	mov	r1, fp
1a00359e:	4620      	mov	r0, r4
1a0035a0:	46bb      	mov	fp, r7
1a0035a2:	9c05      	ldr	r4, [sp, #20]
1a0035a4:	9e07      	ldr	r6, [sp, #28]
1a0035a6:	461f      	mov	r7, r3
1a0035a8:	e004      	b.n	1a0035b4 <_vfprintf_r+0xa54>
1a0035aa:	3d10      	subs	r5, #16
1a0035ac:	2d10      	cmp	r5, #16
1a0035ae:	f101 0108 	add.w	r1, r1, #8
1a0035b2:	dd16      	ble.n	1a0035e2 <_vfprintf_r+0xa82>
1a0035b4:	3201      	adds	r2, #1
1a0035b6:	3010      	adds	r0, #16
1a0035b8:	2310      	movs	r3, #16
1a0035ba:	2a07      	cmp	r2, #7
1a0035bc:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a0035c0:	600f      	str	r7, [r1, #0]
1a0035c2:	604b      	str	r3, [r1, #4]
1a0035c4:	ddf1      	ble.n	1a0035aa <_vfprintf_r+0xa4a>
1a0035c6:	aa28      	add	r2, sp, #160	; 0xa0
1a0035c8:	4631      	mov	r1, r6
1a0035ca:	4620      	mov	r0, r4
1a0035cc:	f003 febe 	bl	1a00734c <__sprint_r>
1a0035d0:	2800      	cmp	r0, #0
1a0035d2:	f040 80f6 	bne.w	1a0037c2 <_vfprintf_r+0xc62>
1a0035d6:	3d10      	subs	r5, #16
1a0035d8:	2d10      	cmp	r5, #16
1a0035da:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a0035de:	a92b      	add	r1, sp, #172	; 0xac
1a0035e0:	dce8      	bgt.n	1a0035b4 <_vfprintf_r+0xa54>
1a0035e2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1a0035e4:	463b      	mov	r3, r7
1a0035e6:	4604      	mov	r4, r0
1a0035e8:	465f      	mov	r7, fp
1a0035ea:	468b      	mov	fp, r1
1a0035ec:	3201      	adds	r2, #1
1a0035ee:	442c      	add	r4, r5
1a0035f0:	2a07      	cmp	r2, #7
1a0035f2:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0035f6:	e9cb 3500 	strd	r3, r5, [fp]
1a0035fa:	f300 8355 	bgt.w	1a003ca8 <_vfprintf_r+0x1148>
1a0035fe:	eba9 0506 	sub.w	r5, r9, r6
1a003602:	2d00      	cmp	r5, #0
1a003604:	f10b 0b08 	add.w	fp, fp, #8
1a003608:	f77f ad2d 	ble.w	1a003066 <_vfprintf_r+0x506>
1a00360c:	2d10      	cmp	r5, #16
1a00360e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003610:	4b78      	ldr	r3, [pc, #480]	; (1a0037f4 <_vfprintf_r+0xc94>)
1a003612:	dd29      	ble.n	1a003668 <_vfprintf_r+0xb08>
1a003614:	960a      	str	r6, [sp, #40]	; 0x28
1a003616:	4659      	mov	r1, fp
1a003618:	4620      	mov	r0, r4
1a00361a:	46bb      	mov	fp, r7
1a00361c:	f04f 0910 	mov.w	r9, #16
1a003620:	9c05      	ldr	r4, [sp, #20]
1a003622:	9e07      	ldr	r6, [sp, #28]
1a003624:	461f      	mov	r7, r3
1a003626:	e004      	b.n	1a003632 <_vfprintf_r+0xad2>
1a003628:	3d10      	subs	r5, #16
1a00362a:	2d10      	cmp	r5, #16
1a00362c:	f101 0108 	add.w	r1, r1, #8
1a003630:	dd15      	ble.n	1a00365e <_vfprintf_r+0xafe>
1a003632:	3201      	adds	r2, #1
1a003634:	3010      	adds	r0, #16
1a003636:	2a07      	cmp	r2, #7
1a003638:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a00363c:	e9c1 7900 	strd	r7, r9, [r1]
1a003640:	ddf2      	ble.n	1a003628 <_vfprintf_r+0xac8>
1a003642:	aa28      	add	r2, sp, #160	; 0xa0
1a003644:	4631      	mov	r1, r6
1a003646:	4620      	mov	r0, r4
1a003648:	f003 fe80 	bl	1a00734c <__sprint_r>
1a00364c:	2800      	cmp	r0, #0
1a00364e:	f040 80b8 	bne.w	1a0037c2 <_vfprintf_r+0xc62>
1a003652:	3d10      	subs	r5, #16
1a003654:	2d10      	cmp	r5, #16
1a003656:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a00365a:	a92b      	add	r1, sp, #172	; 0xac
1a00365c:	dce9      	bgt.n	1a003632 <_vfprintf_r+0xad2>
1a00365e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1a003660:	463b      	mov	r3, r7
1a003662:	4604      	mov	r4, r0
1a003664:	465f      	mov	r7, fp
1a003666:	468b      	mov	fp, r1
1a003668:	3201      	adds	r2, #1
1a00366a:	442c      	add	r4, r5
1a00366c:	2a07      	cmp	r2, #7
1a00366e:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003672:	e9cb 3500 	strd	r3, r5, [fp]
1a003676:	f300 81da 	bgt.w	1a003a2e <_vfprintf_r+0xece>
1a00367a:	f10b 0b08 	add.w	fp, fp, #8
1a00367e:	e4f2      	b.n	1a003066 <_vfprintf_r+0x506>
1a003680:	aa28      	add	r2, sp, #160	; 0xa0
1a003682:	9907      	ldr	r1, [sp, #28]
1a003684:	9805      	ldr	r0, [sp, #20]
1a003686:	f003 fe61 	bl	1a00734c <__sprint_r>
1a00368a:	2800      	cmp	r0, #0
1a00368c:	f43f ad11 	beq.w	1a0030b2 <_vfprintf_r+0x552>
1a003690:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a003694:	e096      	b.n	1a0037c4 <_vfprintf_r+0xc64>
1a003696:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003698:	9915      	ldr	r1, [sp, #84]	; 0x54
1a00369a:	f8cb 1000 	str.w	r1, [fp]
1a00369e:	9913      	ldr	r1, [sp, #76]	; 0x4c
1a0036a0:	f8cb 1004 	str.w	r1, [fp, #4]
1a0036a4:	3201      	adds	r2, #1
1a0036a6:	440c      	add	r4, r1
1a0036a8:	2a07      	cmp	r2, #7
1a0036aa:	942a      	str	r4, [sp, #168]	; 0xa8
1a0036ac:	9229      	str	r2, [sp, #164]	; 0xa4
1a0036ae:	f300 84e1 	bgt.w	1a004074 <_vfprintf_r+0x1514>
1a0036b2:	f10b 0b08 	add.w	fp, fp, #8
1a0036b6:	2b00      	cmp	r3, #0
1a0036b8:	f2c0 86a2 	blt.w	1a004400 <_vfprintf_r+0x18a0>
1a0036bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0036be:	3201      	adds	r2, #1
1a0036c0:	441c      	add	r4, r3
1a0036c2:	2a07      	cmp	r2, #7
1a0036c4:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0036c8:	e9cb 7300 	strd	r7, r3, [fp]
1a0036cc:	f77f acdb 	ble.w	1a003086 <_vfprintf_r+0x526>
1a0036d0:	aa28      	add	r2, sp, #160	; 0xa0
1a0036d2:	9907      	ldr	r1, [sp, #28]
1a0036d4:	9805      	ldr	r0, [sp, #20]
1a0036d6:	f003 fe39 	bl	1a00734c <__sprint_r>
1a0036da:	2800      	cmp	r0, #0
1a0036dc:	d1d8      	bne.n	1a003690 <_vfprintf_r+0xb30>
1a0036de:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0036e0:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0036e4:	e4d1      	b.n	1a00308a <_vfprintf_r+0x52a>
1a0036e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0036e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0036ea:	2a01      	cmp	r2, #1
1a0036ec:	f104 0401 	add.w	r4, r4, #1
1a0036f0:	f103 0501 	add.w	r5, r3, #1
1a0036f4:	f10b 0608 	add.w	r6, fp, #8
1a0036f8:	f340 8158 	ble.w	1a0039ac <_vfprintf_r+0xe4c>
1a0036fc:	2301      	movs	r3, #1
1a0036fe:	2d07      	cmp	r5, #7
1a003700:	f8cb 7000 	str.w	r7, [fp]
1a003704:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
1a003708:	f8cb 3004 	str.w	r3, [fp, #4]
1a00370c:	f300 832a 	bgt.w	1a003d64 <_vfprintf_r+0x1204>
1a003710:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a003712:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003714:	1c69      	adds	r1, r5, #1
1a003716:	441c      	add	r4, r3
1a003718:	2907      	cmp	r1, #7
1a00371a:	910b      	str	r1, [sp, #44]	; 0x2c
1a00371c:	e9cd 1429 	strd	r1, r4, [sp, #164]	; 0xa4
1a003720:	e9c6 2300 	strd	r2, r3, [r6]
1a003724:	f300 832a 	bgt.w	1a003d7c <_vfprintf_r+0x121c>
1a003728:	3608      	adds	r6, #8
1a00372a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a00372c:	9d12      	ldr	r5, [sp, #72]	; 0x48
1a00372e:	f102 0901 	add.w	r9, r2, #1
1a003732:	2300      	movs	r3, #0
1a003734:	2200      	movs	r2, #0
1a003736:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a00373a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
1a00373e:	f106 0b08 	add.w	fp, r6, #8
1a003742:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
1a003746:	f7fe fea9 	bl	1a00249c <__aeabi_dcmpeq>
1a00374a:	2800      	cmp	r0, #0
1a00374c:	f040 8141 	bne.w	1a0039d2 <_vfprintf_r+0xe72>
1a003750:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003752:	f8c6 8004 	str.w	r8, [r6, #4]
1a003756:	3701      	adds	r7, #1
1a003758:	4444      	add	r4, r8
1a00375a:	2b07      	cmp	r3, #7
1a00375c:	6037      	str	r7, [r6, #0]
1a00375e:	942a      	str	r4, [sp, #168]	; 0xa8
1a003760:	9329      	str	r3, [sp, #164]	; 0xa4
1a003762:	f300 82bf 	bgt.w	1a003ce4 <_vfprintf_r+0x1184>
1a003766:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a003768:	f106 0310 	add.w	r3, r6, #16
1a00376c:	3202      	adds	r2, #2
1a00376e:	465e      	mov	r6, fp
1a003770:	920a      	str	r2, [sp, #40]	; 0x28
1a003772:	469b      	mov	fp, r3
1a003774:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a003776:	6072      	str	r2, [r6, #4]
1a003778:	4414      	add	r4, r2
1a00377a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a00377c:	942a      	str	r4, [sp, #168]	; 0xa8
1a00377e:	ab24      	add	r3, sp, #144	; 0x90
1a003780:	2a07      	cmp	r2, #7
1a003782:	9229      	str	r2, [sp, #164]	; 0xa4
1a003784:	6033      	str	r3, [r6, #0]
1a003786:	f77f ac80 	ble.w	1a00308a <_vfprintf_r+0x52a>
1a00378a:	e7a1      	b.n	1a0036d0 <_vfprintf_r+0xb70>
1a00378c:	9e02      	ldr	r6, [sp, #8]
1a00378e:	f7ff bbf4 	b.w	1a002f7a <_vfprintf_r+0x41a>
1a003792:	aa28      	add	r2, sp, #160	; 0xa0
1a003794:	9907      	ldr	r1, [sp, #28]
1a003796:	9805      	ldr	r0, [sp, #20]
1a003798:	f003 fdd8 	bl	1a00734c <__sprint_r>
1a00379c:	2800      	cmp	r0, #0
1a00379e:	f47f af77 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0037a2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0037a4:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0037a8:	e444      	b.n	1a003034 <_vfprintf_r+0x4d4>
1a0037aa:	aa28      	add	r2, sp, #160	; 0xa0
1a0037ac:	9907      	ldr	r1, [sp, #28]
1a0037ae:	9805      	ldr	r0, [sp, #20]
1a0037b0:	f003 fdcc 	bl	1a00734c <__sprint_r>
1a0037b4:	2800      	cmp	r0, #0
1a0037b6:	f47f af6b 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0037ba:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0037bc:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0037c0:	e448      	b.n	1a003054 <_vfprintf_r+0x4f4>
1a0037c2:	46b1      	mov	r9, r6
1a0037c4:	9909      	ldr	r1, [sp, #36]	; 0x24
1a0037c6:	b111      	cbz	r1, 1a0037ce <_vfprintf_r+0xc6e>
1a0037c8:	9805      	ldr	r0, [sp, #20]
1a0037ca:	f002 f963 	bl	1a005a94 <_free_r>
1a0037ce:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
1a0037d2:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a0037d6:	07d4      	lsls	r4, r2, #31
1a0037d8:	d402      	bmi.n	1a0037e0 <_vfprintf_r+0xc80>
1a0037da:	0598      	lsls	r0, r3, #22
1a0037dc:	f140 82db 	bpl.w	1a003d96 <_vfprintf_r+0x1236>
1a0037e0:	0659      	lsls	r1, r3, #25
1a0037e2:	f100 8640 	bmi.w	1a004466 <_vfprintf_r+0x1906>
1a0037e6:	9804      	ldr	r0, [sp, #16]
1a0037e8:	b055      	add	sp, #340	; 0x154
1a0037ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0037ee:	bf00      	nop
1a0037f0:	1a007a04 	.word	0x1a007a04
1a0037f4:	1a007a18 	.word	0x1a007a18
1a0037f8:	2d10      	cmp	r5, #16
1a0037fa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0037fc:	dd21      	ble.n	1a003842 <_vfprintf_r+0xce2>
1a0037fe:	2610      	movs	r6, #16
1a003800:	9f05      	ldr	r7, [sp, #20]
1a003802:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a003806:	e004      	b.n	1a003812 <_vfprintf_r+0xcb2>
1a003808:	3d10      	subs	r5, #16
1a00380a:	2d10      	cmp	r5, #16
1a00380c:	f10b 0b08 	add.w	fp, fp, #8
1a003810:	dd17      	ble.n	1a003842 <_vfprintf_r+0xce2>
1a003812:	3301      	adds	r3, #1
1a003814:	4ab3      	ldr	r2, [pc, #716]	; (1a003ae4 <_vfprintf_r+0xf84>)
1a003816:	3410      	adds	r4, #16
1a003818:	2b07      	cmp	r3, #7
1a00381a:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a00381e:	e9cb 2600 	strd	r2, r6, [fp]
1a003822:	ddf1      	ble.n	1a003808 <_vfprintf_r+0xca8>
1a003824:	aa28      	add	r2, sp, #160	; 0xa0
1a003826:	4641      	mov	r1, r8
1a003828:	4638      	mov	r0, r7
1a00382a:	f003 fd8f 	bl	1a00734c <__sprint_r>
1a00382e:	2800      	cmp	r0, #0
1a003830:	f040 82c7 	bne.w	1a003dc2 <_vfprintf_r+0x1262>
1a003834:	3d10      	subs	r5, #16
1a003836:	2d10      	cmp	r5, #16
1a003838:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a00383c:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003840:	dce7      	bgt.n	1a003812 <_vfprintf_r+0xcb2>
1a003842:	3301      	adds	r3, #1
1a003844:	4aa7      	ldr	r2, [pc, #668]	; (1a003ae4 <_vfprintf_r+0xf84>)
1a003846:	442c      	add	r4, r5
1a003848:	2b07      	cmp	r3, #7
1a00384a:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a00384e:	e9cb 2500 	strd	r2, r5, [fp]
1a003852:	f77f ac23 	ble.w	1a00309c <_vfprintf_r+0x53c>
1a003856:	aa28      	add	r2, sp, #160	; 0xa0
1a003858:	9907      	ldr	r1, [sp, #28]
1a00385a:	9805      	ldr	r0, [sp, #20]
1a00385c:	f003 fd76 	bl	1a00734c <__sprint_r>
1a003860:	2800      	cmp	r0, #0
1a003862:	f47f af15 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003866:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003868:	e418      	b.n	1a00309c <_vfprintf_r+0x53c>
1a00386a:	2b01      	cmp	r3, #1
1a00386c:	f000 8423 	beq.w	1a0040b6 <_vfprintf_r+0x1556>
1a003870:	2b02      	cmp	r3, #2
1a003872:	9e02      	ldr	r6, [sp, #8]
1a003874:	f47f ab87 	bne.w	1a002f86 <_vfprintf_r+0x426>
1a003878:	9814      	ldr	r0, [sp, #80]	; 0x50
1a00387a:	af54      	add	r7, sp, #336	; 0x150
1a00387c:	0923      	lsrs	r3, r4, #4
1a00387e:	f004 010f 	and.w	r1, r4, #15
1a003882:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
1a003886:	092a      	lsrs	r2, r5, #4
1a003888:	461c      	mov	r4, r3
1a00388a:	4615      	mov	r5, r2
1a00388c:	5c43      	ldrb	r3, [r0, r1]
1a00388e:	f807 3d01 	strb.w	r3, [r7, #-1]!
1a003892:	ea54 0305 	orrs.w	r3, r4, r5
1a003896:	d1f1      	bne.n	1a00387c <_vfprintf_r+0xd1c>
1a003898:	ab54      	add	r3, sp, #336	; 0x150
1a00389a:	9602      	str	r6, [sp, #8]
1a00389c:	1bde      	subs	r6, r3, r7
1a00389e:	e5c1      	b.n	1a003424 <_vfprintf_r+0x8c4>
1a0038a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0038a2:	2b00      	cmp	r3, #0
1a0038a4:	f340 80df 	ble.w	1a003a66 <_vfprintf_r+0xf06>
1a0038a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0038aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0038ac:	4293      	cmp	r3, r2
1a0038ae:	bfa8      	it	ge
1a0038b0:	4613      	movge	r3, r2
1a0038b2:	2b00      	cmp	r3, #0
1a0038b4:	461d      	mov	r5, r3
1a0038b6:	dd0d      	ble.n	1a0038d4 <_vfprintf_r+0xd74>
1a0038b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0038ba:	f8cb 7000 	str.w	r7, [fp]
1a0038be:	3301      	adds	r3, #1
1a0038c0:	442c      	add	r4, r5
1a0038c2:	2b07      	cmp	r3, #7
1a0038c4:	942a      	str	r4, [sp, #168]	; 0xa8
1a0038c6:	f8cb 5004 	str.w	r5, [fp, #4]
1a0038ca:	9329      	str	r3, [sp, #164]	; 0xa4
1a0038cc:	f300 84fe 	bgt.w	1a0042cc <_vfprintf_r+0x176c>
1a0038d0:	f10b 0b08 	add.w	fp, fp, #8
1a0038d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0038d6:	2d00      	cmp	r5, #0
1a0038d8:	bfa8      	it	ge
1a0038da:	1b5b      	subge	r3, r3, r5
1a0038dc:	2b00      	cmp	r3, #0
1a0038de:	461d      	mov	r5, r3
1a0038e0:	f300 8290 	bgt.w	1a003e04 <_vfprintf_r+0x12a4>
1a0038e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0038e6:	443b      	add	r3, r7
1a0038e8:	4699      	mov	r9, r3
1a0038ea:	9b02      	ldr	r3, [sp, #8]
1a0038ec:	0558      	lsls	r0, r3, #21
1a0038ee:	f100 8413 	bmi.w	1a004118 <_vfprintf_r+0x15b8>
1a0038f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0038f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0038f6:	4293      	cmp	r3, r2
1a0038f8:	db03      	blt.n	1a003902 <_vfprintf_r+0xda2>
1a0038fa:	9a02      	ldr	r2, [sp, #8]
1a0038fc:	07d1      	lsls	r1, r2, #31
1a0038fe:	f140 82f7 	bpl.w	1a003ef0 <_vfprintf_r+0x1390>
1a003902:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003904:	9915      	ldr	r1, [sp, #84]	; 0x54
1a003906:	f8cb 1000 	str.w	r1, [fp]
1a00390a:	9913      	ldr	r1, [sp, #76]	; 0x4c
1a00390c:	f8cb 1004 	str.w	r1, [fp, #4]
1a003910:	3201      	adds	r2, #1
1a003912:	440c      	add	r4, r1
1a003914:	2a07      	cmp	r2, #7
1a003916:	942a      	str	r4, [sp, #168]	; 0xa8
1a003918:	9229      	str	r2, [sp, #164]	; 0xa4
1a00391a:	f300 8523 	bgt.w	1a004364 <_vfprintf_r+0x1804>
1a00391e:	f10b 0b08 	add.w	fp, fp, #8
1a003922:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003924:	18bd      	adds	r5, r7, r2
1a003926:	eba5 0509 	sub.w	r5, r5, r9
1a00392a:	1ad3      	subs	r3, r2, r3
1a00392c:	429d      	cmp	r5, r3
1a00392e:	bfa8      	it	ge
1a003930:	461d      	movge	r5, r3
1a003932:	2d00      	cmp	r5, #0
1a003934:	dd0d      	ble.n	1a003952 <_vfprintf_r+0xdf2>
1a003936:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003938:	f8cb 9000 	str.w	r9, [fp]
1a00393c:	3201      	adds	r2, #1
1a00393e:	442c      	add	r4, r5
1a003940:	2a07      	cmp	r2, #7
1a003942:	942a      	str	r4, [sp, #168]	; 0xa8
1a003944:	f8cb 5004 	str.w	r5, [fp, #4]
1a003948:	9229      	str	r2, [sp, #164]	; 0xa4
1a00394a:	f300 8546 	bgt.w	1a0043da <_vfprintf_r+0x187a>
1a00394e:	f10b 0b08 	add.w	fp, fp, #8
1a003952:	2d00      	cmp	r5, #0
1a003954:	bfac      	ite	ge
1a003956:	1b5d      	subge	r5, r3, r5
1a003958:	461d      	movlt	r5, r3
1a00395a:	2d00      	cmp	r5, #0
1a00395c:	f77f ab95 	ble.w	1a00308a <_vfprintf_r+0x52a>
1a003960:	2d10      	cmp	r5, #16
1a003962:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003964:	4b60      	ldr	r3, [pc, #384]	; (1a003ae8 <_vfprintf_r+0xf88>)
1a003966:	f340 823b 	ble.w	1a003de0 <_vfprintf_r+0x1280>
1a00396a:	2610      	movs	r6, #16
1a00396c:	9f05      	ldr	r7, [sp, #20]
1a00396e:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a003972:	4699      	mov	r9, r3
1a003974:	e005      	b.n	1a003982 <_vfprintf_r+0xe22>
1a003976:	f10b 0b08 	add.w	fp, fp, #8
1a00397a:	3d10      	subs	r5, #16
1a00397c:	2d10      	cmp	r5, #16
1a00397e:	f340 822e 	ble.w	1a003dde <_vfprintf_r+0x127e>
1a003982:	3201      	adds	r2, #1
1a003984:	3410      	adds	r4, #16
1a003986:	2a07      	cmp	r2, #7
1a003988:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00398c:	e9cb 9600 	strd	r9, r6, [fp]
1a003990:	ddf1      	ble.n	1a003976 <_vfprintf_r+0xe16>
1a003992:	aa28      	add	r2, sp, #160	; 0xa0
1a003994:	4641      	mov	r1, r8
1a003996:	4638      	mov	r0, r7
1a003998:	f003 fcd8 	bl	1a00734c <__sprint_r>
1a00399c:	2800      	cmp	r0, #0
1a00399e:	f040 8210 	bne.w	1a003dc2 <_vfprintf_r+0x1262>
1a0039a2:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a0039a6:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0039aa:	e7e6      	b.n	1a00397a <_vfprintf_r+0xe1a>
1a0039ac:	9a02      	ldr	r2, [sp, #8]
1a0039ae:	07d2      	lsls	r2, r2, #31
1a0039b0:	f53f aea4 	bmi.w	1a0036fc <_vfprintf_r+0xb9c>
1a0039b4:	2201      	movs	r2, #1
1a0039b6:	2d07      	cmp	r5, #7
1a0039b8:	f8cb 7000 	str.w	r7, [fp]
1a0039bc:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
1a0039c0:	f8cb 2004 	str.w	r2, [fp, #4]
1a0039c4:	f300 818e 	bgt.w	1a003ce4 <_vfprintf_r+0x1184>
1a0039c8:	3302      	adds	r3, #2
1a0039ca:	930a      	str	r3, [sp, #40]	; 0x28
1a0039cc:	f10b 0b10 	add.w	fp, fp, #16
1a0039d0:	e6d0      	b.n	1a003774 <_vfprintf_r+0xc14>
1a0039d2:	f1b8 0f00 	cmp.w	r8, #0
1a0039d6:	f77f aecd 	ble.w	1a003774 <_vfprintf_r+0xc14>
1a0039da:	f1b8 0f10 	cmp.w	r8, #16
1a0039de:	4b42      	ldr	r3, [pc, #264]	; (1a003ae8 <_vfprintf_r+0xf88>)
1a0039e0:	f340 8635 	ble.w	1a00464e <_vfprintf_r+0x1aee>
1a0039e4:	461a      	mov	r2, r3
1a0039e6:	464d      	mov	r5, r9
1a0039e8:	4623      	mov	r3, r4
1a0039ea:	2710      	movs	r7, #16
1a0039ec:	f8dd b01c 	ldr.w	fp, [sp, #28]
1a0039f0:	f8dd 9014 	ldr.w	r9, [sp, #20]
1a0039f4:	4614      	mov	r4, r2
1a0039f6:	e007      	b.n	1a003a08 <_vfprintf_r+0xea8>
1a0039f8:	3608      	adds	r6, #8
1a0039fa:	f1a8 0810 	sub.w	r8, r8, #16
1a0039fe:	f1b8 0f10 	cmp.w	r8, #16
1a003a02:	f340 815e 	ble.w	1a003cc2 <_vfprintf_r+0x1162>
1a003a06:	3501      	adds	r5, #1
1a003a08:	3310      	adds	r3, #16
1a003a0a:	2d07      	cmp	r5, #7
1a003a0c:	e9cd 5329 	strd	r5, r3, [sp, #164]	; 0xa4
1a003a10:	e9c6 4700 	strd	r4, r7, [r6]
1a003a14:	ddf0      	ble.n	1a0039f8 <_vfprintf_r+0xe98>
1a003a16:	aa28      	add	r2, sp, #160	; 0xa0
1a003a18:	4659      	mov	r1, fp
1a003a1a:	4648      	mov	r0, r9
1a003a1c:	f003 fc96 	bl	1a00734c <__sprint_r>
1a003a20:	2800      	cmp	r0, #0
1a003a22:	f040 821d 	bne.w	1a003e60 <_vfprintf_r+0x1300>
1a003a26:	e9dd 5329 	ldrd	r5, r3, [sp, #164]	; 0xa4
1a003a2a:	ae2b      	add	r6, sp, #172	; 0xac
1a003a2c:	e7e5      	b.n	1a0039fa <_vfprintf_r+0xe9a>
1a003a2e:	aa28      	add	r2, sp, #160	; 0xa0
1a003a30:	9907      	ldr	r1, [sp, #28]
1a003a32:	9805      	ldr	r0, [sp, #20]
1a003a34:	f003 fc8a 	bl	1a00734c <__sprint_r>
1a003a38:	2800      	cmp	r0, #0
1a003a3a:	f47f ae29 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003a3e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003a40:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003a44:	f7ff bb0f 	b.w	1a003066 <_vfprintf_r+0x506>
1a003a48:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a003a4c:	f002 face 	bl	1a005fec <__retarget_lock_acquire_recursive>
1a003a50:	f9b9 200c 	ldrsh.w	r2, [r9, #12]
1a003a54:	b293      	uxth	r3, r2
1a003a56:	f7ff b8a3 	b.w	1a002ba0 <_vfprintf_r+0x40>
1a003a5a:	9b02      	ldr	r3, [sp, #8]
1a003a5c:	07dd      	lsls	r5, r3, #31
1a003a5e:	f53f ad57 	bmi.w	1a003510 <_vfprintf_r+0x9b0>
1a003a62:	f7ff bb12 	b.w	1a00308a <_vfprintf_r+0x52a>
1a003a66:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003a68:	4920      	ldr	r1, [pc, #128]	; (1a003aec <_vfprintf_r+0xf8c>)
1a003a6a:	f8cb 1000 	str.w	r1, [fp]
1a003a6e:	3201      	adds	r2, #1
1a003a70:	3401      	adds	r4, #1
1a003a72:	2101      	movs	r1, #1
1a003a74:	2a07      	cmp	r2, #7
1a003a76:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003a7a:	f8cb 1004 	str.w	r1, [fp, #4]
1a003a7e:	f300 8409 	bgt.w	1a004294 <_vfprintf_r+0x1734>
1a003a82:	f10b 0b08 	add.w	fp, fp, #8
1a003a86:	2b00      	cmp	r3, #0
1a003a88:	f47f ae05 	bne.w	1a003696 <_vfprintf_r+0xb36>
1a003a8c:	9b02      	ldr	r3, [sp, #8]
1a003a8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003a90:	f003 0301 	and.w	r3, r3, #1
1a003a94:	4313      	orrs	r3, r2
1a003a96:	f43f aaf8 	beq.w	1a00308a <_vfprintf_r+0x52a>
1a003a9a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003a9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a003a9e:	f8cb 3000 	str.w	r3, [fp]
1a003aa2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a003aa4:	f8cb 3004 	str.w	r3, [fp, #4]
1a003aa8:	3201      	adds	r2, #1
1a003aaa:	441c      	add	r4, r3
1a003aac:	2a07      	cmp	r2, #7
1a003aae:	942a      	str	r4, [sp, #168]	; 0xa8
1a003ab0:	9229      	str	r2, [sp, #164]	; 0xa4
1a003ab2:	f300 82df 	bgt.w	1a004074 <_vfprintf_r+0x1514>
1a003ab6:	f10b 0b08 	add.w	fp, fp, #8
1a003aba:	e5ff      	b.n	1a0036bc <_vfprintf_r+0xb5c>
1a003abc:	af54      	add	r7, sp, #336	; 0x150
1a003abe:	e4b1      	b.n	1a003424 <_vfprintf_r+0x8c4>
1a003ac0:	9b02      	ldr	r3, [sp, #8]
1a003ac2:	0598      	lsls	r0, r3, #22
1a003ac4:	f100 822d 	bmi.w	1a003f22 <_vfprintf_r+0x13c2>
1a003ac8:	2500      	movs	r5, #0
1a003aca:	f7ff b987 	b.w	1a002ddc <_vfprintf_r+0x27c>
1a003ace:	9904      	ldr	r1, [sp, #16]
1a003ad0:	6812      	ldr	r2, [r2, #0]
1a003ad2:	9308      	str	r3, [sp, #32]
1a003ad4:	17cd      	asrs	r5, r1, #31
1a003ad6:	4608      	mov	r0, r1
1a003ad8:	4629      	mov	r1, r5
1a003ada:	e9c2 0100 	strd	r0, r1, [r2]
1a003ade:	4657      	mov	r7, sl
1a003ae0:	f7ff baf2 	b.w	1a0030c8 <_vfprintf_r+0x568>
1a003ae4:	1a007a08 	.word	0x1a007a08
1a003ae8:	1a007a18 	.word	0x1a007a18
1a003aec:	1a007a04 	.word	0x1a007a04
1a003af0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a003af4:	4602      	mov	r2, r0
1a003af6:	460b      	mov	r3, r1
1a003af8:	f003 fde8 	bl	1a0076cc <__aeabi_dcmpun>
1a003afc:	2800      	cmp	r0, #0
1a003afe:	f040 853a 	bne.w	1a004576 <_vfprintf_r+0x1a16>
1a003b02:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
1a003b06:	f000 84d0 	beq.w	1a0044aa <_vfprintf_r+0x194a>
1a003b0a:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
1a003b0e:	f000 820c 	beq.w	1a003f2a <_vfprintf_r+0x13ca>
1a003b12:	f028 0320 	bic.w	r3, r8, #32
1a003b16:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a003b1a:	9303      	str	r3, [sp, #12]
1a003b1c:	f000 8500 	beq.w	1a004520 <_vfprintf_r+0x19c0>
1a003b20:	2b47      	cmp	r3, #71	; 0x47
1a003b22:	d104      	bne.n	1a003b2e <_vfprintf_r+0xfce>
1a003b24:	f1b9 0f00 	cmp.w	r9, #0
1a003b28:	bf08      	it	eq
1a003b2a:	f04f 0901 	moveq.w	r9, #1
1a003b2e:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
1a003b32:	9902      	ldr	r1, [sp, #8]
1a003b34:	2d00      	cmp	r5, #0
1a003b36:	f441 7280 	orr.w	r2, r1, #256	; 0x100
1a003b3a:	f2c0 8395 	blt.w	1a004268 <_vfprintf_r+0x1708>
1a003b3e:	2300      	movs	r3, #0
1a003b40:	e9cd 3109 	strd	r3, r1, [sp, #36]	; 0x24
1a003b44:	e9cd 451c 	strd	r4, r5, [sp, #112]	; 0x70
1a003b48:	931e      	str	r3, [sp, #120]	; 0x78
1a003b4a:	9202      	str	r2, [sp, #8]
1a003b4c:	9b03      	ldr	r3, [sp, #12]
1a003b4e:	2b46      	cmp	r3, #70	; 0x46
1a003b50:	f000 83df 	beq.w	1a004312 <_vfprintf_r+0x17b2>
1a003b54:	2b45      	cmp	r3, #69	; 0x45
1a003b56:	f000 84d2 	beq.w	1a0044fe <_vfprintf_r+0x199e>
1a003b5a:	aa26      	add	r2, sp, #152	; 0x98
1a003b5c:	ab23      	add	r3, sp, #140	; 0x8c
1a003b5e:	e9cd 3200 	strd	r3, r2, [sp]
1a003b62:	2102      	movs	r1, #2
1a003b64:	ab22      	add	r3, sp, #136	; 0x88
1a003b66:	464a      	mov	r2, r9
1a003b68:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a003b6c:	9805      	ldr	r0, [sp, #20]
1a003b6e:	f000 fedf 	bl	1a004930 <_dtoa_r>
1a003b72:	9b03      	ldr	r3, [sp, #12]
1a003b74:	2b47      	cmp	r3, #71	; 0x47
1a003b76:	4607      	mov	r7, r0
1a003b78:	f040 858d 	bne.w	1a004696 <_vfprintf_r+0x1b36>
1a003b7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003b7e:	07db      	lsls	r3, r3, #31
1a003b80:	f100 843b 	bmi.w	1a0043fa <_vfprintf_r+0x189a>
1a003b84:	9e26      	ldr	r6, [sp, #152]	; 0x98
1a003b86:	1bf3      	subs	r3, r6, r7
1a003b88:	9312      	str	r3, [sp, #72]	; 0x48
1a003b8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003b8c:	930e      	str	r3, [sp, #56]	; 0x38
1a003b8e:	9b03      	ldr	r3, [sp, #12]
1a003b90:	2b47      	cmp	r3, #71	; 0x47
1a003b92:	f000 8293 	beq.w	1a0040bc <_vfprintf_r+0x155c>
1a003b96:	9b03      	ldr	r3, [sp, #12]
1a003b98:	2b46      	cmp	r3, #70	; 0x46
1a003b9a:	f000 83fd 	beq.w	1a004398 <_vfprintf_r+0x1838>
1a003b9e:	9903      	ldr	r1, [sp, #12]
1a003ba0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a003ba2:	2941      	cmp	r1, #65	; 0x41
1a003ba4:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
1a003ba8:	fa5f f388 	uxtb.w	r3, r8
1a003bac:	bf03      	ittte	eq
1a003bae:	330f      	addeq	r3, #15
1a003bb0:	b2db      	uxtbeq	r3, r3
1a003bb2:	2101      	moveq	r1, #1
1a003bb4:	2100      	movne	r1, #0
1a003bb6:	2a00      	cmp	r2, #0
1a003bb8:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
1a003bbc:	bfb8      	it	lt
1a003bbe:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
1a003bc0:	9222      	str	r2, [sp, #136]	; 0x88
1a003bc2:	bfb6      	itet	lt
1a003bc4:	f1c3 0201 	rsblt	r2, r3, #1
1a003bc8:	232b      	movge	r3, #43	; 0x2b
1a003bca:	232d      	movlt	r3, #45	; 0x2d
1a003bcc:	2a09      	cmp	r2, #9
1a003bce:	f88d 3091 	strb.w	r3, [sp, #145]	; 0x91
1a003bd2:	f340 84c1 	ble.w	1a004558 <_vfprintf_r+0x19f8>
1a003bd6:	f10d 049f 	add.w	r4, sp, #159	; 0x9f
1a003bda:	4620      	mov	r0, r4
1a003bdc:	4dbe      	ldr	r5, [pc, #760]	; (1a003ed8 <_vfprintf_r+0x1378>)
1a003bde:	e001      	b.n	1a003be4 <_vfprintf_r+0x1084>
1a003be0:	4608      	mov	r0, r1
1a003be2:	461a      	mov	r2, r3
1a003be4:	fb85 3102 	smull	r3, r1, r5, r2
1a003be8:	17d3      	asrs	r3, r2, #31
1a003bea:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
1a003bee:	eb03 0183 	add.w	r1, r3, r3, lsl #2
1a003bf2:	eba2 0141 	sub.w	r1, r2, r1, lsl #1
1a003bf6:	3130      	adds	r1, #48	; 0x30
1a003bf8:	2a63      	cmp	r2, #99	; 0x63
1a003bfa:	f800 1c01 	strb.w	r1, [r0, #-1]
1a003bfe:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
1a003c02:	dced      	bgt.n	1a003be0 <_vfprintf_r+0x1080>
1a003c04:	3330      	adds	r3, #48	; 0x30
1a003c06:	1e82      	subs	r2, r0, #2
1a003c08:	b2db      	uxtb	r3, r3
1a003c0a:	4294      	cmp	r4, r2
1a003c0c:	f801 3c01 	strb.w	r3, [r1, #-1]
1a003c10:	f240 8544 	bls.w	1a00469c <_vfprintf_r+0x1b3c>
1a003c14:	f10d 0292 	add.w	r2, sp, #146	; 0x92
1a003c18:	e001      	b.n	1a003c1e <_vfprintf_r+0x10be>
1a003c1a:	f811 3b01 	ldrb.w	r3, [r1], #1
1a003c1e:	f802 3b01 	strb.w	r3, [r2], #1
1a003c22:	42a1      	cmp	r1, r4
1a003c24:	d1f9      	bne.n	1a003c1a <_vfprintf_r+0x10ba>
1a003c26:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
1a003c2a:	f10d 0292 	add.w	r2, sp, #146	; 0x92
1a003c2e:	1a1b      	subs	r3, r3, r0
1a003c30:	4413      	add	r3, r2
1a003c32:	aa24      	add	r2, sp, #144	; 0x90
1a003c34:	1a9b      	subs	r3, r3, r2
1a003c36:	9316      	str	r3, [sp, #88]	; 0x58
1a003c38:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a003c3a:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a003c3c:	2b01      	cmp	r3, #1
1a003c3e:	eb03 0602 	add.w	r6, r3, r2
1a003c42:	f340 84ee 	ble.w	1a004622 <_vfprintf_r+0x1ac2>
1a003c46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a003c48:	441e      	add	r6, r3
1a003c4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003c4c:	2200      	movs	r2, #0
1a003c4e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
1a003c52:	f443 7380 	orr.w	r3, r3, #256	; 0x100
1a003c56:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
1a003c5a:	9302      	str	r3, [sp, #8]
1a003c5c:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a003c60:	920c      	str	r2, [sp, #48]	; 0x30
1a003c62:	9303      	str	r3, [sp, #12]
1a003c64:	9b1e      	ldr	r3, [sp, #120]	; 0x78
1a003c66:	2b00      	cmp	r3, #0
1a003c68:	f040 824f 	bne.w	1a00410a <_vfprintf_r+0x15aa>
1a003c6c:	4699      	mov	r9, r3
1a003c6e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003c72:	f7ff b94a 	b.w	1a002f0a <_vfprintf_r+0x3aa>
1a003c76:	9b08      	ldr	r3, [sp, #32]
1a003c78:	1d1a      	adds	r2, r3, #4
1a003c7a:	9b02      	ldr	r3, [sp, #8]
1a003c7c:	06d9      	lsls	r1, r3, #27
1a003c7e:	f100 8504 	bmi.w	1a00468a <_vfprintf_r+0x1b2a>
1a003c82:	9e02      	ldr	r6, [sp, #8]
1a003c84:	4633      	mov	r3, r6
1a003c86:	065b      	lsls	r3, r3, #25
1a003c88:	f140 80ec 	bpl.w	1a003e64 <_vfprintf_r+0x1304>
1a003c8c:	9b08      	ldr	r3, [sp, #32]
1a003c8e:	9208      	str	r2, [sp, #32]
1a003c90:	f9b3 4000 	ldrsh.w	r4, [r3]
1a003c94:	17e5      	asrs	r5, r4, #31
1a003c96:	4622      	mov	r2, r4
1a003c98:	462b      	mov	r3, r5
1a003c9a:	f7ff b8eb 	b.w	1a002e74 <_vfprintf_r+0x314>
1a003c9e:	4252      	negs	r2, r2
1a003ca0:	9206      	str	r2, [sp, #24]
1a003ca2:	9308      	str	r3, [sp, #32]
1a003ca4:	f7ff b8af 	b.w	1a002e06 <_vfprintf_r+0x2a6>
1a003ca8:	aa28      	add	r2, sp, #160	; 0xa0
1a003caa:	9907      	ldr	r1, [sp, #28]
1a003cac:	9805      	ldr	r0, [sp, #20]
1a003cae:	f003 fb4d 	bl	1a00734c <__sprint_r>
1a003cb2:	2800      	cmp	r0, #0
1a003cb4:	f47f acec 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003cb8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003cba:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003cbe:	f7ff b9cd 	b.w	1a00305c <_vfprintf_r+0x4fc>
1a003cc2:	4622      	mov	r2, r4
1a003cc4:	461c      	mov	r4, r3
1a003cc6:	4613      	mov	r3, r2
1a003cc8:	462a      	mov	r2, r5
1a003cca:	3201      	adds	r2, #1
1a003ccc:	920a      	str	r2, [sp, #40]	; 0x28
1a003cce:	f106 0208 	add.w	r2, r6, #8
1a003cd2:	e9c6 3800 	strd	r3, r8, [r6]
1a003cd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003cd8:	9329      	str	r3, [sp, #164]	; 0xa4
1a003cda:	4444      	add	r4, r8
1a003cdc:	2b07      	cmp	r3, #7
1a003cde:	942a      	str	r4, [sp, #168]	; 0xa8
1a003ce0:	f340 8100 	ble.w	1a003ee4 <_vfprintf_r+0x1384>
1a003ce4:	aa28      	add	r2, sp, #160	; 0xa0
1a003ce6:	9907      	ldr	r1, [sp, #28]
1a003ce8:	9805      	ldr	r0, [sp, #20]
1a003cea:	f003 fb2f 	bl	1a00734c <__sprint_r>
1a003cee:	2800      	cmp	r0, #0
1a003cf0:	f47f acce 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003cf4:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a003cf8:	3301      	adds	r3, #1
1a003cfa:	930a      	str	r3, [sp, #40]	; 0x28
1a003cfc:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003d00:	ae2b      	add	r6, sp, #172	; 0xac
1a003d02:	e537      	b.n	1a003774 <_vfprintf_r+0xc14>
1a003d04:	aa28      	add	r2, sp, #160	; 0xa0
1a003d06:	9907      	ldr	r1, [sp, #28]
1a003d08:	9805      	ldr	r0, [sp, #20]
1a003d0a:	f003 fb1f 	bl	1a00734c <__sprint_r>
1a003d0e:	2800      	cmp	r0, #0
1a003d10:	f47f acbe 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003d14:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003d16:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003d1a:	e409      	b.n	1a003530 <_vfprintf_r+0x9d0>
1a003d1c:	f043 0320 	orr.w	r3, r3, #32
1a003d20:	f89a 8001 	ldrb.w	r8, [sl, #1]
1a003d24:	9302      	str	r3, [sp, #8]
1a003d26:	f10a 0a01 	add.w	sl, sl, #1
1a003d2a:	f7fe bf9d 	b.w	1a002c68 <_vfprintf_r+0x108>
1a003d2e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
1a003d32:	f89a 8001 	ldrb.w	r8, [sl, #1]
1a003d36:	9302      	str	r3, [sp, #8]
1a003d38:	f10a 0a01 	add.w	sl, sl, #1
1a003d3c:	f7fe bf94 	b.w	1a002c68 <_vfprintf_r+0x108>
1a003d40:	464e      	mov	r6, r9
1a003d42:	2e06      	cmp	r6, #6
1a003d44:	bf28      	it	cs
1a003d46:	2606      	movcs	r6, #6
1a003d48:	46b9      	mov	r9, r7
1a003d4a:	970c      	str	r7, [sp, #48]	; 0x30
1a003d4c:	e9cd 770e 	strd	r7, r7, [sp, #56]	; 0x38
1a003d50:	9709      	str	r7, [sp, #36]	; 0x24
1a003d52:	463a      	mov	r2, r7
1a003d54:	9603      	str	r6, [sp, #12]
1a003d56:	9408      	str	r4, [sp, #32]
1a003d58:	4f60      	ldr	r7, [pc, #384]	; (1a003edc <_vfprintf_r+0x137c>)
1a003d5a:	f7ff b8d6 	b.w	1a002f0a <_vfprintf_r+0x3aa>
1a003d5e:	463c      	mov	r4, r7
1a003d60:	f7fe bf75 	b.w	1a002c4e <_vfprintf_r+0xee>
1a003d64:	aa28      	add	r2, sp, #160	; 0xa0
1a003d66:	9907      	ldr	r1, [sp, #28]
1a003d68:	9805      	ldr	r0, [sp, #20]
1a003d6a:	f003 faef 	bl	1a00734c <__sprint_r>
1a003d6e:	2800      	cmp	r0, #0
1a003d70:	f47f ac8e 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003d74:	e9dd 5429 	ldrd	r5, r4, [sp, #164]	; 0xa4
1a003d78:	ae2b      	add	r6, sp, #172	; 0xac
1a003d7a:	e4c9      	b.n	1a003710 <_vfprintf_r+0xbb0>
1a003d7c:	aa28      	add	r2, sp, #160	; 0xa0
1a003d7e:	9907      	ldr	r1, [sp, #28]
1a003d80:	9805      	ldr	r0, [sp, #20]
1a003d82:	f003 fae3 	bl	1a00734c <__sprint_r>
1a003d86:	2800      	cmp	r0, #0
1a003d88:	f47f ac82 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003d8c:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a003d90:	ae2b      	add	r6, sp, #172	; 0xac
1a003d92:	930b      	str	r3, [sp, #44]	; 0x2c
1a003d94:	e4c9      	b.n	1a00372a <_vfprintf_r+0xbca>
1a003d96:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a003d9a:	f002 f929 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a003d9e:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a003da2:	e51d      	b.n	1a0037e0 <_vfprintf_r+0xc80>
1a003da4:	aa28      	add	r2, sp, #160	; 0xa0
1a003da6:	9907      	ldr	r1, [sp, #28]
1a003da8:	9805      	ldr	r0, [sp, #20]
1a003daa:	f003 facf 	bl	1a00734c <__sprint_r>
1a003dae:	2800      	cmp	r0, #0
1a003db0:	f47f ac6e 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003db4:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003db8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003dba:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003dbe:	f7ff b929 	b.w	1a003014 <_vfprintf_r+0x4b4>
1a003dc2:	46c1      	mov	r9, r8
1a003dc4:	e4fe      	b.n	1a0037c4 <_vfprintf_r+0xc64>
1a003dc6:	aa28      	add	r2, sp, #160	; 0xa0
1a003dc8:	9907      	ldr	r1, [sp, #28]
1a003dca:	9805      	ldr	r0, [sp, #20]
1a003dcc:	f003 fabe 	bl	1a00734c <__sprint_r>
1a003dd0:	2800      	cmp	r0, #0
1a003dd2:	f47f ac5d 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a003dd6:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003dda:	f7ff bb93 	b.w	1a003504 <_vfprintf_r+0x9a4>
1a003dde:	464b      	mov	r3, r9
1a003de0:	3201      	adds	r2, #1
1a003de2:	442c      	add	r4, r5
1a003de4:	2a07      	cmp	r2, #7
1a003de6:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003dea:	e9cb 3500 	strd	r3, r5, [fp]
1a003dee:	f77f a94a 	ble.w	1a003086 <_vfprintf_r+0x526>
1a003df2:	e46d      	b.n	1a0036d0 <_vfprintf_r+0xb70>
1a003df4:	9a08      	ldr	r2, [sp, #32]
1a003df6:	6812      	ldr	r2, [r2, #0]
1a003df8:	9308      	str	r3, [sp, #32]
1a003dfa:	9b04      	ldr	r3, [sp, #16]
1a003dfc:	6013      	str	r3, [r2, #0]
1a003dfe:	4657      	mov	r7, sl
1a003e00:	f7ff b962 	b.w	1a0030c8 <_vfprintf_r+0x568>
1a003e04:	2d10      	cmp	r5, #16
1a003e06:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003e08:	4b35      	ldr	r3, [pc, #212]	; (1a003ee0 <_vfprintf_r+0x1380>)
1a003e0a:	dd50      	ble.n	1a003eae <_vfprintf_r+0x134e>
1a003e0c:	4619      	mov	r1, r3
1a003e0e:	2610      	movs	r6, #16
1a003e10:	4623      	mov	r3, r4
1a003e12:	f8dd 8014 	ldr.w	r8, [sp, #20]
1a003e16:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a003e1a:	460c      	mov	r4, r1
1a003e1c:	e004      	b.n	1a003e28 <_vfprintf_r+0x12c8>
1a003e1e:	f10b 0b08 	add.w	fp, fp, #8
1a003e22:	3d10      	subs	r5, #16
1a003e24:	2d10      	cmp	r5, #16
1a003e26:	dd3f      	ble.n	1a003ea8 <_vfprintf_r+0x1348>
1a003e28:	3201      	adds	r2, #1
1a003e2a:	3310      	adds	r3, #16
1a003e2c:	2a07      	cmp	r2, #7
1a003e2e:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
1a003e32:	e9cb 4600 	strd	r4, r6, [fp]
1a003e36:	ddf2      	ble.n	1a003e1e <_vfprintf_r+0x12be>
1a003e38:	aa28      	add	r2, sp, #160	; 0xa0
1a003e3a:	4649      	mov	r1, r9
1a003e3c:	4640      	mov	r0, r8
1a003e3e:	f003 fa85 	bl	1a00734c <__sprint_r>
1a003e42:	2800      	cmp	r0, #0
1a003e44:	f47f acbe 	bne.w	1a0037c4 <_vfprintf_r+0xc64>
1a003e48:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
1a003e4c:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003e50:	e7e7      	b.n	1a003e22 <_vfprintf_r+0x12c2>
1a003e52:	4638      	mov	r0, r7
1a003e54:	f7fe fe14 	bl	1a002a80 <strlen>
1a003e58:	46a9      	mov	r9, r5
1a003e5a:	4606      	mov	r6, r0
1a003e5c:	f7ff b849 	b.w	1a002ef2 <_vfprintf_r+0x392>
1a003e60:	46d9      	mov	r9, fp
1a003e62:	e4af      	b.n	1a0037c4 <_vfprintf_r+0xc64>
1a003e64:	9e02      	ldr	r6, [sp, #8]
1a003e66:	9b08      	ldr	r3, [sp, #32]
1a003e68:	f416 7f00 	tst.w	r6, #512	; 0x200
1a003e6c:	d051      	beq.n	1a003f12 <_vfprintf_r+0x13b2>
1a003e6e:	f993 4000 	ldrsb.w	r4, [r3]
1a003e72:	9208      	str	r2, [sp, #32]
1a003e74:	17e5      	asrs	r5, r4, #31
1a003e76:	4622      	mov	r2, r4
1a003e78:	462b      	mov	r3, r5
1a003e7a:	f7fe bffb 	b.w	1a002e74 <_vfprintf_r+0x314>
1a003e7e:	9e02      	ldr	r6, [sp, #8]
1a003e80:	05b7      	lsls	r7, r6, #22
1a003e82:	bf47      	ittee	mi
1a003e84:	9208      	strmi	r2, [sp, #32]
1a003e86:	b2e4      	uxtbmi	r4, r4
1a003e88:	9e02      	ldrpl	r6, [sp, #8]
1a003e8a:	9208      	strpl	r2, [sp, #32]
1a003e8c:	2500      	movs	r5, #0
1a003e8e:	f7ff baae 	b.w	1a0033ee <_vfprintf_r+0x88e>
1a003e92:	9e02      	ldr	r6, [sp, #8]
1a003e94:	9208      	str	r2, [sp, #32]
1a003e96:	4633      	mov	r3, r6
1a003e98:	059b      	lsls	r3, r3, #22
1a003e9a:	bf4c      	ite	mi
1a003e9c:	b2e4      	uxtbmi	r4, r4
1a003e9e:	9e02      	ldrpl	r6, [sp, #8]
1a003ea0:	2500      	movs	r5, #0
1a003ea2:	2301      	movs	r3, #1
1a003ea4:	f7ff b987 	b.w	1a0031b6 <_vfprintf_r+0x656>
1a003ea8:	4621      	mov	r1, r4
1a003eaa:	461c      	mov	r4, r3
1a003eac:	460b      	mov	r3, r1
1a003eae:	3201      	adds	r2, #1
1a003eb0:	442c      	add	r4, r5
1a003eb2:	2a07      	cmp	r2, #7
1a003eb4:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003eb8:	e9cb 3500 	strd	r3, r5, [fp]
1a003ebc:	f300 80ef 	bgt.w	1a00409e <_vfprintf_r+0x153e>
1a003ec0:	f10b 0b08 	add.w	fp, fp, #8
1a003ec4:	e50e      	b.n	1a0038e4 <_vfprintf_r+0xd84>
1a003ec6:	9805      	ldr	r0, [sp, #20]
1a003ec8:	aa28      	add	r2, sp, #160	; 0xa0
1a003eca:	4649      	mov	r1, r9
1a003ecc:	f003 fa3e 	bl	1a00734c <__sprint_r>
1a003ed0:	2800      	cmp	r0, #0
1a003ed2:	f43f a903 	beq.w	1a0030dc <_vfprintf_r+0x57c>
1a003ed6:	e47a      	b.n	1a0037ce <_vfprintf_r+0xc6e>
1a003ed8:	66666667 	.word	0x66666667
1a003edc:	1a0079fc 	.word	0x1a0079fc
1a003ee0:	1a007a18 	.word	0x1a007a18
1a003ee4:	3301      	adds	r3, #1
1a003ee6:	930a      	str	r3, [sp, #40]	; 0x28
1a003ee8:	f102 0b08 	add.w	fp, r2, #8
1a003eec:	4616      	mov	r6, r2
1a003eee:	e441      	b.n	1a003774 <_vfprintf_r+0xc14>
1a003ef0:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003ef2:	18bd      	adds	r5, r7, r2
1a003ef4:	eba5 0509 	sub.w	r5, r5, r9
1a003ef8:	1ad3      	subs	r3, r2, r3
1a003efa:	429d      	cmp	r5, r3
1a003efc:	bfa8      	it	ge
1a003efe:	461d      	movge	r5, r3
1a003f00:	e527      	b.n	1a003952 <_vfprintf_r+0xdf2>
1a003f02:	9a08      	ldr	r2, [sp, #32]
1a003f04:	9308      	str	r3, [sp, #32]
1a003f06:	6812      	ldr	r2, [r2, #0]
1a003f08:	9b04      	ldr	r3, [sp, #16]
1a003f0a:	8013      	strh	r3, [r2, #0]
1a003f0c:	4657      	mov	r7, sl
1a003f0e:	f7ff b8db 	b.w	1a0030c8 <_vfprintf_r+0x568>
1a003f12:	681c      	ldr	r4, [r3, #0]
1a003f14:	9208      	str	r2, [sp, #32]
1a003f16:	17e5      	asrs	r5, r4, #31
1a003f18:	9e02      	ldr	r6, [sp, #8]
1a003f1a:	4622      	mov	r2, r4
1a003f1c:	462b      	mov	r3, r5
1a003f1e:	f7fe bfa9 	b.w	1a002e74 <_vfprintf_r+0x314>
1a003f22:	b2e4      	uxtb	r4, r4
1a003f24:	2500      	movs	r5, #0
1a003f26:	f7fe bf59 	b.w	1a002ddc <_vfprintf_r+0x27c>
1a003f2a:	2330      	movs	r3, #48	; 0x30
1a003f2c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a003f30:	2358      	movs	r3, #88	; 0x58
1a003f32:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
1a003f36:	9b02      	ldr	r3, [sp, #8]
1a003f38:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
1a003f3c:	f043 0302 	orr.w	r3, r3, #2
1a003f40:	930a      	str	r3, [sp, #40]	; 0x28
1a003f42:	f300 82b7 	bgt.w	1a0044b4 <_vfprintf_r+0x1954>
1a003f46:	2300      	movs	r3, #0
1a003f48:	9309      	str	r3, [sp, #36]	; 0x24
1a003f4a:	af3b      	add	r7, sp, #236	; 0xec
1a003f4c:	9a02      	ldr	r2, [sp, #8]
1a003f4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003f50:	f442 7281 	orr.w	r2, r2, #258	; 0x102
1a003f54:	9202      	str	r2, [sp, #8]
1a003f56:	2b00      	cmp	r3, #0
1a003f58:	f028 0220 	bic.w	r2, r8, #32
1a003f5c:	9203      	str	r2, [sp, #12]
1a003f5e:	f2c0 8188 	blt.w	1a004272 <_vfprintf_r+0x1712>
1a003f62:	ed9d 7b10 	vldr	d7, [sp, #64]	; 0x40
1a003f66:	ed8d 7b1c 	vstr	d7, [sp, #112]	; 0x70
1a003f6a:	2300      	movs	r3, #0
1a003f6c:	931e      	str	r3, [sp, #120]	; 0x78
1a003f6e:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
1a003f72:	f000 82d9 	beq.w	1a004528 <_vfprintf_r+0x19c8>
1a003f76:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
1a003f7a:	f47f ade7 	bne.w	1a003b4c <_vfprintf_r+0xfec>
1a003f7e:	a822      	add	r0, sp, #136	; 0x88
1a003f80:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a003f84:	f003 f8f0 	bl	1a007168 <frexp>
1a003f88:	2200      	movs	r2, #0
1a003f8a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a003f8e:	ec51 0b10 	vmov	r0, r1, d0
1a003f92:	f7fe f81b 	bl	1a001fcc <__aeabi_dmul>
1a003f96:	2200      	movs	r2, #0
1a003f98:	2300      	movs	r3, #0
1a003f9a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a003f9e:	f7fe fa7d 	bl	1a00249c <__aeabi_dcmpeq>
1a003fa2:	b108      	cbz	r0, 1a003fa8 <_vfprintf_r+0x1448>
1a003fa4:	2301      	movs	r3, #1
1a003fa6:	9322      	str	r3, [sp, #136]	; 0x88
1a003fa8:	4bb6      	ldr	r3, [pc, #728]	; (1a004284 <_vfprintf_r+0x1724>)
1a003faa:	930b      	str	r3, [sp, #44]	; 0x2c
1a003fac:	e9cd 8a0e 	strd	r8, sl, [sp, #56]	; 0x38
1a003fb0:	f109 35ff 	add.w	r5, r9, #4294967295	; 0xffffffff
1a003fb4:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
1a003fb8:	f8cd b07c 	str.w	fp, [sp, #124]	; 0x7c
1a003fbc:	e9dd 890c 	ldrd	r8, r9, [sp, #48]	; 0x30
1a003fc0:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a003fc4:	970c      	str	r7, [sp, #48]	; 0x30
1a003fc6:	46ba      	mov	sl, r7
1a003fc8:	e003      	b.n	1a003fd2 <_vfprintf_r+0x1472>
1a003fca:	f7fe fa67 	bl	1a00249c <__aeabi_dcmpeq>
1a003fce:	bb20      	cbnz	r0, 1a00401a <_vfprintf_r+0x14ba>
1a003fd0:	46b2      	mov	sl, r6
1a003fd2:	2200      	movs	r2, #0
1a003fd4:	4bac      	ldr	r3, [pc, #688]	; (1a004288 <_vfprintf_r+0x1728>)
1a003fd6:	4640      	mov	r0, r8
1a003fd8:	4649      	mov	r1, r9
1a003fda:	f7fd fff7 	bl	1a001fcc <__aeabi_dmul>
1a003fde:	4689      	mov	r9, r1
1a003fe0:	4680      	mov	r8, r0
1a003fe2:	f003 fb89 	bl	1a0076f8 <__aeabi_d2iz>
1a003fe6:	4607      	mov	r7, r0
1a003fe8:	f7fd ff86 	bl	1a001ef8 <__aeabi_i2d>
1a003fec:	4602      	mov	r2, r0
1a003fee:	460b      	mov	r3, r1
1a003ff0:	4640      	mov	r0, r8
1a003ff2:	4649      	mov	r1, r9
1a003ff4:	f7fd fe32 	bl	1a001c5c <__aeabi_dsub>
1a003ff8:	4656      	mov	r6, sl
1a003ffa:	f81b 4007 	ldrb.w	r4, [fp, r7]
1a003ffe:	f806 4b01 	strb.w	r4, [r6], #1
1a004002:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
1a004006:	462c      	mov	r4, r5
1a004008:	4680      	mov	r8, r0
1a00400a:	4689      	mov	r9, r1
1a00400c:	f04f 0200 	mov.w	r2, #0
1a004010:	f04f 0300 	mov.w	r3, #0
1a004014:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
1a004018:	d1d7      	bne.n	1a003fca <_vfprintf_r+0x146a>
1a00401a:	4640      	mov	r0, r8
1a00401c:	4649      	mov	r1, r9
1a00401e:	2200      	movs	r2, #0
1a004020:	4b9a      	ldr	r3, [pc, #616]	; (1a00428c <_vfprintf_r+0x172c>)
1a004022:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
1a004026:	f8dd b07c 	ldr.w	fp, [sp, #124]	; 0x7c
1a00402a:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
1a00402e:	463d      	mov	r5, r7
1a004030:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
1a004034:	9f0c      	ldr	r7, [sp, #48]	; 0x30
1a004036:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
1a00403a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a00403e:	f7fe fa55 	bl	1a0024ec <__aeabi_dcmpgt>
1a004042:	2800      	cmp	r0, #0
1a004044:	f040 8214 	bne.w	1a004470 <_vfprintf_r+0x1910>
1a004048:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
1a00404c:	2200      	movs	r2, #0
1a00404e:	4b8f      	ldr	r3, [pc, #572]	; (1a00428c <_vfprintf_r+0x172c>)
1a004050:	f7fe fa24 	bl	1a00249c <__aeabi_dcmpeq>
1a004054:	b118      	cbz	r0, 1a00405e <_vfprintf_r+0x14fe>
1a004056:	462b      	mov	r3, r5
1a004058:	07db      	lsls	r3, r3, #31
1a00405a:	f100 8209 	bmi.w	1a004470 <_vfprintf_r+0x1910>
1a00405e:	2c00      	cmp	r4, #0
1a004060:	f6ff ad91 	blt.w	1a003b86 <_vfprintf_r+0x1026>
1a004064:	1c63      	adds	r3, r4, #1
1a004066:	4433      	add	r3, r6
1a004068:	2230      	movs	r2, #48	; 0x30
1a00406a:	f806 2b01 	strb.w	r2, [r6], #1
1a00406e:	429e      	cmp	r6, r3
1a004070:	d1fb      	bne.n	1a00406a <_vfprintf_r+0x150a>
1a004072:	e588      	b.n	1a003b86 <_vfprintf_r+0x1026>
1a004074:	aa28      	add	r2, sp, #160	; 0xa0
1a004076:	9907      	ldr	r1, [sp, #28]
1a004078:	9805      	ldr	r0, [sp, #20]
1a00407a:	f003 f967 	bl	1a00734c <__sprint_r>
1a00407e:	2800      	cmp	r0, #0
1a004080:	f47f ab06 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a004084:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004086:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a00408a:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a00408e:	f7ff bb12 	b.w	1a0036b6 <_vfprintf_r+0xb56>
1a004092:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a004096:	f001 ffab 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a00409a:	f7fe be6a 	b.w	1a002d72 <_vfprintf_r+0x212>
1a00409e:	aa28      	add	r2, sp, #160	; 0xa0
1a0040a0:	9907      	ldr	r1, [sp, #28]
1a0040a2:	9805      	ldr	r0, [sp, #20]
1a0040a4:	f003 f952 	bl	1a00734c <__sprint_r>
1a0040a8:	2800      	cmp	r0, #0
1a0040aa:	f47f aaf1 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0040ae:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0040b0:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0040b4:	e416      	b.n	1a0038e4 <_vfprintf_r+0xd84>
1a0040b6:	9e02      	ldr	r6, [sp, #8]
1a0040b8:	f7ff b9ad 	b.w	1a003416 <_vfprintf_r+0x8b6>
1a0040bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0040be:	1cde      	adds	r6, r3, #3
1a0040c0:	db01      	blt.n	1a0040c6 <_vfprintf_r+0x1566>
1a0040c2:	4599      	cmp	r9, r3
1a0040c4:	da05      	bge.n	1a0040d2 <_vfprintf_r+0x1572>
1a0040c6:	f1a8 0802 	sub.w	r8, r8, #2
1a0040ca:	f028 0320 	bic.w	r3, r8, #32
1a0040ce:	9303      	str	r3, [sp, #12]
1a0040d0:	e565      	b.n	1a003b9e <_vfprintf_r+0x103e>
1a0040d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0040d4:	4619      	mov	r1, r3
1a0040d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0040d8:	4299      	cmp	r1, r3
1a0040da:	f300 8174 	bgt.w	1a0043c6 <_vfprintf_r+0x1866>
1a0040de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a0040e0:	07d4      	lsls	r4, r2, #31
1a0040e2:	f140 8254 	bpl.w	1a00458e <_vfprintf_r+0x1a2e>
1a0040e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
1a0040e8:	189e      	adds	r6, r3, r2
1a0040ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0040ec:	0558      	lsls	r0, r3, #21
1a0040ee:	d503      	bpl.n	1a0040f8 <_vfprintf_r+0x1598>
1a0040f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0040f2:	2b00      	cmp	r3, #0
1a0040f4:	f300 824d 	bgt.w	1a004592 <_vfprintf_r+0x1a32>
1a0040f8:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a0040fc:	9303      	str	r3, [sp, #12]
1a0040fe:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004102:	2300      	movs	r3, #0
1a004104:	930c      	str	r3, [sp, #48]	; 0x30
1a004106:	930f      	str	r3, [sp, #60]	; 0x3c
1a004108:	e5ac      	b.n	1a003c64 <_vfprintf_r+0x1104>
1a00410a:	222d      	movs	r2, #45	; 0x2d
1a00410c:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a004110:	f04f 0900 	mov.w	r9, #0
1a004114:	f7fe befb 	b.w	1a002f0e <_vfprintf_r+0x3ae>
1a004118:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00411a:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
1a00411e:	18fb      	adds	r3, r7, r3
1a004120:	930a      	str	r3, [sp, #40]	; 0x28
1a004122:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004124:	970e      	str	r7, [sp, #56]	; 0x38
1a004126:	465a      	mov	r2, fp
1a004128:	464f      	mov	r7, r9
1a00412a:	4e59      	ldr	r6, [pc, #356]	; (1a004290 <_vfprintf_r+0x1730>)
1a00412c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
1a004130:	f8dd a014 	ldr.w	sl, [sp, #20]
1a004134:	f8dd b01c 	ldr.w	fp, [sp, #28]
1a004138:	f8dd 9064 	ldr.w	r9, [sp, #100]	; 0x64
1a00413c:	4621      	mov	r1, r4
1a00413e:	2b00      	cmp	r3, #0
1a004140:	d032      	beq.n	1a0041a8 <_vfprintf_r+0x1648>
1a004142:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004144:	2b00      	cmp	r3, #0
1a004146:	d16e      	bne.n	1a004226 <_vfprintf_r+0x16c6>
1a004148:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a00414a:	3b01      	subs	r3, #1
1a00414c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
1a004150:	930f      	str	r3, [sp, #60]	; 0x3c
1a004152:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a004154:	9817      	ldr	r0, [sp, #92]	; 0x5c
1a004156:	6010      	str	r0, [r2, #0]
1a004158:	3301      	adds	r3, #1
1a00415a:	4449      	add	r1, r9
1a00415c:	2b07      	cmp	r3, #7
1a00415e:	912a      	str	r1, [sp, #168]	; 0xa8
1a004160:	f8c2 9004 	str.w	r9, [r2, #4]
1a004164:	9329      	str	r3, [sp, #164]	; 0xa4
1a004166:	dc62      	bgt.n	1a00422e <_vfprintf_r+0x16ce>
1a004168:	3208      	adds	r2, #8
1a00416a:	980a      	ldr	r0, [sp, #40]	; 0x28
1a00416c:	f898 3000 	ldrb.w	r3, [r8]
1a004170:	1bc5      	subs	r5, r0, r7
1a004172:	429d      	cmp	r5, r3
1a004174:	bfa8      	it	ge
1a004176:	461d      	movge	r5, r3
1a004178:	2d00      	cmp	r5, #0
1a00417a:	dd0b      	ble.n	1a004194 <_vfprintf_r+0x1634>
1a00417c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a00417e:	6017      	str	r7, [r2, #0]
1a004180:	3301      	adds	r3, #1
1a004182:	4429      	add	r1, r5
1a004184:	2b07      	cmp	r3, #7
1a004186:	912a      	str	r1, [sp, #168]	; 0xa8
1a004188:	6055      	str	r5, [r2, #4]
1a00418a:	9329      	str	r3, [sp, #164]	; 0xa4
1a00418c:	dc5a      	bgt.n	1a004244 <_vfprintf_r+0x16e4>
1a00418e:	f898 3000 	ldrb.w	r3, [r8]
1a004192:	3208      	adds	r2, #8
1a004194:	2d00      	cmp	r5, #0
1a004196:	bfac      	ite	ge
1a004198:	1b5d      	subge	r5, r3, r5
1a00419a:	461d      	movlt	r5, r3
1a00419c:	2d00      	cmp	r5, #0
1a00419e:	dc15      	bgt.n	1a0041cc <_vfprintf_r+0x166c>
1a0041a0:	441f      	add	r7, r3
1a0041a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a0041a4:	2b00      	cmp	r3, #0
1a0041a6:	d1cc      	bne.n	1a004142 <_vfprintf_r+0x15e2>
1a0041a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a0041aa:	2b00      	cmp	r3, #0
1a0041ac:	d13b      	bne.n	1a004226 <_vfprintf_r+0x16c6>
1a0041ae:	46b9      	mov	r9, r7
1a0041b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0041b2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
1a0041b4:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
1a0041b8:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
1a0041bc:	18fb      	adds	r3, r7, r3
1a0041be:	4599      	cmp	r9, r3
1a0041c0:	4693      	mov	fp, r2
1a0041c2:	460c      	mov	r4, r1
1a0041c4:	bf28      	it	cs
1a0041c6:	4699      	movcs	r9, r3
1a0041c8:	f7ff bb93 	b.w	1a0038f2 <_vfprintf_r+0xd92>
1a0041cc:	2d10      	cmp	r5, #16
1a0041ce:	9829      	ldr	r0, [sp, #164]	; 0xa4
1a0041d0:	dd1c      	ble.n	1a00420c <_vfprintf_r+0x16ac>
1a0041d2:	2410      	movs	r4, #16
1a0041d4:	e004      	b.n	1a0041e0 <_vfprintf_r+0x1680>
1a0041d6:	3d10      	subs	r5, #16
1a0041d8:	2d10      	cmp	r5, #16
1a0041da:	f102 0208 	add.w	r2, r2, #8
1a0041de:	dd15      	ble.n	1a00420c <_vfprintf_r+0x16ac>
1a0041e0:	3001      	adds	r0, #1
1a0041e2:	3110      	adds	r1, #16
1a0041e4:	2807      	cmp	r0, #7
1a0041e6:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
1a0041ea:	e9c2 6400 	strd	r6, r4, [r2]
1a0041ee:	ddf2      	ble.n	1a0041d6 <_vfprintf_r+0x1676>
1a0041f0:	aa28      	add	r2, sp, #160	; 0xa0
1a0041f2:	4659      	mov	r1, fp
1a0041f4:	4650      	mov	r0, sl
1a0041f6:	f003 f8a9 	bl	1a00734c <__sprint_r>
1a0041fa:	2800      	cmp	r0, #0
1a0041fc:	f47f ae30 	bne.w	1a003e60 <_vfprintf_r+0x1300>
1a004200:	3d10      	subs	r5, #16
1a004202:	2d10      	cmp	r5, #16
1a004204:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
1a004208:	aa2b      	add	r2, sp, #172	; 0xac
1a00420a:	dce9      	bgt.n	1a0041e0 <_vfprintf_r+0x1680>
1a00420c:	3001      	adds	r0, #1
1a00420e:	4429      	add	r1, r5
1a004210:	2807      	cmp	r0, #7
1a004212:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
1a004216:	e9c2 6500 	strd	r6, r5, [r2]
1a00421a:	dc49      	bgt.n	1a0042b0 <_vfprintf_r+0x1750>
1a00421c:	f898 3000 	ldrb.w	r3, [r8]
1a004220:	3208      	adds	r2, #8
1a004222:	441f      	add	r7, r3
1a004224:	e7bd      	b.n	1a0041a2 <_vfprintf_r+0x1642>
1a004226:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004228:	3b01      	subs	r3, #1
1a00422a:	930c      	str	r3, [sp, #48]	; 0x30
1a00422c:	e791      	b.n	1a004152 <_vfprintf_r+0x15f2>
1a00422e:	aa28      	add	r2, sp, #160	; 0xa0
1a004230:	4659      	mov	r1, fp
1a004232:	4650      	mov	r0, sl
1a004234:	f003 f88a 	bl	1a00734c <__sprint_r>
1a004238:	2800      	cmp	r0, #0
1a00423a:	f47f ae11 	bne.w	1a003e60 <_vfprintf_r+0x1300>
1a00423e:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a004240:	aa2b      	add	r2, sp, #172	; 0xac
1a004242:	e792      	b.n	1a00416a <_vfprintf_r+0x160a>
1a004244:	aa28      	add	r2, sp, #160	; 0xa0
1a004246:	4659      	mov	r1, fp
1a004248:	4650      	mov	r0, sl
1a00424a:	f003 f87f 	bl	1a00734c <__sprint_r>
1a00424e:	2800      	cmp	r0, #0
1a004250:	f47f ae06 	bne.w	1a003e60 <_vfprintf_r+0x1300>
1a004254:	f898 3000 	ldrb.w	r3, [r8]
1a004258:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a00425a:	aa2b      	add	r2, sp, #172	; 0xac
1a00425c:	e79a      	b.n	1a004194 <_vfprintf_r+0x1634>
1a00425e:	222d      	movs	r2, #45	; 0x2d
1a004260:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a004264:	f7ff b87d 	b.w	1a003362 <_vfprintf_r+0x802>
1a004268:	9b02      	ldr	r3, [sp, #8]
1a00426a:	930a      	str	r3, [sp, #40]	; 0x28
1a00426c:	2300      	movs	r3, #0
1a00426e:	9309      	str	r3, [sp, #36]	; 0x24
1a004270:	9202      	str	r2, [sp, #8]
1a004272:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
1a004276:	f102 4300 	add.w	r3, r2, #2147483648	; 0x80000000
1a00427a:	931d      	str	r3, [sp, #116]	; 0x74
1a00427c:	232d      	movs	r3, #45	; 0x2d
1a00427e:	911c      	str	r1, [sp, #112]	; 0x70
1a004280:	931e      	str	r3, [sp, #120]	; 0x78
1a004282:	e674      	b.n	1a003f6e <_vfprintf_r+0x140e>
1a004284:	1a0079d4 	.word	0x1a0079d4
1a004288:	40300000 	.word	0x40300000
1a00428c:	3fe00000 	.word	0x3fe00000
1a004290:	1a007a18 	.word	0x1a007a18
1a004294:	aa28      	add	r2, sp, #160	; 0xa0
1a004296:	9907      	ldr	r1, [sp, #28]
1a004298:	9805      	ldr	r0, [sp, #20]
1a00429a:	f003 f857 	bl	1a00734c <__sprint_r>
1a00429e:	2800      	cmp	r0, #0
1a0042a0:	f47f a9f6 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0042a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0042a6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0042a8:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0042ac:	f7ff bbeb 	b.w	1a003a86 <_vfprintf_r+0xf26>
1a0042b0:	aa28      	add	r2, sp, #160	; 0xa0
1a0042b2:	4659      	mov	r1, fp
1a0042b4:	4650      	mov	r0, sl
1a0042b6:	f003 f849 	bl	1a00734c <__sprint_r>
1a0042ba:	2800      	cmp	r0, #0
1a0042bc:	f47f add0 	bne.w	1a003e60 <_vfprintf_r+0x1300>
1a0042c0:	f898 3000 	ldrb.w	r3, [r8]
1a0042c4:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a0042c6:	aa2b      	add	r2, sp, #172	; 0xac
1a0042c8:	441f      	add	r7, r3
1a0042ca:	e76a      	b.n	1a0041a2 <_vfprintf_r+0x1642>
1a0042cc:	aa28      	add	r2, sp, #160	; 0xa0
1a0042ce:	9907      	ldr	r1, [sp, #28]
1a0042d0:	9805      	ldr	r0, [sp, #20]
1a0042d2:	f003 f83b 	bl	1a00734c <__sprint_r>
1a0042d6:	2800      	cmp	r0, #0
1a0042d8:	f47f a9da 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0042dc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0042de:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0042e2:	f7ff baf7 	b.w	1a0038d4 <_vfprintf_r+0xd74>
1a0042e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
1a0042e8:	9917      	ldr	r1, [sp, #92]	; 0x5c
1a0042ea:	1aff      	subs	r7, r7, r3
1a0042ec:	461a      	mov	r2, r3
1a0042ee:	4638      	mov	r0, r7
1a0042f0:	f002 ffb6 	bl	1a007260 <strncpy>
1a0042f4:	f898 3001 	ldrb.w	r3, [r8, #1]
1a0042f8:	b10b      	cbz	r3, 1a0042fe <_vfprintf_r+0x179e>
1a0042fa:	f108 0801 	add.w	r8, r8, #1
1a0042fe:	220a      	movs	r2, #10
1a004300:	2300      	movs	r3, #0
1a004302:	4620      	mov	r0, r4
1a004304:	4629      	mov	r1, r5
1a004306:	f04f 0a00 	mov.w	sl, #0
1a00430a:	f7fe f8f9 	bl	1a002500 <__aeabi_uldivmod>
1a00430e:	f7ff b8ab 	b.w	1a003468 <_vfprintf_r+0x908>
1a004312:	aa26      	add	r2, sp, #152	; 0x98
1a004314:	ab23      	add	r3, sp, #140	; 0x8c
1a004316:	e9cd 3200 	strd	r3, r2, [sp]
1a00431a:	2103      	movs	r1, #3
1a00431c:	ab22      	add	r3, sp, #136	; 0x88
1a00431e:	464a      	mov	r2, r9
1a004320:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004324:	9805      	ldr	r0, [sp, #20]
1a004326:	f000 fb03 	bl	1a004930 <_dtoa_r>
1a00432a:	7803      	ldrb	r3, [r0, #0]
1a00432c:	2b30      	cmp	r3, #48	; 0x30
1a00432e:	4607      	mov	r7, r0
1a004330:	f000 8161 	beq.w	1a0045f6 <_vfprintf_r+0x1a96>
1a004334:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004336:	444b      	add	r3, r9
1a004338:	18fc      	adds	r4, r7, r3
1a00433a:	2200      	movs	r2, #0
1a00433c:	2300      	movs	r3, #0
1a00433e:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a004342:	f7fe f8ab 	bl	1a00249c <__aeabi_dcmpeq>
1a004346:	b108      	cbz	r0, 1a00434c <_vfprintf_r+0x17ec>
1a004348:	4626      	mov	r6, r4
1a00434a:	e41c      	b.n	1a003b86 <_vfprintf_r+0x1026>
1a00434c:	9e26      	ldr	r6, [sp, #152]	; 0x98
1a00434e:	42a6      	cmp	r6, r4
1a004350:	f4bf ac19 	bcs.w	1a003b86 <_vfprintf_r+0x1026>
1a004354:	2230      	movs	r2, #48	; 0x30
1a004356:	1c73      	adds	r3, r6, #1
1a004358:	9326      	str	r3, [sp, #152]	; 0x98
1a00435a:	7032      	strb	r2, [r6, #0]
1a00435c:	9e26      	ldr	r6, [sp, #152]	; 0x98
1a00435e:	42b4      	cmp	r4, r6
1a004360:	d8f9      	bhi.n	1a004356 <_vfprintf_r+0x17f6>
1a004362:	e410      	b.n	1a003b86 <_vfprintf_r+0x1026>
1a004364:	aa28      	add	r2, sp, #160	; 0xa0
1a004366:	9907      	ldr	r1, [sp, #28]
1a004368:	9805      	ldr	r0, [sp, #20]
1a00436a:	f002 ffef 	bl	1a00734c <__sprint_r>
1a00436e:	2800      	cmp	r0, #0
1a004370:	f47f a98e 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a004374:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004376:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004378:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a00437c:	f7ff bad1 	b.w	1a003922 <_vfprintf_r+0xdc2>
1a004380:	464e      	mov	r6, r9
1a004382:	f8cd 900c 	str.w	r9, [sp, #12]
1a004386:	9408      	str	r4, [sp, #32]
1a004388:	4681      	mov	r9, r0
1a00438a:	900c      	str	r0, [sp, #48]	; 0x30
1a00438c:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
1a004390:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a004394:	f7fe bdb9 	b.w	1a002f0a <_vfprintf_r+0x3aa>
1a004398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a00439a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a00439c:	f003 0301 	and.w	r3, r3, #1
1a0043a0:	2a00      	cmp	r2, #0
1a0043a2:	ea43 0309 	orr.w	r3, r3, r9
1a0043a6:	f340 8142 	ble.w	1a00462e <_vfprintf_r+0x1ace>
1a0043aa:	2b00      	cmp	r3, #0
1a0043ac:	f040 8119 	bne.w	1a0045e2 <_vfprintf_r+0x1a82>
1a0043b0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
1a0043b2:	f04f 0866 	mov.w	r8, #102	; 0x66
1a0043b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0043b8:	055a      	lsls	r2, r3, #21
1a0043ba:	f100 80ec 	bmi.w	1a004596 <_vfprintf_r+0x1a36>
1a0043be:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a0043c2:	9303      	str	r3, [sp, #12]
1a0043c4:	e69d      	b.n	1a004102 <_vfprintf_r+0x15a2>
1a0043c6:	e9dd 3212 	ldrd	r3, r2, [sp, #72]	; 0x48
1a0043ca:	189e      	adds	r6, r3, r2
1a0043cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0043ce:	2b00      	cmp	r3, #0
1a0043d0:	f340 811e 	ble.w	1a004610 <_vfprintf_r+0x1ab0>
1a0043d4:	f04f 0867 	mov.w	r8, #103	; 0x67
1a0043d8:	e7ed      	b.n	1a0043b6 <_vfprintf_r+0x1856>
1a0043da:	aa28      	add	r2, sp, #160	; 0xa0
1a0043dc:	9907      	ldr	r1, [sp, #28]
1a0043de:	9805      	ldr	r0, [sp, #20]
1a0043e0:	f002 ffb4 	bl	1a00734c <__sprint_r>
1a0043e4:	2800      	cmp	r0, #0
1a0043e6:	f47f a953 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0043ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0043ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0043ee:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0043f0:	1ad3      	subs	r3, r2, r3
1a0043f2:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0043f6:	f7ff baac 	b.w	1a003952 <_vfprintf_r+0xdf2>
1a0043fa:	eb07 0409 	add.w	r4, r7, r9
1a0043fe:	e79c      	b.n	1a00433a <_vfprintf_r+0x17da>
1a004400:	425d      	negs	r5, r3
1a004402:	3310      	adds	r3, #16
1a004404:	4ba7      	ldr	r3, [pc, #668]	; (1a0046a4 <_vfprintf_r+0x1b44>)
1a004406:	da63      	bge.n	1a0044d0 <_vfprintf_r+0x1970>
1a004408:	4619      	mov	r1, r3
1a00440a:	2610      	movs	r6, #16
1a00440c:	4623      	mov	r3, r4
1a00440e:	f8dd 8014 	ldr.w	r8, [sp, #20]
1a004412:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a004416:	460c      	mov	r4, r1
1a004418:	e004      	b.n	1a004424 <_vfprintf_r+0x18c4>
1a00441a:	f10b 0b08 	add.w	fp, fp, #8
1a00441e:	3d10      	subs	r5, #16
1a004420:	2d10      	cmp	r5, #16
1a004422:	dd52      	ble.n	1a0044ca <_vfprintf_r+0x196a>
1a004424:	3201      	adds	r2, #1
1a004426:	3310      	adds	r3, #16
1a004428:	2a07      	cmp	r2, #7
1a00442a:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
1a00442e:	e9cb 4600 	strd	r4, r6, [fp]
1a004432:	ddf2      	ble.n	1a00441a <_vfprintf_r+0x18ba>
1a004434:	aa28      	add	r2, sp, #160	; 0xa0
1a004436:	4649      	mov	r1, r9
1a004438:	4640      	mov	r0, r8
1a00443a:	f002 ff87 	bl	1a00734c <__sprint_r>
1a00443e:	2800      	cmp	r0, #0
1a004440:	f47f a9c0 	bne.w	1a0037c4 <_vfprintf_r+0xc64>
1a004444:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
1a004448:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a00444c:	e7e7      	b.n	1a00441e <_vfprintf_r+0x18be>
1a00444e:	f8d9 3064 	ldr.w	r3, [r9, #100]	; 0x64
1a004452:	07db      	lsls	r3, r3, #31
1a004454:	d407      	bmi.n	1a004466 <_vfprintf_r+0x1906>
1a004456:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a00445a:	059f      	lsls	r7, r3, #22
1a00445c:	d403      	bmi.n	1a004466 <_vfprintf_r+0x1906>
1a00445e:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a004462:	f001 fdc5 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a004466:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a00446a:	9304      	str	r3, [sp, #16]
1a00446c:	f7ff b9bb 	b.w	1a0037e6 <_vfprintf_r+0xc86>
1a004470:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a004472:	9326      	str	r3, [sp, #152]	; 0x98
1a004474:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a004476:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1a00447a:	7bd9      	ldrb	r1, [r3, #15]
1a00447c:	428a      	cmp	r2, r1
1a00447e:	4633      	mov	r3, r6
1a004480:	d109      	bne.n	1a004496 <_vfprintf_r+0x1936>
1a004482:	2030      	movs	r0, #48	; 0x30
1a004484:	f803 0c01 	strb.w	r0, [r3, #-1]
1a004488:	9b26      	ldr	r3, [sp, #152]	; 0x98
1a00448a:	1e5a      	subs	r2, r3, #1
1a00448c:	9226      	str	r2, [sp, #152]	; 0x98
1a00448e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1a004492:	4291      	cmp	r1, r2
1a004494:	d0f6      	beq.n	1a004484 <_vfprintf_r+0x1924>
1a004496:	2a39      	cmp	r2, #57	; 0x39
1a004498:	bf0b      	itete	eq
1a00449a:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
1a00449c:	3201      	addne	r2, #1
1a00449e:	7a92      	ldrbeq	r2, [r2, #10]
1a0044a0:	b2d2      	uxtbne	r2, r2
1a0044a2:	f803 2c01 	strb.w	r2, [r3, #-1]
1a0044a6:	f7ff bb6e 	b.w	1a003b86 <_vfprintf_r+0x1026>
1a0044aa:	2330      	movs	r3, #48	; 0x30
1a0044ac:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a0044b0:	2378      	movs	r3, #120	; 0x78
1a0044b2:	e53e      	b.n	1a003f32 <_vfprintf_r+0x13d2>
1a0044b4:	f109 0101 	add.w	r1, r9, #1
1a0044b8:	9805      	ldr	r0, [sp, #20]
1a0044ba:	f001 fe13 	bl	1a0060e4 <_malloc_r>
1a0044be:	4607      	mov	r7, r0
1a0044c0:	2800      	cmp	r0, #0
1a0044c2:	f000 80d5 	beq.w	1a004670 <_vfprintf_r+0x1b10>
1a0044c6:	9009      	str	r0, [sp, #36]	; 0x24
1a0044c8:	e540      	b.n	1a003f4c <_vfprintf_r+0x13ec>
1a0044ca:	4621      	mov	r1, r4
1a0044cc:	461c      	mov	r4, r3
1a0044ce:	460b      	mov	r3, r1
1a0044d0:	3201      	adds	r2, #1
1a0044d2:	442c      	add	r4, r5
1a0044d4:	2a07      	cmp	r2, #7
1a0044d6:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0044da:	e9cb 3500 	strd	r3, r5, [fp]
1a0044de:	f77f aaea 	ble.w	1a003ab6 <_vfprintf_r+0xf56>
1a0044e2:	aa28      	add	r2, sp, #160	; 0xa0
1a0044e4:	9907      	ldr	r1, [sp, #28]
1a0044e6:	9805      	ldr	r0, [sp, #20]
1a0044e8:	f002 ff30 	bl	1a00734c <__sprint_r>
1a0044ec:	2800      	cmp	r0, #0
1a0044ee:	f47f a8cf 	bne.w	1a003690 <_vfprintf_r+0xb30>
1a0044f2:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a0044f6:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0044fa:	f7ff b8df 	b.w	1a0036bc <_vfprintf_r+0xb5c>
1a0044fe:	f109 0401 	add.w	r4, r9, #1
1a004502:	a926      	add	r1, sp, #152	; 0x98
1a004504:	ab23      	add	r3, sp, #140	; 0x8c
1a004506:	e9cd 3100 	strd	r3, r1, [sp]
1a00450a:	4622      	mov	r2, r4
1a00450c:	ab22      	add	r3, sp, #136	; 0x88
1a00450e:	2102      	movs	r1, #2
1a004510:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004514:	9805      	ldr	r0, [sp, #20]
1a004516:	f000 fa0b 	bl	1a004930 <_dtoa_r>
1a00451a:	4607      	mov	r7, r0
1a00451c:	443c      	add	r4, r7
1a00451e:	e70c      	b.n	1a00433a <_vfprintf_r+0x17da>
1a004520:	f04f 0906 	mov.w	r9, #6
1a004524:	f7ff bb03 	b.w	1a003b2e <_vfprintf_r+0xfce>
1a004528:	a822      	add	r0, sp, #136	; 0x88
1a00452a:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a00452e:	f002 fe1b 	bl	1a007168 <frexp>
1a004532:	2200      	movs	r2, #0
1a004534:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a004538:	ec51 0b10 	vmov	r0, r1, d0
1a00453c:	f7fd fd46 	bl	1a001fcc <__aeabi_dmul>
1a004540:	2200      	movs	r2, #0
1a004542:	2300      	movs	r3, #0
1a004544:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a004548:	f7fd ffa8 	bl	1a00249c <__aeabi_dcmpeq>
1a00454c:	b108      	cbz	r0, 1a004552 <_vfprintf_r+0x19f2>
1a00454e:	2301      	movs	r3, #1
1a004550:	9322      	str	r3, [sp, #136]	; 0x88
1a004552:	4b55      	ldr	r3, [pc, #340]	; (1a0046a8 <_vfprintf_r+0x1b48>)
1a004554:	930b      	str	r3, [sp, #44]	; 0x2c
1a004556:	e529      	b.n	1a003fac <_vfprintf_r+0x144c>
1a004558:	2900      	cmp	r1, #0
1a00455a:	d17b      	bne.n	1a004654 <_vfprintf_r+0x1af4>
1a00455c:	2330      	movs	r3, #48	; 0x30
1a00455e:	f88d 3092 	strb.w	r3, [sp, #146]	; 0x92
1a004562:	f10d 0393 	add.w	r3, sp, #147	; 0x93
1a004566:	3230      	adds	r2, #48	; 0x30
1a004568:	f803 2b01 	strb.w	r2, [r3], #1
1a00456c:	aa24      	add	r2, sp, #144	; 0x90
1a00456e:	1a9b      	subs	r3, r3, r2
1a004570:	9316      	str	r3, [sp, #88]	; 0x58
1a004572:	f7ff bb61 	b.w	1a003c38 <_vfprintf_r+0x10d8>
1a004576:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a004578:	4f4c      	ldr	r7, [pc, #304]	; (1a0046ac <_vfprintf_r+0x1b4c>)
1a00457a:	2b00      	cmp	r3, #0
1a00457c:	bfb6      	itet	lt
1a00457e:	222d      	movlt	r2, #45	; 0x2d
1a004580:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
1a004584:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
1a004588:	4b49      	ldr	r3, [pc, #292]	; (1a0046b0 <_vfprintf_r+0x1b50>)
1a00458a:	f7fe beec 	b.w	1a003366 <_vfprintf_r+0x806>
1a00458e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
1a004590:	e5ab      	b.n	1a0040ea <_vfprintf_r+0x158a>
1a004592:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004596:	9818      	ldr	r0, [sp, #96]	; 0x60
1a004598:	2200      	movs	r2, #0
1a00459a:	920c      	str	r2, [sp, #48]	; 0x30
1a00459c:	920f      	str	r2, [sp, #60]	; 0x3c
1a00459e:	7803      	ldrb	r3, [r0, #0]
1a0045a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a0045a2:	2bff      	cmp	r3, #255	; 0xff
1a0045a4:	d00c      	beq.n	1a0045c0 <_vfprintf_r+0x1a60>
1a0045a6:	4293      	cmp	r3, r2
1a0045a8:	da0a      	bge.n	1a0045c0 <_vfprintf_r+0x1a60>
1a0045aa:	7841      	ldrb	r1, [r0, #1]
1a0045ac:	1ad2      	subs	r2, r2, r3
1a0045ae:	b1a1      	cbz	r1, 1a0045da <_vfprintf_r+0x1a7a>
1a0045b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a0045b2:	3301      	adds	r3, #1
1a0045b4:	930f      	str	r3, [sp, #60]	; 0x3c
1a0045b6:	460b      	mov	r3, r1
1a0045b8:	2bff      	cmp	r3, #255	; 0xff
1a0045ba:	f100 0001 	add.w	r0, r0, #1
1a0045be:	d1f2      	bne.n	1a0045a6 <_vfprintf_r+0x1a46>
1a0045c0:	920e      	str	r2, [sp, #56]	; 0x38
1a0045c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a0045c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a0045c6:	9018      	str	r0, [sp, #96]	; 0x60
1a0045c8:	4413      	add	r3, r2
1a0045ca:	9a19      	ldr	r2, [sp, #100]	; 0x64
1a0045cc:	fb02 6603 	mla	r6, r2, r3, r6
1a0045d0:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a0045d4:	9303      	str	r3, [sp, #12]
1a0045d6:	f7ff bb45 	b.w	1a003c64 <_vfprintf_r+0x1104>
1a0045da:	990c      	ldr	r1, [sp, #48]	; 0x30
1a0045dc:	3101      	adds	r1, #1
1a0045de:	910c      	str	r1, [sp, #48]	; 0x30
1a0045e0:	e7df      	b.n	1a0045a2 <_vfprintf_r+0x1a42>
1a0045e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a0045e4:	18d6      	adds	r6, r2, r3
1a0045e6:	444e      	add	r6, r9
1a0045e8:	f04f 0866 	mov.w	r8, #102	; 0x66
1a0045ec:	e6e3      	b.n	1a0043b6 <_vfprintf_r+0x1856>
1a0045ee:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0045f2:	f7ff b8ec 	b.w	1a0037ce <_vfprintf_r+0xc6e>
1a0045f6:	2200      	movs	r2, #0
1a0045f8:	2300      	movs	r3, #0
1a0045fa:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a0045fe:	f7fd ff4d 	bl	1a00249c <__aeabi_dcmpeq>
1a004602:	2800      	cmp	r0, #0
1a004604:	f47f ae96 	bne.w	1a004334 <_vfprintf_r+0x17d4>
1a004608:	f1c9 0301 	rsb	r3, r9, #1
1a00460c:	9322      	str	r3, [sp, #136]	; 0x88
1a00460e:	e692      	b.n	1a004336 <_vfprintf_r+0x17d6>
1a004610:	f1c3 0301 	rsb	r3, r3, #1
1a004614:	441e      	add	r6, r3
1a004616:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a00461a:	9303      	str	r3, [sp, #12]
1a00461c:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004620:	e56f      	b.n	1a004102 <_vfprintf_r+0x15a2>
1a004622:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004624:	07dd      	lsls	r5, r3, #31
1a004626:	f57f ab10 	bpl.w	1a003c4a <_vfprintf_r+0x10ea>
1a00462a:	f7ff bb0c 	b.w	1a003c46 <_vfprintf_r+0x10e6>
1a00462e:	b92b      	cbnz	r3, 1a00463c <_vfprintf_r+0x1adc>
1a004630:	2301      	movs	r3, #1
1a004632:	9303      	str	r3, [sp, #12]
1a004634:	461e      	mov	r6, r3
1a004636:	f04f 0866 	mov.w	r8, #102	; 0x66
1a00463a:	e562      	b.n	1a004102 <_vfprintf_r+0x15a2>
1a00463c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a00463e:	1c5e      	adds	r6, r3, #1
1a004640:	444e      	add	r6, r9
1a004642:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a004646:	9303      	str	r3, [sp, #12]
1a004648:	f04f 0866 	mov.w	r8, #102	; 0x66
1a00464c:	e559      	b.n	1a004102 <_vfprintf_r+0x15a2>
1a00464e:	465a      	mov	r2, fp
1a004650:	f7ff bb3f 	b.w	1a003cd2 <_vfprintf_r+0x1172>
1a004654:	f10d 0392 	add.w	r3, sp, #146	; 0x92
1a004658:	e785      	b.n	1a004566 <_vfprintf_r+0x1a06>
1a00465a:	9b08      	ldr	r3, [sp, #32]
1a00465c:	f89a 8001 	ldrb.w	r8, [sl, #1]
1a004660:	f853 0b04 	ldr.w	r0, [r3], #4
1a004664:	9308      	str	r3, [sp, #32]
1a004666:	4692      	mov	sl, r2
1a004668:	ea40 79e0 	orr.w	r9, r0, r0, asr #31
1a00466c:	f7fe bafc 	b.w	1a002c68 <_vfprintf_r+0x108>
1a004670:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a004674:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a004678:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a00467c:	f8a9 300c 	strh.w	r3, [r9, #12]
1a004680:	f7ff b8a5 	b.w	1a0037ce <_vfprintf_r+0xc6e>
1a004684:	461e      	mov	r6, r3
1a004686:	f7fe bc15 	b.w	1a002eb4 <_vfprintf_r+0x354>
1a00468a:	461e      	mov	r6, r3
1a00468c:	f7fe bc5e 	b.w	1a002f4c <_vfprintf_r+0x3ec>
1a004690:	461e      	mov	r6, r3
1a004692:	f7fe bc48 	b.w	1a002f26 <_vfprintf_r+0x3c6>
1a004696:	464c      	mov	r4, r9
1a004698:	443c      	add	r4, r7
1a00469a:	e64e      	b.n	1a00433a <_vfprintf_r+0x17da>
1a00469c:	2302      	movs	r3, #2
1a00469e:	9316      	str	r3, [sp, #88]	; 0x58
1a0046a0:	f7ff baca 	b.w	1a003c38 <_vfprintf_r+0x10d8>
1a0046a4:	1a007a18 	.word	0x1a007a18
1a0046a8:	1a0079e8 	.word	0x1a0079e8
1a0046ac:	1a0079cc 	.word	0x1a0079cc
1a0046b0:	1a0079d0 	.word	0x1a0079d0

1a0046b4 <__sbprintf>:
1a0046b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0046b8:	460c      	mov	r4, r1
1a0046ba:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
1a0046be:	8989      	ldrh	r1, [r1, #12]
1a0046c0:	6e66      	ldr	r6, [r4, #100]	; 0x64
1a0046c2:	89e5      	ldrh	r5, [r4, #14]
1a0046c4:	9619      	str	r6, [sp, #100]	; 0x64
1a0046c6:	f021 0102 	bic.w	r1, r1, #2
1a0046ca:	4606      	mov	r6, r0
1a0046cc:	69e0      	ldr	r0, [r4, #28]
1a0046ce:	f8ad 100c 	strh.w	r1, [sp, #12]
1a0046d2:	4617      	mov	r7, r2
1a0046d4:	f44f 6180 	mov.w	r1, #1024	; 0x400
1a0046d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
1a0046da:	f8ad 500e 	strh.w	r5, [sp, #14]
1a0046de:	4698      	mov	r8, r3
1a0046e0:	ad1a      	add	r5, sp, #104	; 0x68
1a0046e2:	2300      	movs	r3, #0
1a0046e4:	9007      	str	r0, [sp, #28]
1a0046e6:	a816      	add	r0, sp, #88	; 0x58
1a0046e8:	9209      	str	r2, [sp, #36]	; 0x24
1a0046ea:	9306      	str	r3, [sp, #24]
1a0046ec:	9500      	str	r5, [sp, #0]
1a0046ee:	9504      	str	r5, [sp, #16]
1a0046f0:	9102      	str	r1, [sp, #8]
1a0046f2:	9105      	str	r1, [sp, #20]
1a0046f4:	f001 fc76 	bl	1a005fe4 <__retarget_lock_init_recursive>
1a0046f8:	4643      	mov	r3, r8
1a0046fa:	463a      	mov	r2, r7
1a0046fc:	4669      	mov	r1, sp
1a0046fe:	4630      	mov	r0, r6
1a004700:	f7fe fa2e 	bl	1a002b60 <_vfprintf_r>
1a004704:	1e05      	subs	r5, r0, #0
1a004706:	db07      	blt.n	1a004718 <__sbprintf+0x64>
1a004708:	4630      	mov	r0, r6
1a00470a:	4669      	mov	r1, sp
1a00470c:	f001 f8e0 	bl	1a0058d0 <_fflush_r>
1a004710:	2800      	cmp	r0, #0
1a004712:	bf18      	it	ne
1a004714:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
1a004718:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1a00471c:	065b      	lsls	r3, r3, #25
1a00471e:	d503      	bpl.n	1a004728 <__sbprintf+0x74>
1a004720:	89a3      	ldrh	r3, [r4, #12]
1a004722:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004726:	81a3      	strh	r3, [r4, #12]
1a004728:	9816      	ldr	r0, [sp, #88]	; 0x58
1a00472a:	f001 fc5d 	bl	1a005fe8 <__retarget_lock_close_recursive>
1a00472e:	4628      	mov	r0, r5
1a004730:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
1a004734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a004738 <__swsetup_r>:
1a004738:	b538      	push	{r3, r4, r5, lr}
1a00473a:	4b32      	ldr	r3, [pc, #200]	; (1a004804 <__swsetup_r+0xcc>)
1a00473c:	681b      	ldr	r3, [r3, #0]
1a00473e:	4605      	mov	r5, r0
1a004740:	460c      	mov	r4, r1
1a004742:	b10b      	cbz	r3, 1a004748 <__swsetup_r+0x10>
1a004744:	6b9a      	ldr	r2, [r3, #56]	; 0x38
1a004746:	b312      	cbz	r2, 1a00478e <__swsetup_r+0x56>
1a004748:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a00474c:	b293      	uxth	r3, r2
1a00474e:	0718      	lsls	r0, r3, #28
1a004750:	d525      	bpl.n	1a00479e <__swsetup_r+0x66>
1a004752:	6920      	ldr	r0, [r4, #16]
1a004754:	2800      	cmp	r0, #0
1a004756:	d02d      	beq.n	1a0047b4 <__swsetup_r+0x7c>
1a004758:	f013 0201 	ands.w	r2, r3, #1
1a00475c:	d007      	beq.n	1a00476e <__swsetup_r+0x36>
1a00475e:	6963      	ldr	r3, [r4, #20]
1a004760:	2200      	movs	r2, #0
1a004762:	425b      	negs	r3, r3
1a004764:	61a3      	str	r3, [r4, #24]
1a004766:	60a2      	str	r2, [r4, #8]
1a004768:	b138      	cbz	r0, 1a00477a <__swsetup_r+0x42>
1a00476a:	2000      	movs	r0, #0
1a00476c:	bd38      	pop	{r3, r4, r5, pc}
1a00476e:	0799      	lsls	r1, r3, #30
1a004770:	bf58      	it	pl
1a004772:	6962      	ldrpl	r2, [r4, #20]
1a004774:	60a2      	str	r2, [r4, #8]
1a004776:	2800      	cmp	r0, #0
1a004778:	d1f7      	bne.n	1a00476a <__swsetup_r+0x32>
1a00477a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a00477e:	061a      	lsls	r2, r3, #24
1a004780:	d5f4      	bpl.n	1a00476c <__swsetup_r+0x34>
1a004782:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004786:	81a3      	strh	r3, [r4, #12]
1a004788:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00478c:	bd38      	pop	{r3, r4, r5, pc}
1a00478e:	4618      	mov	r0, r3
1a004790:	f001 f8fa 	bl	1a005988 <__sinit>
1a004794:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a004798:	b293      	uxth	r3, r2
1a00479a:	0718      	lsls	r0, r3, #28
1a00479c:	d4d9      	bmi.n	1a004752 <__swsetup_r+0x1a>
1a00479e:	06d9      	lsls	r1, r3, #27
1a0047a0:	d528      	bpl.n	1a0047f4 <__swsetup_r+0xbc>
1a0047a2:	0758      	lsls	r0, r3, #29
1a0047a4:	d412      	bmi.n	1a0047cc <__swsetup_r+0x94>
1a0047a6:	6920      	ldr	r0, [r4, #16]
1a0047a8:	f042 0308 	orr.w	r3, r2, #8
1a0047ac:	81a3      	strh	r3, [r4, #12]
1a0047ae:	b29b      	uxth	r3, r3
1a0047b0:	2800      	cmp	r0, #0
1a0047b2:	d1d1      	bne.n	1a004758 <__swsetup_r+0x20>
1a0047b4:	f403 7220 	and.w	r2, r3, #640	; 0x280
1a0047b8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
1a0047bc:	d0cc      	beq.n	1a004758 <__swsetup_r+0x20>
1a0047be:	4628      	mov	r0, r5
1a0047c0:	4621      	mov	r1, r4
1a0047c2:	f001 fc45 	bl	1a006050 <__smakebuf_r>
1a0047c6:	89a3      	ldrh	r3, [r4, #12]
1a0047c8:	6920      	ldr	r0, [r4, #16]
1a0047ca:	e7c5      	b.n	1a004758 <__swsetup_r+0x20>
1a0047cc:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a0047ce:	b151      	cbz	r1, 1a0047e6 <__swsetup_r+0xae>
1a0047d0:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a0047d4:	4299      	cmp	r1, r3
1a0047d6:	d004      	beq.n	1a0047e2 <__swsetup_r+0xaa>
1a0047d8:	4628      	mov	r0, r5
1a0047da:	f001 f95b 	bl	1a005a94 <_free_r>
1a0047de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a0047e2:	2300      	movs	r3, #0
1a0047e4:	6323      	str	r3, [r4, #48]	; 0x30
1a0047e6:	2300      	movs	r3, #0
1a0047e8:	6920      	ldr	r0, [r4, #16]
1a0047ea:	6063      	str	r3, [r4, #4]
1a0047ec:	f022 0224 	bic.w	r2, r2, #36	; 0x24
1a0047f0:	6020      	str	r0, [r4, #0]
1a0047f2:	e7d9      	b.n	1a0047a8 <__swsetup_r+0x70>
1a0047f4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
1a0047f8:	2309      	movs	r3, #9
1a0047fa:	602b      	str	r3, [r5, #0]
1a0047fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a004800:	81a2      	strh	r2, [r4, #12]
1a004802:	bd38      	pop	{r3, r4, r5, pc}
1a004804:	10000048 	.word	0x10000048

1a004808 <quorem>:
1a004808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a00480c:	6903      	ldr	r3, [r0, #16]
1a00480e:	690f      	ldr	r7, [r1, #16]
1a004810:	42bb      	cmp	r3, r7
1a004812:	b083      	sub	sp, #12
1a004814:	f2c0 8086 	blt.w	1a004924 <quorem+0x11c>
1a004818:	3f01      	subs	r7, #1
1a00481a:	f101 0614 	add.w	r6, r1, #20
1a00481e:	f100 0a14 	add.w	sl, r0, #20
1a004822:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
1a004826:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a00482a:	00bc      	lsls	r4, r7, #2
1a00482c:	3301      	adds	r3, #1
1a00482e:	9400      	str	r4, [sp, #0]
1a004830:	eb06 0904 	add.w	r9, r6, r4
1a004834:	429a      	cmp	r2, r3
1a004836:	4454      	add	r4, sl
1a004838:	fbb2 f8f3 	udiv	r8, r2, r3
1a00483c:	9401      	str	r4, [sp, #4]
1a00483e:	d33a      	bcc.n	1a0048b6 <quorem+0xae>
1a004840:	2500      	movs	r5, #0
1a004842:	462a      	mov	r2, r5
1a004844:	46b6      	mov	lr, r6
1a004846:	46d4      	mov	ip, sl
1a004848:	f85e 4b04 	ldr.w	r4, [lr], #4
1a00484c:	f8dc 3000 	ldr.w	r3, [ip]
1a004850:	fa1f fb84 	uxth.w	fp, r4
1a004854:	fb08 550b 	mla	r5, r8, fp, r5
1a004858:	ea4f 4b15 	mov.w	fp, r5, lsr #16
1a00485c:	0c24      	lsrs	r4, r4, #16
1a00485e:	fb08 b404 	mla	r4, r8, r4, fp
1a004862:	b2ad      	uxth	r5, r5
1a004864:	1b55      	subs	r5, r2, r5
1a004866:	b2a2      	uxth	r2, r4
1a004868:	ebc2 4213 	rsb	r2, r2, r3, lsr #16
1a00486c:	fa15 f383 	uxtah	r3, r5, r3
1a004870:	eb02 4223 	add.w	r2, r2, r3, asr #16
1a004874:	b29b      	uxth	r3, r3
1a004876:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a00487a:	45f1      	cmp	r9, lr
1a00487c:	ea4f 4514 	mov.w	r5, r4, lsr #16
1a004880:	f84c 3b04 	str.w	r3, [ip], #4
1a004884:	ea4f 4222 	mov.w	r2, r2, asr #16
1a004888:	d2de      	bcs.n	1a004848 <quorem+0x40>
1a00488a:	9b00      	ldr	r3, [sp, #0]
1a00488c:	f85a 3003 	ldr.w	r3, [sl, r3]
1a004890:	b98b      	cbnz	r3, 1a0048b6 <quorem+0xae>
1a004892:	9a01      	ldr	r2, [sp, #4]
1a004894:	1f13      	subs	r3, r2, #4
1a004896:	459a      	cmp	sl, r3
1a004898:	d20c      	bcs.n	1a0048b4 <quorem+0xac>
1a00489a:	f852 3c04 	ldr.w	r3, [r2, #-4]
1a00489e:	b94b      	cbnz	r3, 1a0048b4 <quorem+0xac>
1a0048a0:	f1a2 0308 	sub.w	r3, r2, #8
1a0048a4:	e002      	b.n	1a0048ac <quorem+0xa4>
1a0048a6:	681a      	ldr	r2, [r3, #0]
1a0048a8:	3b04      	subs	r3, #4
1a0048aa:	b91a      	cbnz	r2, 1a0048b4 <quorem+0xac>
1a0048ac:	459a      	cmp	sl, r3
1a0048ae:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
1a0048b2:	d3f8      	bcc.n	1a0048a6 <quorem+0x9e>
1a0048b4:	6107      	str	r7, [r0, #16]
1a0048b6:	4604      	mov	r4, r0
1a0048b8:	f002 f9a8 	bl	1a006c0c <__mcmp>
1a0048bc:	2800      	cmp	r0, #0
1a0048be:	db2d      	blt.n	1a00491c <quorem+0x114>
1a0048c0:	f108 0801 	add.w	r8, r8, #1
1a0048c4:	4650      	mov	r0, sl
1a0048c6:	2300      	movs	r3, #0
1a0048c8:	f856 1b04 	ldr.w	r1, [r6], #4
1a0048cc:	6805      	ldr	r5, [r0, #0]
1a0048ce:	b28a      	uxth	r2, r1
1a0048d0:	1a9a      	subs	r2, r3, r2
1a0048d2:	0c0b      	lsrs	r3, r1, #16
1a0048d4:	fa12 f285 	uxtah	r2, r2, r5
1a0048d8:	ebc3 4315 	rsb	r3, r3, r5, lsr #16
1a0048dc:	eb03 4322 	add.w	r3, r3, r2, asr #16
1a0048e0:	b292      	uxth	r2, r2
1a0048e2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a0048e6:	45b1      	cmp	r9, r6
1a0048e8:	f840 2b04 	str.w	r2, [r0], #4
1a0048ec:	ea4f 4323 	mov.w	r3, r3, asr #16
1a0048f0:	d2ea      	bcs.n	1a0048c8 <quorem+0xc0>
1a0048f2:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a0048f6:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
1a0048fa:	b97a      	cbnz	r2, 1a00491c <quorem+0x114>
1a0048fc:	1f1a      	subs	r2, r3, #4
1a0048fe:	4592      	cmp	sl, r2
1a004900:	d20b      	bcs.n	1a00491a <quorem+0x112>
1a004902:	f853 2c04 	ldr.w	r2, [r3, #-4]
1a004906:	b942      	cbnz	r2, 1a00491a <quorem+0x112>
1a004908:	3b08      	subs	r3, #8
1a00490a:	e002      	b.n	1a004912 <quorem+0x10a>
1a00490c:	681a      	ldr	r2, [r3, #0]
1a00490e:	3b04      	subs	r3, #4
1a004910:	b91a      	cbnz	r2, 1a00491a <quorem+0x112>
1a004912:	459a      	cmp	sl, r3
1a004914:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
1a004918:	d3f8      	bcc.n	1a00490c <quorem+0x104>
1a00491a:	6127      	str	r7, [r4, #16]
1a00491c:	4640      	mov	r0, r8
1a00491e:	b003      	add	sp, #12
1a004920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004924:	2000      	movs	r0, #0
1a004926:	b003      	add	sp, #12
1a004928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00492c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a004930 <_dtoa_r>:
1a004930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a004934:	ec57 6b10 	vmov	r6, r7, d0
1a004938:	b097      	sub	sp, #92	; 0x5c
1a00493a:	6c05      	ldr	r5, [r0, #64]	; 0x40
1a00493c:	9c20      	ldr	r4, [sp, #128]	; 0x80
1a00493e:	9102      	str	r1, [sp, #8]
1a004940:	4682      	mov	sl, r0
1a004942:	920a      	str	r2, [sp, #40]	; 0x28
1a004944:	9307      	str	r3, [sp, #28]
1a004946:	e9cd 6700 	strd	r6, r7, [sp]
1a00494a:	b155      	cbz	r5, 1a004962 <_dtoa_r+0x32>
1a00494c:	6c42      	ldr	r2, [r0, #68]	; 0x44
1a00494e:	606a      	str	r2, [r5, #4]
1a004950:	2301      	movs	r3, #1
1a004952:	4093      	lsls	r3, r2
1a004954:	60ab      	str	r3, [r5, #8]
1a004956:	4629      	mov	r1, r5
1a004958:	f001 ff6c 	bl	1a006834 <_Bfree>
1a00495c:	2300      	movs	r3, #0
1a00495e:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
1a004962:	1e3e      	subs	r6, r7, #0
1a004964:	bfb4      	ite	lt
1a004966:	2301      	movlt	r3, #1
1a004968:	2300      	movge	r3, #0
1a00496a:	6023      	str	r3, [r4, #0]
1a00496c:	4b76      	ldr	r3, [pc, #472]	; (1a004b48 <_dtoa_r+0x218>)
1a00496e:	bfbc      	itt	lt
1a004970:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
1a004974:	9601      	strlt	r6, [sp, #4]
1a004976:	43b3      	bics	r3, r6
1a004978:	f000 80ae 	beq.w	1a004ad8 <_dtoa_r+0x1a8>
1a00497c:	ed9d 7b00 	vldr	d7, [sp]
1a004980:	2200      	movs	r2, #0
1a004982:	2300      	movs	r3, #0
1a004984:	ec51 0b17 	vmov	r0, r1, d7
1a004988:	ed8d 7b04 	vstr	d7, [sp, #16]
1a00498c:	f7fd fd86 	bl	1a00249c <__aeabi_dcmpeq>
1a004990:	4605      	mov	r5, r0
1a004992:	b178      	cbz	r0, 1a0049b4 <_dtoa_r+0x84>
1a004994:	9a07      	ldr	r2, [sp, #28]
1a004996:	2301      	movs	r3, #1
1a004998:	6013      	str	r3, [r2, #0]
1a00499a:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a00499c:	2b00      	cmp	r3, #0
1a00499e:	f000 8313 	beq.w	1a004fc8 <_dtoa_r+0x698>
1a0049a2:	4b6a      	ldr	r3, [pc, #424]	; (1a004b4c <_dtoa_r+0x21c>)
1a0049a4:	9a21      	ldr	r2, [sp, #132]	; 0x84
1a0049a6:	6013      	str	r3, [r2, #0]
1a0049a8:	3b01      	subs	r3, #1
1a0049aa:	9303      	str	r3, [sp, #12]
1a0049ac:	9803      	ldr	r0, [sp, #12]
1a0049ae:	b017      	add	sp, #92	; 0x5c
1a0049b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0049b4:	e9dd 7804 	ldrd	r7, r8, [sp, #16]
1a0049b8:	aa14      	add	r2, sp, #80	; 0x50
1a0049ba:	a915      	add	r1, sp, #84	; 0x54
1a0049bc:	ec48 7b10 	vmov	d0, r7, r8
1a0049c0:	4650      	mov	r0, sl
1a0049c2:	f002 f9bb 	bl	1a006d3c <__d2b>
1a0049c6:	0d34      	lsrs	r4, r6, #20
1a0049c8:	4683      	mov	fp, r0
1a0049ca:	f040 809b 	bne.w	1a004b04 <_dtoa_r+0x1d4>
1a0049ce:	e9dd 5414 	ldrd	r5, r4, [sp, #80]	; 0x50
1a0049d2:	442c      	add	r4, r5
1a0049d4:	f204 4332 	addw	r3, r4, #1074	; 0x432
1a0049d8:	2b20      	cmp	r3, #32
1a0049da:	f340 83bb 	ble.w	1a005154 <_dtoa_r+0x824>
1a0049de:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
1a0049e2:	409e      	lsls	r6, r3
1a0049e4:	9b00      	ldr	r3, [sp, #0]
1a0049e6:	f204 4012 	addw	r0, r4, #1042	; 0x412
1a0049ea:	fa23 f000 	lsr.w	r0, r3, r0
1a0049ee:	4330      	orrs	r0, r6
1a0049f0:	f7fd fa72 	bl	1a001ed8 <__aeabi_ui2d>
1a0049f4:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
1a0049f8:	2101      	movs	r1, #1
1a0049fa:	4602      	mov	r2, r0
1a0049fc:	3c01      	subs	r4, #1
1a0049fe:	910e      	str	r1, [sp, #56]	; 0x38
1a004a00:	4610      	mov	r0, r2
1a004a02:	4619      	mov	r1, r3
1a004a04:	2200      	movs	r2, #0
1a004a06:	4b52      	ldr	r3, [pc, #328]	; (1a004b50 <_dtoa_r+0x220>)
1a004a08:	f7fd f928 	bl	1a001c5c <__aeabi_dsub>
1a004a0c:	a348      	add	r3, pc, #288	; (adr r3, 1a004b30 <_dtoa_r+0x200>)
1a004a0e:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004a12:	f7fd fadb 	bl	1a001fcc <__aeabi_dmul>
1a004a16:	a348      	add	r3, pc, #288	; (adr r3, 1a004b38 <_dtoa_r+0x208>)
1a004a18:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004a1c:	f7fd f920 	bl	1a001c60 <__adddf3>
1a004a20:	4606      	mov	r6, r0
1a004a22:	4620      	mov	r0, r4
1a004a24:	460f      	mov	r7, r1
1a004a26:	f7fd fa67 	bl	1a001ef8 <__aeabi_i2d>
1a004a2a:	a345      	add	r3, pc, #276	; (adr r3, 1a004b40 <_dtoa_r+0x210>)
1a004a2c:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004a30:	f7fd facc 	bl	1a001fcc <__aeabi_dmul>
1a004a34:	4602      	mov	r2, r0
1a004a36:	460b      	mov	r3, r1
1a004a38:	4630      	mov	r0, r6
1a004a3a:	4639      	mov	r1, r7
1a004a3c:	f7fd f910 	bl	1a001c60 <__adddf3>
1a004a40:	4606      	mov	r6, r0
1a004a42:	460f      	mov	r7, r1
1a004a44:	f002 fe58 	bl	1a0076f8 <__aeabi_d2iz>
1a004a48:	2200      	movs	r2, #0
1a004a4a:	4681      	mov	r9, r0
1a004a4c:	2300      	movs	r3, #0
1a004a4e:	4630      	mov	r0, r6
1a004a50:	4639      	mov	r1, r7
1a004a52:	f7fd fd2d 	bl	1a0024b0 <__aeabi_dcmplt>
1a004a56:	2800      	cmp	r0, #0
1a004a58:	f040 82a9 	bne.w	1a004fae <_dtoa_r+0x67e>
1a004a5c:	1b2c      	subs	r4, r5, r4
1a004a5e:	f1b9 0f16 	cmp.w	r9, #22
1a004a62:	f104 38ff 	add.w	r8, r4, #4294967295	; 0xffffffff
1a004a66:	f200 8296 	bhi.w	1a004f96 <_dtoa_r+0x666>
1a004a6a:	4b3a      	ldr	r3, [pc, #232]	; (1a004b54 <_dtoa_r+0x224>)
1a004a6c:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
1a004a70:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004a74:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a004a78:	f7fd fd1a 	bl	1a0024b0 <__aeabi_dcmplt>
1a004a7c:	2800      	cmp	r0, #0
1a004a7e:	d06f      	beq.n	1a004b60 <_dtoa_r+0x230>
1a004a80:	2300      	movs	r3, #0
1a004a82:	f1b8 0f00 	cmp.w	r8, #0
1a004a86:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
1a004a8a:	930d      	str	r3, [sp, #52]	; 0x34
1a004a8c:	f2c0 8289 	blt.w	1a004fa2 <_dtoa_r+0x672>
1a004a90:	2300      	movs	r3, #0
1a004a92:	9308      	str	r3, [sp, #32]
1a004a94:	f1b9 0f00 	cmp.w	r9, #0
1a004a98:	da68      	bge.n	1a004b6c <_dtoa_r+0x23c>
1a004a9a:	9b08      	ldr	r3, [sp, #32]
1a004a9c:	f8cd 9018 	str.w	r9, [sp, #24]
1a004aa0:	eba3 0309 	sub.w	r3, r3, r9
1a004aa4:	9308      	str	r3, [sp, #32]
1a004aa6:	f1c9 0300 	rsb	r3, r9, #0
1a004aaa:	930c      	str	r3, [sp, #48]	; 0x30
1a004aac:	9b02      	ldr	r3, [sp, #8]
1a004aae:	2b09      	cmp	r3, #9
1a004ab0:	f04f 0900 	mov.w	r9, #0
1a004ab4:	d862      	bhi.n	1a004b7c <_dtoa_r+0x24c>
1a004ab6:	2b05      	cmp	r3, #5
1a004ab8:	f340 834a 	ble.w	1a005150 <_dtoa_r+0x820>
1a004abc:	3b04      	subs	r3, #4
1a004abe:	9302      	str	r3, [sp, #8]
1a004ac0:	2400      	movs	r4, #0
1a004ac2:	9b02      	ldr	r3, [sp, #8]
1a004ac4:	3b02      	subs	r3, #2
1a004ac6:	2b03      	cmp	r3, #3
1a004ac8:	f200 8641 	bhi.w	1a00574e <_dtoa_r+0xe1e>
1a004acc:	e8df f013 	tbh	[pc, r3, lsl #1]
1a004ad0:	04630466 	.word	0x04630466
1a004ad4:	0456043b 	.word	0x0456043b
1a004ad8:	9a07      	ldr	r2, [sp, #28]
1a004ada:	f242 730f 	movw	r3, #9999	; 0x270f
1a004ade:	6013      	str	r3, [r2, #0]
1a004ae0:	9b00      	ldr	r3, [sp, #0]
1a004ae2:	f3c6 0613 	ubfx	r6, r6, #0, #20
1a004ae6:	4333      	orrs	r3, r6
1a004ae8:	d118      	bne.n	1a004b1c <_dtoa_r+0x1ec>
1a004aea:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004aec:	2b00      	cmp	r3, #0
1a004aee:	f000 8625 	beq.w	1a00573c <_dtoa_r+0xe0c>
1a004af2:	4b19      	ldr	r3, [pc, #100]	; (1a004b58 <_dtoa_r+0x228>)
1a004af4:	9303      	str	r3, [sp, #12]
1a004af6:	3308      	adds	r3, #8
1a004af8:	9a21      	ldr	r2, [sp, #132]	; 0x84
1a004afa:	9803      	ldr	r0, [sp, #12]
1a004afc:	6013      	str	r3, [r2, #0]
1a004afe:	b017      	add	sp, #92	; 0x5c
1a004b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004b04:	f3c8 0113 	ubfx	r1, r8, #0, #20
1a004b08:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
1a004b0c:	950e      	str	r5, [sp, #56]	; 0x38
1a004b0e:	463a      	mov	r2, r7
1a004b10:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
1a004b14:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
1a004b18:	9d14      	ldr	r5, [sp, #80]	; 0x50
1a004b1a:	e771      	b.n	1a004a00 <_dtoa_r+0xd0>
1a004b1c:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004b1e:	2b00      	cmp	r3, #0
1a004b20:	f040 8400 	bne.w	1a005324 <_dtoa_r+0x9f4>
1a004b24:	4b0d      	ldr	r3, [pc, #52]	; (1a004b5c <_dtoa_r+0x22c>)
1a004b26:	9303      	str	r3, [sp, #12]
1a004b28:	e740      	b.n	1a0049ac <_dtoa_r+0x7c>
1a004b2a:	bf00      	nop
1a004b2c:	f3af 8000 	nop.w
1a004b30:	636f4361 	.word	0x636f4361
1a004b34:	3fd287a7 	.word	0x3fd287a7
1a004b38:	8b60c8b3 	.word	0x8b60c8b3
1a004b3c:	3fc68a28 	.word	0x3fc68a28
1a004b40:	509f79fb 	.word	0x509f79fb
1a004b44:	3fd34413 	.word	0x3fd34413
1a004b48:	7ff00000 	.word	0x7ff00000
1a004b4c:	1a007a05 	.word	0x1a007a05
1a004b50:	3ff80000 	.word	0x3ff80000
1a004b54:	1a007a60 	.word	0x1a007a60
1a004b58:	1a007a2c 	.word	0x1a007a2c
1a004b5c:	1a007a28 	.word	0x1a007a28
1a004b60:	f1b8 0f00 	cmp.w	r8, #0
1a004b64:	f2c0 84b6 	blt.w	1a0054d4 <_dtoa_r+0xba4>
1a004b68:	900d      	str	r0, [sp, #52]	; 0x34
1a004b6a:	9008      	str	r0, [sp, #32]
1a004b6c:	2300      	movs	r3, #0
1a004b6e:	930c      	str	r3, [sp, #48]	; 0x30
1a004b70:	9b02      	ldr	r3, [sp, #8]
1a004b72:	f8cd 9018 	str.w	r9, [sp, #24]
1a004b76:	2b09      	cmp	r3, #9
1a004b78:	44c8      	add	r8, r9
1a004b7a:	d99c      	bls.n	1a004ab6 <_dtoa_r+0x186>
1a004b7c:	2300      	movs	r3, #0
1a004b7e:	2401      	movs	r4, #1
1a004b80:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
1a004b84:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
1a004b88:	9302      	str	r3, [sp, #8]
1a004b8a:	9509      	str	r5, [sp, #36]	; 0x24
1a004b8c:	2100      	movs	r1, #0
1a004b8e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a004b92:	950f      	str	r5, [sp, #60]	; 0x3c
1a004b94:	4650      	mov	r0, sl
1a004b96:	f001 fe27 	bl	1a0067e8 <_Balloc>
1a004b9a:	2d0e      	cmp	r5, #14
1a004b9c:	9003      	str	r0, [sp, #12]
1a004b9e:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
1a004ba2:	f200 810a 	bhi.w	1a004dba <_dtoa_r+0x48a>
1a004ba6:	2c00      	cmp	r4, #0
1a004ba8:	f000 8107 	beq.w	1a004dba <_dtoa_r+0x48a>
1a004bac:	9906      	ldr	r1, [sp, #24]
1a004bae:	2900      	cmp	r1, #0
1a004bb0:	f340 8466 	ble.w	1a005480 <_dtoa_r+0xb50>
1a004bb4:	4bb1      	ldr	r3, [pc, #708]	; (1a004e7c <_dtoa_r+0x54c>)
1a004bb6:	f001 020f 	and.w	r2, r1, #15
1a004bba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a004bbe:	ed93 7b00 	vldr	d7, [r3]
1a004bc2:	110c      	asrs	r4, r1, #4
1a004bc4:	06e3      	lsls	r3, r4, #27
1a004bc6:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a004bca:	f140 8406 	bpl.w	1a0053da <_dtoa_r+0xaaa>
1a004bce:	4bac      	ldr	r3, [pc, #688]	; (1a004e80 <_dtoa_r+0x550>)
1a004bd0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a004bd4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
1a004bd8:	f7fd fb22 	bl	1a002220 <__aeabi_ddiv>
1a004bdc:	e9cd 0100 	strd	r0, r1, [sp]
1a004be0:	f004 040f 	and.w	r4, r4, #15
1a004be4:	2603      	movs	r6, #3
1a004be6:	b17c      	cbz	r4, 1a004c08 <_dtoa_r+0x2d8>
1a004be8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a004bec:	4da4      	ldr	r5, [pc, #656]	; (1a004e80 <_dtoa_r+0x550>)
1a004bee:	07e7      	lsls	r7, r4, #31
1a004bf0:	d504      	bpl.n	1a004bfc <_dtoa_r+0x2cc>
1a004bf2:	e9d5 2300 	ldrd	r2, r3, [r5]
1a004bf6:	f7fd f9e9 	bl	1a001fcc <__aeabi_dmul>
1a004bfa:	3601      	adds	r6, #1
1a004bfc:	1064      	asrs	r4, r4, #1
1a004bfe:	f105 0508 	add.w	r5, r5, #8
1a004c02:	d1f4      	bne.n	1a004bee <_dtoa_r+0x2be>
1a004c04:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
1a004c08:	e9dd 0100 	ldrd	r0, r1, [sp]
1a004c0c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
1a004c10:	f7fd fb06 	bl	1a002220 <__aeabi_ddiv>
1a004c14:	e9cd 0100 	strd	r0, r1, [sp]
1a004c18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a004c1a:	b153      	cbz	r3, 1a004c32 <_dtoa_r+0x302>
1a004c1c:	e9dd 4500 	ldrd	r4, r5, [sp]
1a004c20:	2200      	movs	r2, #0
1a004c22:	4b98      	ldr	r3, [pc, #608]	; (1a004e84 <_dtoa_r+0x554>)
1a004c24:	4620      	mov	r0, r4
1a004c26:	4629      	mov	r1, r5
1a004c28:	f7fd fc42 	bl	1a0024b0 <__aeabi_dcmplt>
1a004c2c:	2800      	cmp	r0, #0
1a004c2e:	f040 8521 	bne.w	1a005674 <_dtoa_r+0xd44>
1a004c32:	4630      	mov	r0, r6
1a004c34:	f7fd f960 	bl	1a001ef8 <__aeabi_i2d>
1a004c38:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004c3c:	f7fd f9c6 	bl	1a001fcc <__aeabi_dmul>
1a004c40:	4b91      	ldr	r3, [pc, #580]	; (1a004e88 <_dtoa_r+0x558>)
1a004c42:	2200      	movs	r2, #0
1a004c44:	f7fd f80c 	bl	1a001c60 <__adddf3>
1a004c48:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004c4a:	4604      	mov	r4, r0
1a004c4c:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a004c50:	2b00      	cmp	r3, #0
1a004c52:	f000 83f9 	beq.w	1a005448 <_dtoa_r+0xb18>
1a004c56:	9b06      	ldr	r3, [sp, #24]
1a004c58:	9312      	str	r3, [sp, #72]	; 0x48
1a004c5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004c5c:	9310      	str	r3, [sp, #64]	; 0x40
1a004c5e:	e9dd 6700 	ldrd	r6, r7, [sp]
1a004c62:	4639      	mov	r1, r7
1a004c64:	4630      	mov	r0, r6
1a004c66:	f002 fd47 	bl	1a0076f8 <__aeabi_d2iz>
1a004c6a:	9000      	str	r0, [sp, #0]
1a004c6c:	f7fd f944 	bl	1a001ef8 <__aeabi_i2d>
1a004c70:	4602      	mov	r2, r0
1a004c72:	460b      	mov	r3, r1
1a004c74:	4630      	mov	r0, r6
1a004c76:	4639      	mov	r1, r7
1a004c78:	f7fc fff0 	bl	1a001c5c <__aeabi_dsub>
1a004c7c:	4b7f      	ldr	r3, [pc, #508]	; (1a004e7c <_dtoa_r+0x54c>)
1a004c7e:	9a00      	ldr	r2, [sp, #0]
1a004c80:	460f      	mov	r7, r1
1a004c82:	9910      	ldr	r1, [sp, #64]	; 0x40
1a004c84:	4606      	mov	r6, r0
1a004c86:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1a004c8a:	980b      	ldr	r0, [sp, #44]	; 0x2c
1a004c8c:	9903      	ldr	r1, [sp, #12]
1a004c8e:	3230      	adds	r2, #48	; 0x30
1a004c90:	e9cd 4500 	strd	r4, r5, [sp]
1a004c94:	b2d5      	uxtb	r5, r2
1a004c96:	1c4c      	adds	r4, r1, #1
1a004c98:	e953 2302 	ldrd	r2, r3, [r3, #-8]
1a004c9c:	2800      	cmp	r0, #0
1a004c9e:	f000 848d 	beq.w	1a0055bc <_dtoa_r+0xc8c>
1a004ca2:	2000      	movs	r0, #0
1a004ca4:	4979      	ldr	r1, [pc, #484]	; (1a004e8c <_dtoa_r+0x55c>)
1a004ca6:	f7fd fabb 	bl	1a002220 <__aeabi_ddiv>
1a004caa:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004cae:	f7fc ffd5 	bl	1a001c5c <__aeabi_dsub>
1a004cb2:	9b03      	ldr	r3, [sp, #12]
1a004cb4:	4632      	mov	r2, r6
1a004cb6:	701d      	strb	r5, [r3, #0]
1a004cb8:	463b      	mov	r3, r7
1a004cba:	e9cd 0100 	strd	r0, r1, [sp]
1a004cbe:	f7fd fc15 	bl	1a0024ec <__aeabi_dcmpgt>
1a004cc2:	2800      	cmp	r0, #0
1a004cc4:	f040 84ca 	bne.w	1a00565c <_dtoa_r+0xd2c>
1a004cc8:	4632      	mov	r2, r6
1a004cca:	463b      	mov	r3, r7
1a004ccc:	2000      	movs	r0, #0
1a004cce:	496d      	ldr	r1, [pc, #436]	; (1a004e84 <_dtoa_r+0x554>)
1a004cd0:	f7fc ffc4 	bl	1a001c5c <__aeabi_dsub>
1a004cd4:	4602      	mov	r2, r0
1a004cd6:	460b      	mov	r3, r1
1a004cd8:	e9dd 0100 	ldrd	r0, r1, [sp]
1a004cdc:	f7fd fc06 	bl	1a0024ec <__aeabi_dcmpgt>
1a004ce0:	2800      	cmp	r0, #0
1a004ce2:	f040 8526 	bne.w	1a005732 <_dtoa_r+0xe02>
1a004ce6:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a004ce8:	2b01      	cmp	r3, #1
1a004cea:	d062      	beq.n	1a004db2 <_dtoa_r+0x482>
1a004cec:	9a03      	ldr	r2, [sp, #12]
1a004cee:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a004cf2:	4413      	add	r3, r2
1a004cf4:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
1a004cf8:	e9dd 8900 	ldrd	r8, r9, [sp]
1a004cfc:	f8cd b000 	str.w	fp, [sp]
1a004d00:	46d3      	mov	fp, sl
1a004d02:	469a      	mov	sl, r3
1a004d04:	e00c      	b.n	1a004d20 <_dtoa_r+0x3f0>
1a004d06:	2000      	movs	r0, #0
1a004d08:	495e      	ldr	r1, [pc, #376]	; (1a004e84 <_dtoa_r+0x554>)
1a004d0a:	f7fc ffa7 	bl	1a001c5c <__aeabi_dsub>
1a004d0e:	4642      	mov	r2, r8
1a004d10:	464b      	mov	r3, r9
1a004d12:	f7fd fbcd 	bl	1a0024b0 <__aeabi_dcmplt>
1a004d16:	2800      	cmp	r0, #0
1a004d18:	f040 84eb 	bne.w	1a0056f2 <_dtoa_r+0xdc2>
1a004d1c:	45a2      	cmp	sl, r4
1a004d1e:	d041      	beq.n	1a004da4 <_dtoa_r+0x474>
1a004d20:	4640      	mov	r0, r8
1a004d22:	4649      	mov	r1, r9
1a004d24:	2200      	movs	r2, #0
1a004d26:	4b5a      	ldr	r3, [pc, #360]	; (1a004e90 <_dtoa_r+0x560>)
1a004d28:	f7fd f950 	bl	1a001fcc <__aeabi_dmul>
1a004d2c:	2200      	movs	r2, #0
1a004d2e:	4b58      	ldr	r3, [pc, #352]	; (1a004e90 <_dtoa_r+0x560>)
1a004d30:	4680      	mov	r8, r0
1a004d32:	4689      	mov	r9, r1
1a004d34:	4630      	mov	r0, r6
1a004d36:	4639      	mov	r1, r7
1a004d38:	f7fd f948 	bl	1a001fcc <__aeabi_dmul>
1a004d3c:	460f      	mov	r7, r1
1a004d3e:	4606      	mov	r6, r0
1a004d40:	f002 fcda 	bl	1a0076f8 <__aeabi_d2iz>
1a004d44:	4605      	mov	r5, r0
1a004d46:	f7fd f8d7 	bl	1a001ef8 <__aeabi_i2d>
1a004d4a:	4602      	mov	r2, r0
1a004d4c:	460b      	mov	r3, r1
1a004d4e:	4630      	mov	r0, r6
1a004d50:	4639      	mov	r1, r7
1a004d52:	f7fc ff83 	bl	1a001c5c <__aeabi_dsub>
1a004d56:	3530      	adds	r5, #48	; 0x30
1a004d58:	b2ed      	uxtb	r5, r5
1a004d5a:	4642      	mov	r2, r8
1a004d5c:	464b      	mov	r3, r9
1a004d5e:	f804 5b01 	strb.w	r5, [r4], #1
1a004d62:	4606      	mov	r6, r0
1a004d64:	460f      	mov	r7, r1
1a004d66:	f7fd fba3 	bl	1a0024b0 <__aeabi_dcmplt>
1a004d6a:	4632      	mov	r2, r6
1a004d6c:	463b      	mov	r3, r7
1a004d6e:	2800      	cmp	r0, #0
1a004d70:	d0c9      	beq.n	1a004d06 <_dtoa_r+0x3d6>
1a004d72:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a004d74:	46da      	mov	sl, fp
1a004d76:	3301      	adds	r3, #1
1a004d78:	f8dd b000 	ldr.w	fp, [sp]
1a004d7c:	9306      	str	r3, [sp, #24]
1a004d7e:	4659      	mov	r1, fp
1a004d80:	4650      	mov	r0, sl
1a004d82:	f001 fd57 	bl	1a006834 <_Bfree>
1a004d86:	2300      	movs	r3, #0
1a004d88:	7023      	strb	r3, [r4, #0]
1a004d8a:	9b07      	ldr	r3, [sp, #28]
1a004d8c:	461a      	mov	r2, r3
1a004d8e:	9b06      	ldr	r3, [sp, #24]
1a004d90:	6013      	str	r3, [r2, #0]
1a004d92:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004d94:	2b00      	cmp	r3, #0
1a004d96:	f43f ae09 	beq.w	1a0049ac <_dtoa_r+0x7c>
1a004d9a:	9803      	ldr	r0, [sp, #12]
1a004d9c:	601c      	str	r4, [r3, #0]
1a004d9e:	b017      	add	sp, #92	; 0x5c
1a004da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004da4:	46da      	mov	sl, fp
1a004da6:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
1a004daa:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
1a004dae:	f8dd b000 	ldr.w	fp, [sp]
1a004db2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1a004db6:	e9cd 3400 	strd	r3, r4, [sp]
1a004dba:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a004dbc:	2b00      	cmp	r3, #0
1a004dbe:	f2c0 80c9 	blt.w	1a004f54 <_dtoa_r+0x624>
1a004dc2:	9a06      	ldr	r2, [sp, #24]
1a004dc4:	2a0e      	cmp	r2, #14
1a004dc6:	f300 80c5 	bgt.w	1a004f54 <_dtoa_r+0x624>
1a004dca:	4b2c      	ldr	r3, [pc, #176]	; (1a004e7c <_dtoa_r+0x54c>)
1a004dcc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a004dd0:	e9d3 8900 	ldrd	r8, r9, [r3]
1a004dd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004dd6:	2b00      	cmp	r3, #0
1a004dd8:	da17      	bge.n	1a004e0a <_dtoa_r+0x4da>
1a004dda:	9f09      	ldr	r7, [sp, #36]	; 0x24
1a004ddc:	2f00      	cmp	r7, #0
1a004dde:	dc14      	bgt.n	1a004e0a <_dtoa_r+0x4da>
1a004de0:	f040 834b 	bne.w	1a00547a <_dtoa_r+0xb4a>
1a004de4:	2200      	movs	r2, #0
1a004de6:	4b2b      	ldr	r3, [pc, #172]	; (1a004e94 <_dtoa_r+0x564>)
1a004de8:	4640      	mov	r0, r8
1a004dea:	4649      	mov	r1, r9
1a004dec:	f7fd f8ee 	bl	1a001fcc <__aeabi_dmul>
1a004df0:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004df4:	f7fd fb70 	bl	1a0024d8 <__aeabi_dcmpge>
1a004df8:	2800      	cmp	r0, #0
1a004dfa:	f000 83be 	beq.w	1a00557a <_dtoa_r+0xc4a>
1a004dfe:	9f09      	ldr	r7, [sp, #36]	; 0x24
1a004e00:	463d      	mov	r5, r7
1a004e02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004e04:	9c03      	ldr	r4, [sp, #12]
1a004e06:	43db      	mvns	r3, r3
1a004e08:	e260      	b.n	1a0052cc <_dtoa_r+0x99c>
1a004e0a:	e9dd 4500 	ldrd	r4, r5, [sp]
1a004e0e:	4642      	mov	r2, r8
1a004e10:	464b      	mov	r3, r9
1a004e12:	4620      	mov	r0, r4
1a004e14:	4629      	mov	r1, r5
1a004e16:	f7fd fa03 	bl	1a002220 <__aeabi_ddiv>
1a004e1a:	f002 fc6d 	bl	1a0076f8 <__aeabi_d2iz>
1a004e1e:	9000      	str	r0, [sp, #0]
1a004e20:	f7fd f86a 	bl	1a001ef8 <__aeabi_i2d>
1a004e24:	4642      	mov	r2, r8
1a004e26:	464b      	mov	r3, r9
1a004e28:	f7fd f8d0 	bl	1a001fcc <__aeabi_dmul>
1a004e2c:	4602      	mov	r2, r0
1a004e2e:	460b      	mov	r3, r1
1a004e30:	4620      	mov	r0, r4
1a004e32:	4629      	mov	r1, r5
1a004e34:	f7fc ff12 	bl	1a001c5c <__aeabi_dsub>
1a004e38:	9b00      	ldr	r3, [sp, #0]
1a004e3a:	9c03      	ldr	r4, [sp, #12]
1a004e3c:	9a06      	ldr	r2, [sp, #24]
1a004e3e:	3330      	adds	r3, #48	; 0x30
1a004e40:	f804 3b01 	strb.w	r3, [r4], #1
1a004e44:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004e46:	3201      	adds	r2, #1
1a004e48:	2b01      	cmp	r3, #1
1a004e4a:	4606      	mov	r6, r0
1a004e4c:	460f      	mov	r7, r1
1a004e4e:	9206      	str	r2, [sp, #24]
1a004e50:	d054      	beq.n	1a004efc <_dtoa_r+0x5cc>
1a004e52:	2200      	movs	r2, #0
1a004e54:	4b0e      	ldr	r3, [pc, #56]	; (1a004e90 <_dtoa_r+0x560>)
1a004e56:	f7fd f8b9 	bl	1a001fcc <__aeabi_dmul>
1a004e5a:	2200      	movs	r2, #0
1a004e5c:	2300      	movs	r3, #0
1a004e5e:	4606      	mov	r6, r0
1a004e60:	460f      	mov	r7, r1
1a004e62:	f7fd fb1b 	bl	1a00249c <__aeabi_dcmpeq>
1a004e66:	2800      	cmp	r0, #0
1a004e68:	d189      	bne.n	1a004d7e <_dtoa_r+0x44e>
1a004e6a:	f8cd b000 	str.w	fp, [sp]
1a004e6e:	2501      	movs	r5, #1
1a004e70:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
1a004e74:	f8cd a008 	str.w	sl, [sp, #8]
1a004e78:	e019      	b.n	1a004eae <_dtoa_r+0x57e>
1a004e7a:	bf00      	nop
1a004e7c:	1a007a60 	.word	0x1a007a60
1a004e80:	1a007a38 	.word	0x1a007a38
1a004e84:	3ff00000 	.word	0x3ff00000
1a004e88:	401c0000 	.word	0x401c0000
1a004e8c:	3fe00000 	.word	0x3fe00000
1a004e90:	40240000 	.word	0x40240000
1a004e94:	40140000 	.word	0x40140000
1a004e98:	f7fd f898 	bl	1a001fcc <__aeabi_dmul>
1a004e9c:	2200      	movs	r2, #0
1a004e9e:	2300      	movs	r3, #0
1a004ea0:	4606      	mov	r6, r0
1a004ea2:	460f      	mov	r7, r1
1a004ea4:	f7fd fafa 	bl	1a00249c <__aeabi_dcmpeq>
1a004ea8:	2800      	cmp	r0, #0
1a004eaa:	f040 835c 	bne.w	1a005566 <_dtoa_r+0xc36>
1a004eae:	4642      	mov	r2, r8
1a004eb0:	464b      	mov	r3, r9
1a004eb2:	4630      	mov	r0, r6
1a004eb4:	4639      	mov	r1, r7
1a004eb6:	f7fd f9b3 	bl	1a002220 <__aeabi_ddiv>
1a004eba:	f002 fc1d 	bl	1a0076f8 <__aeabi_d2iz>
1a004ebe:	4682      	mov	sl, r0
1a004ec0:	f7fd f81a 	bl	1a001ef8 <__aeabi_i2d>
1a004ec4:	4642      	mov	r2, r8
1a004ec6:	464b      	mov	r3, r9
1a004ec8:	f7fd f880 	bl	1a001fcc <__aeabi_dmul>
1a004ecc:	4602      	mov	r2, r0
1a004ece:	460b      	mov	r3, r1
1a004ed0:	4630      	mov	r0, r6
1a004ed2:	4639      	mov	r1, r7
1a004ed4:	f7fc fec2 	bl	1a001c5c <__aeabi_dsub>
1a004ed8:	3501      	adds	r5, #1
1a004eda:	f10a 0c30 	add.w	ip, sl, #48	; 0x30
1a004ede:	45ab      	cmp	fp, r5
1a004ee0:	4606      	mov	r6, r0
1a004ee2:	460f      	mov	r7, r1
1a004ee4:	f04f 0200 	mov.w	r2, #0
1a004ee8:	4ba7      	ldr	r3, [pc, #668]	; (1a005188 <_dtoa_r+0x858>)
1a004eea:	f804 cb01 	strb.w	ip, [r4], #1
1a004eee:	d1d3      	bne.n	1a004e98 <_dtoa_r+0x568>
1a004ef0:	f8dd b000 	ldr.w	fp, [sp]
1a004ef4:	f8cd a000 	str.w	sl, [sp]
1a004ef8:	f8dd a008 	ldr.w	sl, [sp, #8]
1a004efc:	4632      	mov	r2, r6
1a004efe:	463b      	mov	r3, r7
1a004f00:	4630      	mov	r0, r6
1a004f02:	4639      	mov	r1, r7
1a004f04:	f7fc feac 	bl	1a001c60 <__adddf3>
1a004f08:	4642      	mov	r2, r8
1a004f0a:	464b      	mov	r3, r9
1a004f0c:	4606      	mov	r6, r0
1a004f0e:	460f      	mov	r7, r1
1a004f10:	f7fd faec 	bl	1a0024ec <__aeabi_dcmpgt>
1a004f14:	b960      	cbnz	r0, 1a004f30 <_dtoa_r+0x600>
1a004f16:	4642      	mov	r2, r8
1a004f18:	464b      	mov	r3, r9
1a004f1a:	4630      	mov	r0, r6
1a004f1c:	4639      	mov	r1, r7
1a004f1e:	f7fd fabd 	bl	1a00249c <__aeabi_dcmpeq>
1a004f22:	2800      	cmp	r0, #0
1a004f24:	f43f af2b 	beq.w	1a004d7e <_dtoa_r+0x44e>
1a004f28:	9b00      	ldr	r3, [sp, #0]
1a004f2a:	07db      	lsls	r3, r3, #31
1a004f2c:	f57f af27 	bpl.w	1a004d7e <_dtoa_r+0x44e>
1a004f30:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a004f34:	9a03      	ldr	r2, [sp, #12]
1a004f36:	1e63      	subs	r3, r4, #1
1a004f38:	e004      	b.n	1a004f44 <_dtoa_r+0x614>
1a004f3a:	429a      	cmp	r2, r3
1a004f3c:	f000 83c0 	beq.w	1a0056c0 <_dtoa_r+0xd90>
1a004f40:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
1a004f44:	2d39      	cmp	r5, #57	; 0x39
1a004f46:	f103 0401 	add.w	r4, r3, #1
1a004f4a:	d0f6      	beq.n	1a004f3a <_dtoa_r+0x60a>
1a004f4c:	1c6a      	adds	r2, r5, #1
1a004f4e:	b2d2      	uxtb	r2, r2
1a004f50:	701a      	strb	r2, [r3, #0]
1a004f52:	e714      	b.n	1a004d7e <_dtoa_r+0x44e>
1a004f54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a004f56:	2a00      	cmp	r2, #0
1a004f58:	d03c      	beq.n	1a004fd4 <_dtoa_r+0x6a4>
1a004f5a:	9a02      	ldr	r2, [sp, #8]
1a004f5c:	2a01      	cmp	r2, #1
1a004f5e:	f340 8258 	ble.w	1a005412 <_dtoa_r+0xae2>
1a004f62:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004f64:	1e5e      	subs	r6, r3, #1
1a004f66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004f68:	42b3      	cmp	r3, r6
1a004f6a:	f280 8234 	bge.w	1a0053d6 <_dtoa_r+0xaa6>
1a004f6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004f70:	960c      	str	r6, [sp, #48]	; 0x30
1a004f72:	1af3      	subs	r3, r6, r3
1a004f74:	4499      	add	r9, r3
1a004f76:	2600      	movs	r6, #0
1a004f78:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004f7a:	2b00      	cmp	r3, #0
1a004f7c:	f2c0 82f8 	blt.w	1a005570 <_dtoa_r+0xc40>
1a004f80:	9a08      	ldr	r2, [sp, #32]
1a004f82:	4614      	mov	r4, r2
1a004f84:	441a      	add	r2, r3
1a004f86:	4498      	add	r8, r3
1a004f88:	9208      	str	r2, [sp, #32]
1a004f8a:	2101      	movs	r1, #1
1a004f8c:	4650      	mov	r0, sl
1a004f8e:	f001 fcf1 	bl	1a006974 <__i2b>
1a004f92:	4605      	mov	r5, r0
1a004f94:	e021      	b.n	1a004fda <_dtoa_r+0x6aa>
1a004f96:	2301      	movs	r3, #1
1a004f98:	f1b8 0f00 	cmp.w	r8, #0
1a004f9c:	930d      	str	r3, [sp, #52]	; 0x34
1a004f9e:	f6bf ad77 	bge.w	1a004a90 <_dtoa_r+0x160>
1a004fa2:	f1c4 0301 	rsb	r3, r4, #1
1a004fa6:	9308      	str	r3, [sp, #32]
1a004fa8:	f04f 0800 	mov.w	r8, #0
1a004fac:	e572      	b.n	1a004a94 <_dtoa_r+0x164>
1a004fae:	4648      	mov	r0, r9
1a004fb0:	f7fc ffa2 	bl	1a001ef8 <__aeabi_i2d>
1a004fb4:	4632      	mov	r2, r6
1a004fb6:	463b      	mov	r3, r7
1a004fb8:	f7fd fa70 	bl	1a00249c <__aeabi_dcmpeq>
1a004fbc:	2800      	cmp	r0, #0
1a004fbe:	f47f ad4d 	bne.w	1a004a5c <_dtoa_r+0x12c>
1a004fc2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
1a004fc6:	e549      	b.n	1a004a5c <_dtoa_r+0x12c>
1a004fc8:	4b70      	ldr	r3, [pc, #448]	; (1a00518c <_dtoa_r+0x85c>)
1a004fca:	9303      	str	r3, [sp, #12]
1a004fcc:	9803      	ldr	r0, [sp, #12]
1a004fce:	b017      	add	sp, #92	; 0x5c
1a004fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004fd4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a004fd6:	9c08      	ldr	r4, [sp, #32]
1a004fd8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
1a004fda:	2c00      	cmp	r4, #0
1a004fdc:	dd0c      	ble.n	1a004ff8 <_dtoa_r+0x6c8>
1a004fde:	f1b8 0f00 	cmp.w	r8, #0
1a004fe2:	dd09      	ble.n	1a004ff8 <_dtoa_r+0x6c8>
1a004fe4:	4544      	cmp	r4, r8
1a004fe6:	9a08      	ldr	r2, [sp, #32]
1a004fe8:	4623      	mov	r3, r4
1a004fea:	bfa8      	it	ge
1a004fec:	4643      	movge	r3, r8
1a004fee:	1ad2      	subs	r2, r2, r3
1a004ff0:	9208      	str	r2, [sp, #32]
1a004ff2:	1ae4      	subs	r4, r4, r3
1a004ff4:	eba8 0803 	sub.w	r8, r8, r3
1a004ff8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004ffa:	b1d3      	cbz	r3, 1a005032 <_dtoa_r+0x702>
1a004ffc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a004ffe:	2b00      	cmp	r3, #0
1a005000:	f000 8189 	beq.w	1a005316 <_dtoa_r+0x9e6>
1a005004:	2e00      	cmp	r6, #0
1a005006:	dd10      	ble.n	1a00502a <_dtoa_r+0x6fa>
1a005008:	4629      	mov	r1, r5
1a00500a:	4632      	mov	r2, r6
1a00500c:	4650      	mov	r0, sl
1a00500e:	f001 fd53 	bl	1a006ab8 <__pow5mult>
1a005012:	465a      	mov	r2, fp
1a005014:	4601      	mov	r1, r0
1a005016:	4605      	mov	r5, r0
1a005018:	4650      	mov	r0, sl
1a00501a:	f001 fcb5 	bl	1a006988 <__multiply>
1a00501e:	4659      	mov	r1, fp
1a005020:	4607      	mov	r7, r0
1a005022:	4650      	mov	r0, sl
1a005024:	f001 fc06 	bl	1a006834 <_Bfree>
1a005028:	46bb      	mov	fp, r7
1a00502a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a00502c:	1b9a      	subs	r2, r3, r6
1a00502e:	f040 8173 	bne.w	1a005318 <_dtoa_r+0x9e8>
1a005032:	2101      	movs	r1, #1
1a005034:	4650      	mov	r0, sl
1a005036:	f001 fc9d 	bl	1a006974 <__i2b>
1a00503a:	f1b9 0f00 	cmp.w	r9, #0
1a00503e:	4607      	mov	r7, r0
1a005040:	f300 808e 	bgt.w	1a005160 <_dtoa_r+0x830>
1a005044:	9b02      	ldr	r3, [sp, #8]
1a005046:	2b01      	cmp	r3, #1
1a005048:	f340 8171 	ble.w	1a00532e <_dtoa_r+0x9fe>
1a00504c:	2600      	movs	r6, #0
1a00504e:	2001      	movs	r0, #1
1a005050:	f1b9 0f00 	cmp.w	r9, #0
1a005054:	f040 808f 	bne.w	1a005176 <_dtoa_r+0x846>
1a005058:	4440      	add	r0, r8
1a00505a:	f010 001f 	ands.w	r0, r0, #31
1a00505e:	d075      	beq.n	1a00514c <_dtoa_r+0x81c>
1a005060:	f1c0 0320 	rsb	r3, r0, #32
1a005064:	2b04      	cmp	r3, #4
1a005066:	f340 836d 	ble.w	1a005744 <_dtoa_r+0xe14>
1a00506a:	f1c0 001c 	rsb	r0, r0, #28
1a00506e:	9b08      	ldr	r3, [sp, #32]
1a005070:	4403      	add	r3, r0
1a005072:	9308      	str	r3, [sp, #32]
1a005074:	4404      	add	r4, r0
1a005076:	4480      	add	r8, r0
1a005078:	9b08      	ldr	r3, [sp, #32]
1a00507a:	2b00      	cmp	r3, #0
1a00507c:	dd05      	ble.n	1a00508a <_dtoa_r+0x75a>
1a00507e:	4659      	mov	r1, fp
1a005080:	461a      	mov	r2, r3
1a005082:	4650      	mov	r0, sl
1a005084:	f001 fd68 	bl	1a006b58 <__lshift>
1a005088:	4683      	mov	fp, r0
1a00508a:	f1b8 0f00 	cmp.w	r8, #0
1a00508e:	dd05      	ble.n	1a00509c <_dtoa_r+0x76c>
1a005090:	4639      	mov	r1, r7
1a005092:	4642      	mov	r2, r8
1a005094:	4650      	mov	r0, sl
1a005096:	f001 fd5f 	bl	1a006b58 <__lshift>
1a00509a:	4607      	mov	r7, r0
1a00509c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a00509e:	2b00      	cmp	r3, #0
1a0050a0:	f040 811e 	bne.w	1a0052e0 <_dtoa_r+0x9b0>
1a0050a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0050a6:	2b00      	cmp	r3, #0
1a0050a8:	f340 80f5 	ble.w	1a005296 <_dtoa_r+0x966>
1a0050ac:	9b06      	ldr	r3, [sp, #24]
1a0050ae:	3301      	adds	r3, #1
1a0050b0:	9306      	str	r3, [sp, #24]
1a0050b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0050b4:	2b00      	cmp	r3, #0
1a0050b6:	d177      	bne.n	1a0051a8 <_dtoa_r+0x878>
1a0050b8:	9c03      	ldr	r4, [sp, #12]
1a0050ba:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
1a0050be:	2601      	movs	r6, #1
1a0050c0:	e003      	b.n	1a0050ca <_dtoa_r+0x79a>
1a0050c2:	f001 fbc1 	bl	1a006848 <__multadd>
1a0050c6:	3601      	adds	r6, #1
1a0050c8:	4683      	mov	fp, r0
1a0050ca:	4639      	mov	r1, r7
1a0050cc:	4658      	mov	r0, fp
1a0050ce:	f7ff fb9b 	bl	1a004808 <quorem>
1a0050d2:	4546      	cmp	r6, r8
1a0050d4:	f100 0930 	add.w	r9, r0, #48	; 0x30
1a0050d8:	f804 9b01 	strb.w	r9, [r4], #1
1a0050dc:	f04f 0300 	mov.w	r3, #0
1a0050e0:	f04f 020a 	mov.w	r2, #10
1a0050e4:	4659      	mov	r1, fp
1a0050e6:	4650      	mov	r0, sl
1a0050e8:	dbeb      	blt.n	1a0050c2 <_dtoa_r+0x792>
1a0050ea:	2300      	movs	r3, #0
1a0050ec:	9300      	str	r3, [sp, #0]
1a0050ee:	4659      	mov	r1, fp
1a0050f0:	2201      	movs	r2, #1
1a0050f2:	4650      	mov	r0, sl
1a0050f4:	f001 fd30 	bl	1a006b58 <__lshift>
1a0050f8:	4639      	mov	r1, r7
1a0050fa:	4683      	mov	fp, r0
1a0050fc:	f001 fd86 	bl	1a006c0c <__mcmp>
1a005100:	2800      	cmp	r0, #0
1a005102:	f814 2c01 	ldrb.w	r2, [r4, #-1]
1a005106:	f340 816f 	ble.w	1a0053e8 <_dtoa_r+0xab8>
1a00510a:	1e63      	subs	r3, r4, #1
1a00510c:	9903      	ldr	r1, [sp, #12]
1a00510e:	e004      	b.n	1a00511a <_dtoa_r+0x7ea>
1a005110:	4299      	cmp	r1, r3
1a005112:	f000 8177 	beq.w	1a005404 <_dtoa_r+0xad4>
1a005116:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
1a00511a:	2a39      	cmp	r2, #57	; 0x39
1a00511c:	f103 0401 	add.w	r4, r3, #1
1a005120:	d0f6      	beq.n	1a005110 <_dtoa_r+0x7e0>
1a005122:	3201      	adds	r2, #1
1a005124:	701a      	strb	r2, [r3, #0]
1a005126:	4639      	mov	r1, r7
1a005128:	4650      	mov	r0, sl
1a00512a:	f001 fb83 	bl	1a006834 <_Bfree>
1a00512e:	2d00      	cmp	r5, #0
1a005130:	f43f ae25 	beq.w	1a004d7e <_dtoa_r+0x44e>
1a005134:	9900      	ldr	r1, [sp, #0]
1a005136:	b121      	cbz	r1, 1a005142 <_dtoa_r+0x812>
1a005138:	42a9      	cmp	r1, r5
1a00513a:	d002      	beq.n	1a005142 <_dtoa_r+0x812>
1a00513c:	4650      	mov	r0, sl
1a00513e:	f001 fb79 	bl	1a006834 <_Bfree>
1a005142:	4629      	mov	r1, r5
1a005144:	4650      	mov	r0, sl
1a005146:	f001 fb75 	bl	1a006834 <_Bfree>
1a00514a:	e618      	b.n	1a004d7e <_dtoa_r+0x44e>
1a00514c:	201c      	movs	r0, #28
1a00514e:	e78e      	b.n	1a00506e <_dtoa_r+0x73e>
1a005150:	2401      	movs	r4, #1
1a005152:	e4b6      	b.n	1a004ac2 <_dtoa_r+0x192>
1a005154:	f1c3 0620 	rsb	r6, r3, #32
1a005158:	9b00      	ldr	r3, [sp, #0]
1a00515a:	fa03 f006 	lsl.w	r0, r3, r6
1a00515e:	e447      	b.n	1a0049f0 <_dtoa_r+0xc0>
1a005160:	4601      	mov	r1, r0
1a005162:	464a      	mov	r2, r9
1a005164:	4650      	mov	r0, sl
1a005166:	f001 fca7 	bl	1a006ab8 <__pow5mult>
1a00516a:	9b02      	ldr	r3, [sp, #8]
1a00516c:	2b01      	cmp	r3, #1
1a00516e:	4607      	mov	r7, r0
1a005170:	f340 81b2 	ble.w	1a0054d8 <_dtoa_r+0xba8>
1a005174:	2600      	movs	r6, #0
1a005176:	693b      	ldr	r3, [r7, #16]
1a005178:	eb07 0383 	add.w	r3, r7, r3, lsl #2
1a00517c:	6918      	ldr	r0, [r3, #16]
1a00517e:	f001 fba9 	bl	1a0068d4 <__hi0bits>
1a005182:	f1c0 0020 	rsb	r0, r0, #32
1a005186:	e767      	b.n	1a005058 <_dtoa_r+0x728>
1a005188:	40240000 	.word	0x40240000
1a00518c:	1a007a04 	.word	0x1a007a04
1a005190:	4629      	mov	r1, r5
1a005192:	2300      	movs	r3, #0
1a005194:	220a      	movs	r2, #10
1a005196:	4650      	mov	r0, sl
1a005198:	f001 fb56 	bl	1a006848 <__multadd>
1a00519c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a00519e:	2b00      	cmp	r3, #0
1a0051a0:	4605      	mov	r5, r0
1a0051a2:	f340 82c1 	ble.w	1a005728 <_dtoa_r+0xdf8>
1a0051a6:	9309      	str	r3, [sp, #36]	; 0x24
1a0051a8:	2c00      	cmp	r4, #0
1a0051aa:	f300 810d 	bgt.w	1a0053c8 <_dtoa_r+0xa98>
1a0051ae:	2e00      	cmp	r6, #0
1a0051b0:	f040 81c5 	bne.w	1a00553e <_dtoa_r+0xc0e>
1a0051b4:	46a8      	mov	r8, r5
1a0051b6:	9b00      	ldr	r3, [sp, #0]
1a0051b8:	9902      	ldr	r1, [sp, #8]
1a0051ba:	9e03      	ldr	r6, [sp, #12]
1a0051bc:	f003 0201 	and.w	r2, r3, #1
1a0051c0:	920b      	str	r2, [sp, #44]	; 0x2c
1a0051c2:	430a      	orrs	r2, r1
1a0051c4:	920a      	str	r2, [sp, #40]	; 0x28
1a0051c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a0051c8:	1e73      	subs	r3, r6, #1
1a0051ca:	441a      	add	r2, r3
1a0051cc:	9209      	str	r2, [sp, #36]	; 0x24
1a0051ce:	463c      	mov	r4, r7
1a0051d0:	4621      	mov	r1, r4
1a0051d2:	4658      	mov	r0, fp
1a0051d4:	f7ff fb18 	bl	1a004808 <quorem>
1a0051d8:	4629      	mov	r1, r5
1a0051da:	9000      	str	r0, [sp, #0]
1a0051dc:	4658      	mov	r0, fp
1a0051de:	f001 fd15 	bl	1a006c0c <__mcmp>
1a0051e2:	4642      	mov	r2, r8
1a0051e4:	4607      	mov	r7, r0
1a0051e6:	4621      	mov	r1, r4
1a0051e8:	4650      	mov	r0, sl
1a0051ea:	f001 fd2b 	bl	1a006c44 <__mdiff>
1a0051ee:	9b00      	ldr	r3, [sp, #0]
1a0051f0:	f103 0230 	add.w	r2, r3, #48	; 0x30
1a0051f4:	68c3      	ldr	r3, [r0, #12]
1a0051f6:	4681      	mov	r9, r0
1a0051f8:	2b00      	cmp	r3, #0
1a0051fa:	d13e      	bne.n	1a00527a <_dtoa_r+0x94a>
1a0051fc:	4601      	mov	r1, r0
1a0051fe:	4658      	mov	r0, fp
1a005200:	9208      	str	r2, [sp, #32]
1a005202:	f001 fd03 	bl	1a006c0c <__mcmp>
1a005206:	4649      	mov	r1, r9
1a005208:	9004      	str	r0, [sp, #16]
1a00520a:	4650      	mov	r0, sl
1a00520c:	f001 fb12 	bl	1a006834 <_Bfree>
1a005210:	9b04      	ldr	r3, [sp, #16]
1a005212:	9a08      	ldr	r2, [sp, #32]
1a005214:	b91b      	cbnz	r3, 1a00521e <_dtoa_r+0x8ee>
1a005216:	990a      	ldr	r1, [sp, #40]	; 0x28
1a005218:	2900      	cmp	r1, #0
1a00521a:	f000 8271 	beq.w	1a005700 <_dtoa_r+0xdd0>
1a00521e:	2f00      	cmp	r7, #0
1a005220:	f106 0901 	add.w	r9, r6, #1
1a005224:	f2c0 816e 	blt.w	1a005504 <_dtoa_r+0xbd4>
1a005228:	9902      	ldr	r1, [sp, #8]
1a00522a:	430f      	orrs	r7, r1
1a00522c:	990b      	ldr	r1, [sp, #44]	; 0x2c
1a00522e:	4339      	orrs	r1, r7
1a005230:	f000 8168 	beq.w	1a005504 <_dtoa_r+0xbd4>
1a005234:	2b00      	cmp	r3, #0
1a005236:	f300 81a2 	bgt.w	1a00557e <_dtoa_r+0xc4e>
1a00523a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00523c:	7032      	strb	r2, [r6, #0]
1a00523e:	42b3      	cmp	r3, r6
1a005240:	f000 81a9 	beq.w	1a005596 <_dtoa_r+0xc66>
1a005244:	4659      	mov	r1, fp
1a005246:	2300      	movs	r3, #0
1a005248:	220a      	movs	r2, #10
1a00524a:	4650      	mov	r0, sl
1a00524c:	f001 fafc 	bl	1a006848 <__multadd>
1a005250:	4545      	cmp	r5, r8
1a005252:	4683      	mov	fp, r0
1a005254:	4629      	mov	r1, r5
1a005256:	f04f 0300 	mov.w	r3, #0
1a00525a:	f04f 020a 	mov.w	r2, #10
1a00525e:	4650      	mov	r0, sl
1a005260:	d013      	beq.n	1a00528a <_dtoa_r+0x95a>
1a005262:	f001 faf1 	bl	1a006848 <__multadd>
1a005266:	4641      	mov	r1, r8
1a005268:	4605      	mov	r5, r0
1a00526a:	2300      	movs	r3, #0
1a00526c:	220a      	movs	r2, #10
1a00526e:	4650      	mov	r0, sl
1a005270:	f001 faea 	bl	1a006848 <__multadd>
1a005274:	464e      	mov	r6, r9
1a005276:	4680      	mov	r8, r0
1a005278:	e7aa      	b.n	1a0051d0 <_dtoa_r+0x8a0>
1a00527a:	4601      	mov	r1, r0
1a00527c:	4650      	mov	r0, sl
1a00527e:	9204      	str	r2, [sp, #16]
1a005280:	f001 fad8 	bl	1a006834 <_Bfree>
1a005284:	2301      	movs	r3, #1
1a005286:	9a04      	ldr	r2, [sp, #16]
1a005288:	e7c9      	b.n	1a00521e <_dtoa_r+0x8ee>
1a00528a:	f001 fadd 	bl	1a006848 <__multadd>
1a00528e:	464e      	mov	r6, r9
1a005290:	4605      	mov	r5, r0
1a005292:	4680      	mov	r8, r0
1a005294:	e79c      	b.n	1a0051d0 <_dtoa_r+0x8a0>
1a005296:	9b02      	ldr	r3, [sp, #8]
1a005298:	2b02      	cmp	r3, #2
1a00529a:	f340 8082 	ble.w	1a0053a2 <_dtoa_r+0xa72>
1a00529e:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0052a0:	2b00      	cmp	r3, #0
1a0052a2:	f47f adae 	bne.w	1a004e02 <_dtoa_r+0x4d2>
1a0052a6:	4639      	mov	r1, r7
1a0052a8:	2205      	movs	r2, #5
1a0052aa:	4650      	mov	r0, sl
1a0052ac:	f001 facc 	bl	1a006848 <__multadd>
1a0052b0:	4601      	mov	r1, r0
1a0052b2:	4607      	mov	r7, r0
1a0052b4:	4658      	mov	r0, fp
1a0052b6:	f001 fca9 	bl	1a006c0c <__mcmp>
1a0052ba:	2800      	cmp	r0, #0
1a0052bc:	f77f ada1 	ble.w	1a004e02 <_dtoa_r+0x4d2>
1a0052c0:	9c03      	ldr	r4, [sp, #12]
1a0052c2:	9b06      	ldr	r3, [sp, #24]
1a0052c4:	2231      	movs	r2, #49	; 0x31
1a0052c6:	f804 2b01 	strb.w	r2, [r4], #1
1a0052ca:	3301      	adds	r3, #1
1a0052cc:	3301      	adds	r3, #1
1a0052ce:	4639      	mov	r1, r7
1a0052d0:	4650      	mov	r0, sl
1a0052d2:	9306      	str	r3, [sp, #24]
1a0052d4:	f001 faae 	bl	1a006834 <_Bfree>
1a0052d8:	2d00      	cmp	r5, #0
1a0052da:	f47f af32 	bne.w	1a005142 <_dtoa_r+0x812>
1a0052de:	e54e      	b.n	1a004d7e <_dtoa_r+0x44e>
1a0052e0:	4639      	mov	r1, r7
1a0052e2:	4658      	mov	r0, fp
1a0052e4:	f001 fc92 	bl	1a006c0c <__mcmp>
1a0052e8:	2800      	cmp	r0, #0
1a0052ea:	f6bf aedb 	bge.w	1a0050a4 <_dtoa_r+0x774>
1a0052ee:	4659      	mov	r1, fp
1a0052f0:	2300      	movs	r3, #0
1a0052f2:	220a      	movs	r2, #10
1a0052f4:	4650      	mov	r0, sl
1a0052f6:	f001 faa7 	bl	1a006848 <__multadd>
1a0052fa:	9b06      	ldr	r3, [sp, #24]
1a0052fc:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
1a005300:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a005302:	4683      	mov	fp, r0
1a005304:	2b00      	cmp	r3, #0
1a005306:	f47f af43 	bne.w	1a005190 <_dtoa_r+0x860>
1a00530a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a00530c:	2b00      	cmp	r3, #0
1a00530e:	f340 8202 	ble.w	1a005716 <_dtoa_r+0xde6>
1a005312:	9309      	str	r3, [sp, #36]	; 0x24
1a005314:	e6d0      	b.n	1a0050b8 <_dtoa_r+0x788>
1a005316:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a005318:	4659      	mov	r1, fp
1a00531a:	4650      	mov	r0, sl
1a00531c:	f001 fbcc 	bl	1a006ab8 <__pow5mult>
1a005320:	4683      	mov	fp, r0
1a005322:	e686      	b.n	1a005032 <_dtoa_r+0x702>
1a005324:	4b9f      	ldr	r3, [pc, #636]	; (1a0055a4 <_dtoa_r+0xc74>)
1a005326:	9303      	str	r3, [sp, #12]
1a005328:	3303      	adds	r3, #3
1a00532a:	f7ff bbe5 	b.w	1a004af8 <_dtoa_r+0x1c8>
1a00532e:	e9dd 1200 	ldrd	r1, r2, [sp]
1a005332:	2900      	cmp	r1, #0
1a005334:	f47f ae8a 	bne.w	1a00504c <_dtoa_r+0x71c>
1a005338:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a00533c:	2b00      	cmp	r3, #0
1a00533e:	f000 80d5 	beq.w	1a0054ec <_dtoa_r+0xbbc>
1a005342:	9e00      	ldr	r6, [sp, #0]
1a005344:	e683      	b.n	1a00504e <_dtoa_r+0x71e>
1a005346:	2301      	movs	r3, #1
1a005348:	930b      	str	r3, [sp, #44]	; 0x2c
1a00534a:	980a      	ldr	r0, [sp, #40]	; 0x28
1a00534c:	2800      	cmp	r0, #0
1a00534e:	dd46      	ble.n	1a0053de <_dtoa_r+0xaae>
1a005350:	900f      	str	r0, [sp, #60]	; 0x3c
1a005352:	9009      	str	r0, [sp, #36]	; 0x24
1a005354:	2100      	movs	r1, #0
1a005356:	2817      	cmp	r0, #23
1a005358:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a00535c:	9d09      	ldr	r5, [sp, #36]	; 0x24
1a00535e:	f77f ac19 	ble.w	1a004b94 <_dtoa_r+0x264>
1a005362:	2201      	movs	r2, #1
1a005364:	2304      	movs	r3, #4
1a005366:	005b      	lsls	r3, r3, #1
1a005368:	f103 0614 	add.w	r6, r3, #20
1a00536c:	42b0      	cmp	r0, r6
1a00536e:	4611      	mov	r1, r2
1a005370:	f102 0201 	add.w	r2, r2, #1
1a005374:	d2f7      	bcs.n	1a005366 <_dtoa_r+0xa36>
1a005376:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a00537a:	e40b      	b.n	1a004b94 <_dtoa_r+0x264>
1a00537c:	2301      	movs	r3, #1
1a00537e:	930b      	str	r3, [sp, #44]	; 0x2c
1a005380:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a005382:	9a06      	ldr	r2, [sp, #24]
1a005384:	4413      	add	r3, r2
1a005386:	930f      	str	r3, [sp, #60]	; 0x3c
1a005388:	3301      	adds	r3, #1
1a00538a:	2b01      	cmp	r3, #1
1a00538c:	4618      	mov	r0, r3
1a00538e:	9309      	str	r3, [sp, #36]	; 0x24
1a005390:	bfb8      	it	lt
1a005392:	2001      	movlt	r0, #1
1a005394:	e7de      	b.n	1a005354 <_dtoa_r+0xa24>
1a005396:	2300      	movs	r3, #0
1a005398:	930b      	str	r3, [sp, #44]	; 0x2c
1a00539a:	e7f1      	b.n	1a005380 <_dtoa_r+0xa50>
1a00539c:	2300      	movs	r3, #0
1a00539e:	930b      	str	r3, [sp, #44]	; 0x2c
1a0053a0:	e7d3      	b.n	1a00534a <_dtoa_r+0xa1a>
1a0053a2:	9b06      	ldr	r3, [sp, #24]
1a0053a4:	3301      	adds	r3, #1
1a0053a6:	9306      	str	r3, [sp, #24]
1a0053a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0053aa:	2b00      	cmp	r3, #0
1a0053ac:	f47f aefc 	bne.w	1a0051a8 <_dtoa_r+0x878>
1a0053b0:	4639      	mov	r1, r7
1a0053b2:	4658      	mov	r0, fp
1a0053b4:	f7ff fa28 	bl	1a004808 <quorem>
1a0053b8:	9c03      	ldr	r4, [sp, #12]
1a0053ba:	f100 0930 	add.w	r9, r0, #48	; 0x30
1a0053be:	2300      	movs	r3, #0
1a0053c0:	f804 9b01 	strb.w	r9, [r4], #1
1a0053c4:	9300      	str	r3, [sp, #0]
1a0053c6:	e692      	b.n	1a0050ee <_dtoa_r+0x7be>
1a0053c8:	4629      	mov	r1, r5
1a0053ca:	4622      	mov	r2, r4
1a0053cc:	4650      	mov	r0, sl
1a0053ce:	f001 fbc3 	bl	1a006b58 <__lshift>
1a0053d2:	4605      	mov	r5, r0
1a0053d4:	e6eb      	b.n	1a0051ae <_dtoa_r+0x87e>
1a0053d6:	1b9e      	subs	r6, r3, r6
1a0053d8:	e5ce      	b.n	1a004f78 <_dtoa_r+0x648>
1a0053da:	2602      	movs	r6, #2
1a0053dc:	e403      	b.n	1a004be6 <_dtoa_r+0x2b6>
1a0053de:	2501      	movs	r5, #1
1a0053e0:	e9cd 5509 	strd	r5, r5, [sp, #36]	; 0x24
1a0053e4:	f7ff bbd2 	b.w	1a004b8c <_dtoa_r+0x25c>
1a0053e8:	d103      	bne.n	1a0053f2 <_dtoa_r+0xac2>
1a0053ea:	f019 0f01 	tst.w	r9, #1
1a0053ee:	f47f ae8c 	bne.w	1a00510a <_dtoa_r+0x7da>
1a0053f2:	1e63      	subs	r3, r4, #1
1a0053f4:	e001      	b.n	1a0053fa <_dtoa_r+0xaca>
1a0053f6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
1a0053fa:	2a30      	cmp	r2, #48	; 0x30
1a0053fc:	f103 0401 	add.w	r4, r3, #1
1a005400:	d0f9      	beq.n	1a0053f6 <_dtoa_r+0xac6>
1a005402:	e690      	b.n	1a005126 <_dtoa_r+0x7f6>
1a005404:	9a06      	ldr	r2, [sp, #24]
1a005406:	3201      	adds	r2, #1
1a005408:	9206      	str	r2, [sp, #24]
1a00540a:	9a03      	ldr	r2, [sp, #12]
1a00540c:	2331      	movs	r3, #49	; 0x31
1a00540e:	7013      	strb	r3, [r2, #0]
1a005410:	e689      	b.n	1a005126 <_dtoa_r+0x7f6>
1a005412:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a005414:	2a00      	cmp	r2, #0
1a005416:	f000 8126 	beq.w	1a005666 <_dtoa_r+0xd36>
1a00541a:	f203 4333 	addw	r3, r3, #1075	; 0x433
1a00541e:	9a08      	ldr	r2, [sp, #32]
1a005420:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a005422:	4614      	mov	r4, r2
1a005424:	441a      	add	r2, r3
1a005426:	4498      	add	r8, r3
1a005428:	9208      	str	r2, [sp, #32]
1a00542a:	e5ae      	b.n	1a004f8a <_dtoa_r+0x65a>
1a00542c:	4630      	mov	r0, r6
1a00542e:	f7fc fd63 	bl	1a001ef8 <__aeabi_i2d>
1a005432:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005436:	f7fc fdc9 	bl	1a001fcc <__aeabi_dmul>
1a00543a:	2200      	movs	r2, #0
1a00543c:	4b5a      	ldr	r3, [pc, #360]	; (1a0055a8 <_dtoa_r+0xc78>)
1a00543e:	f7fc fc0f 	bl	1a001c60 <__adddf3>
1a005442:	4604      	mov	r4, r0
1a005444:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a005448:	2200      	movs	r2, #0
1a00544a:	4b58      	ldr	r3, [pc, #352]	; (1a0055ac <_dtoa_r+0xc7c>)
1a00544c:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005450:	f7fc fc04 	bl	1a001c5c <__aeabi_dsub>
1a005454:	4622      	mov	r2, r4
1a005456:	462b      	mov	r3, r5
1a005458:	4606      	mov	r6, r0
1a00545a:	460f      	mov	r7, r1
1a00545c:	f7fd f846 	bl	1a0024ec <__aeabi_dcmpgt>
1a005460:	2800      	cmp	r0, #0
1a005462:	f040 8089 	bne.w	1a005578 <_dtoa_r+0xc48>
1a005466:	4622      	mov	r2, r4
1a005468:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
1a00546c:	4630      	mov	r0, r6
1a00546e:	4639      	mov	r1, r7
1a005470:	f7fd f81e 	bl	1a0024b0 <__aeabi_dcmplt>
1a005474:	2800      	cmp	r0, #0
1a005476:	f43f ac9c 	beq.w	1a004db2 <_dtoa_r+0x482>
1a00547a:	2700      	movs	r7, #0
1a00547c:	463d      	mov	r5, r7
1a00547e:	e4c0      	b.n	1a004e02 <_dtoa_r+0x4d2>
1a005480:	f000 80f5 	beq.w	1a00566e <_dtoa_r+0xd3e>
1a005484:	9b06      	ldr	r3, [sp, #24]
1a005486:	425c      	negs	r4, r3
1a005488:	4b49      	ldr	r3, [pc, #292]	; (1a0055b0 <_dtoa_r+0xc80>)
1a00548a:	f004 020f 	and.w	r2, r4, #15
1a00548e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a005492:	e9d3 2300 	ldrd	r2, r3, [r3]
1a005496:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a00549a:	f7fc fd97 	bl	1a001fcc <__aeabi_dmul>
1a00549e:	1124      	asrs	r4, r4, #4
1a0054a0:	e9cd 0100 	strd	r0, r1, [sp]
1a0054a4:	f000 80e3 	beq.w	1a00566e <_dtoa_r+0xd3e>
1a0054a8:	4d42      	ldr	r5, [pc, #264]	; (1a0055b4 <_dtoa_r+0xc84>)
1a0054aa:	2300      	movs	r3, #0
1a0054ac:	2602      	movs	r6, #2
1a0054ae:	07e2      	lsls	r2, r4, #31
1a0054b0:	d505      	bpl.n	1a0054be <_dtoa_r+0xb8e>
1a0054b2:	e9d5 2300 	ldrd	r2, r3, [r5]
1a0054b6:	f7fc fd89 	bl	1a001fcc <__aeabi_dmul>
1a0054ba:	3601      	adds	r6, #1
1a0054bc:	2301      	movs	r3, #1
1a0054be:	1064      	asrs	r4, r4, #1
1a0054c0:	f105 0508 	add.w	r5, r5, #8
1a0054c4:	d1f3      	bne.n	1a0054ae <_dtoa_r+0xb7e>
1a0054c6:	2b00      	cmp	r3, #0
1a0054c8:	f43f aba6 	beq.w	1a004c18 <_dtoa_r+0x2e8>
1a0054cc:	e9cd 0100 	strd	r0, r1, [sp]
1a0054d0:	f7ff bba2 	b.w	1a004c18 <_dtoa_r+0x2e8>
1a0054d4:	900d      	str	r0, [sp, #52]	; 0x34
1a0054d6:	e564      	b.n	1a004fa2 <_dtoa_r+0x672>
1a0054d8:	e9dd 1200 	ldrd	r1, r2, [sp]
1a0054dc:	2900      	cmp	r1, #0
1a0054de:	f47f ae49 	bne.w	1a005174 <_dtoa_r+0x844>
1a0054e2:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a0054e6:	2b00      	cmp	r3, #0
1a0054e8:	f47f ae44 	bne.w	1a005174 <_dtoa_r+0x844>
1a0054ec:	4e32      	ldr	r6, [pc, #200]	; (1a0055b8 <_dtoa_r+0xc88>)
1a0054ee:	4016      	ands	r6, r2
1a0054f0:	2e00      	cmp	r6, #0
1a0054f2:	f43f adac 	beq.w	1a00504e <_dtoa_r+0x71e>
1a0054f6:	9b08      	ldr	r3, [sp, #32]
1a0054f8:	3301      	adds	r3, #1
1a0054fa:	9308      	str	r3, [sp, #32]
1a0054fc:	f108 0801 	add.w	r8, r8, #1
1a005500:	2601      	movs	r6, #1
1a005502:	e5a4      	b.n	1a00504e <_dtoa_r+0x71e>
1a005504:	2b00      	cmp	r3, #0
1a005506:	4627      	mov	r7, r4
1a005508:	464c      	mov	r4, r9
1a00550a:	4691      	mov	r9, r2
1a00550c:	dd12      	ble.n	1a005534 <_dtoa_r+0xc04>
1a00550e:	4659      	mov	r1, fp
1a005510:	2201      	movs	r2, #1
1a005512:	4650      	mov	r0, sl
1a005514:	f001 fb20 	bl	1a006b58 <__lshift>
1a005518:	4639      	mov	r1, r7
1a00551a:	4683      	mov	fp, r0
1a00551c:	f001 fb76 	bl	1a006c0c <__mcmp>
1a005520:	2800      	cmp	r0, #0
1a005522:	f340 80df 	ble.w	1a0056e4 <_dtoa_r+0xdb4>
1a005526:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
1a00552a:	f000 80d0 	beq.w	1a0056ce <_dtoa_r+0xd9e>
1a00552e:	9b00      	ldr	r3, [sp, #0]
1a005530:	f103 0931 	add.w	r9, r3, #49	; 0x31
1a005534:	9500      	str	r5, [sp, #0]
1a005536:	f886 9000 	strb.w	r9, [r6]
1a00553a:	4645      	mov	r5, r8
1a00553c:	e5f3      	b.n	1a005126 <_dtoa_r+0x7f6>
1a00553e:	6869      	ldr	r1, [r5, #4]
1a005540:	4650      	mov	r0, sl
1a005542:	f001 f951 	bl	1a0067e8 <_Balloc>
1a005546:	692b      	ldr	r3, [r5, #16]
1a005548:	3302      	adds	r3, #2
1a00554a:	009a      	lsls	r2, r3, #2
1a00554c:	4604      	mov	r4, r0
1a00554e:	f105 010c 	add.w	r1, r5, #12
1a005552:	300c      	adds	r0, #12
1a005554:	f7fd f97a 	bl	1a00284c <memcpy>
1a005558:	4621      	mov	r1, r4
1a00555a:	2201      	movs	r2, #1
1a00555c:	4650      	mov	r0, sl
1a00555e:	f001 fafb 	bl	1a006b58 <__lshift>
1a005562:	4680      	mov	r8, r0
1a005564:	e627      	b.n	1a0051b6 <_dtoa_r+0x886>
1a005566:	f8dd b000 	ldr.w	fp, [sp]
1a00556a:	f8dd a008 	ldr.w	sl, [sp, #8]
1a00556e:	e406      	b.n	1a004d7e <_dtoa_r+0x44e>
1a005570:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
1a005574:	1a9c      	subs	r4, r3, r2
1a005576:	e508      	b.n	1a004f8a <_dtoa_r+0x65a>
1a005578:	2700      	movs	r7, #0
1a00557a:	463d      	mov	r5, r7
1a00557c:	e6a0      	b.n	1a0052c0 <_dtoa_r+0x990>
1a00557e:	2a39      	cmp	r2, #57	; 0x39
1a005580:	4627      	mov	r7, r4
1a005582:	464c      	mov	r4, r9
1a005584:	f000 80a3 	beq.w	1a0056ce <_dtoa_r+0xd9e>
1a005588:	f102 0901 	add.w	r9, r2, #1
1a00558c:	9500      	str	r5, [sp, #0]
1a00558e:	f886 9000 	strb.w	r9, [r6]
1a005592:	4645      	mov	r5, r8
1a005594:	e5c7      	b.n	1a005126 <_dtoa_r+0x7f6>
1a005596:	4627      	mov	r7, r4
1a005598:	9500      	str	r5, [sp, #0]
1a00559a:	464c      	mov	r4, r9
1a00559c:	4645      	mov	r5, r8
1a00559e:	4691      	mov	r9, r2
1a0055a0:	e5a5      	b.n	1a0050ee <_dtoa_r+0x7be>
1a0055a2:	bf00      	nop
1a0055a4:	1a007a28 	.word	0x1a007a28
1a0055a8:	401c0000 	.word	0x401c0000
1a0055ac:	40140000 	.word	0x40140000
1a0055b0:	1a007a60 	.word	0x1a007a60
1a0055b4:	1a007a38 	.word	0x1a007a38
1a0055b8:	7ff00000 	.word	0x7ff00000
1a0055bc:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0055c0:	f7fc fd04 	bl	1a001fcc <__aeabi_dmul>
1a0055c4:	9b03      	ldr	r3, [sp, #12]
1a0055c6:	701d      	strb	r5, [r3, #0]
1a0055c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a0055ca:	2b01      	cmp	r3, #1
1a0055cc:	e9cd 0100 	strd	r0, r1, [sp]
1a0055d0:	d023      	beq.n	1a00561a <_dtoa_r+0xcea>
1a0055d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a0055d4:	9a03      	ldr	r2, [sp, #12]
1a0055d6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a0055da:	4413      	add	r3, r2
1a0055dc:	46c1      	mov	r9, r8
1a0055de:	4698      	mov	r8, r3
1a0055e0:	2200      	movs	r2, #0
1a0055e2:	4b64      	ldr	r3, [pc, #400]	; (1a005774 <_dtoa_r+0xe44>)
1a0055e4:	4630      	mov	r0, r6
1a0055e6:	4639      	mov	r1, r7
1a0055e8:	f7fc fcf0 	bl	1a001fcc <__aeabi_dmul>
1a0055ec:	460f      	mov	r7, r1
1a0055ee:	4606      	mov	r6, r0
1a0055f0:	f002 f882 	bl	1a0076f8 <__aeabi_d2iz>
1a0055f4:	4605      	mov	r5, r0
1a0055f6:	f7fc fc7f 	bl	1a001ef8 <__aeabi_i2d>
1a0055fa:	3530      	adds	r5, #48	; 0x30
1a0055fc:	4602      	mov	r2, r0
1a0055fe:	460b      	mov	r3, r1
1a005600:	4630      	mov	r0, r6
1a005602:	4639      	mov	r1, r7
1a005604:	f7fc fb2a 	bl	1a001c5c <__aeabi_dsub>
1a005608:	f804 5b01 	strb.w	r5, [r4], #1
1a00560c:	45a0      	cmp	r8, r4
1a00560e:	4606      	mov	r6, r0
1a005610:	460f      	mov	r7, r1
1a005612:	d1e5      	bne.n	1a0055e0 <_dtoa_r+0xcb0>
1a005614:	46c8      	mov	r8, r9
1a005616:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
1a00561a:	4b57      	ldr	r3, [pc, #348]	; (1a005778 <_dtoa_r+0xe48>)
1a00561c:	2200      	movs	r2, #0
1a00561e:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005622:	f7fc fb1d 	bl	1a001c60 <__adddf3>
1a005626:	4632      	mov	r2, r6
1a005628:	463b      	mov	r3, r7
1a00562a:	f7fc ff41 	bl	1a0024b0 <__aeabi_dcmplt>
1a00562e:	2800      	cmp	r0, #0
1a005630:	d152      	bne.n	1a0056d8 <_dtoa_r+0xda8>
1a005632:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005636:	2000      	movs	r0, #0
1a005638:	494f      	ldr	r1, [pc, #316]	; (1a005778 <_dtoa_r+0xe48>)
1a00563a:	f7fc fb0f 	bl	1a001c5c <__aeabi_dsub>
1a00563e:	4632      	mov	r2, r6
1a005640:	463b      	mov	r3, r7
1a005642:	f7fc ff53 	bl	1a0024ec <__aeabi_dcmpgt>
1a005646:	2800      	cmp	r0, #0
1a005648:	f43f abb3 	beq.w	1a004db2 <_dtoa_r+0x482>
1a00564c:	e000      	b.n	1a005650 <_dtoa_r+0xd20>
1a00564e:	4614      	mov	r4, r2
1a005650:	f814 3c01 	ldrb.w	r3, [r4, #-1]
1a005654:	2b30      	cmp	r3, #48	; 0x30
1a005656:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
1a00565a:	d0f8      	beq.n	1a00564e <_dtoa_r+0xd1e>
1a00565c:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00565e:	3301      	adds	r3, #1
1a005660:	9306      	str	r3, [sp, #24]
1a005662:	f7ff bb8c 	b.w	1a004d7e <_dtoa_r+0x44e>
1a005666:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a005668:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
1a00566c:	e6d7      	b.n	1a00541e <_dtoa_r+0xaee>
1a00566e:	2602      	movs	r6, #2
1a005670:	f7ff bad2 	b.w	1a004c18 <_dtoa_r+0x2e8>
1a005674:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005676:	2b00      	cmp	r3, #0
1a005678:	f43f aed8 	beq.w	1a00542c <_dtoa_r+0xafc>
1a00567c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
1a00567e:	2f00      	cmp	r7, #0
1a005680:	f77f ab97 	ble.w	1a004db2 <_dtoa_r+0x482>
1a005684:	2200      	movs	r2, #0
1a005686:	4b3b      	ldr	r3, [pc, #236]	; (1a005774 <_dtoa_r+0xe44>)
1a005688:	4620      	mov	r0, r4
1a00568a:	4629      	mov	r1, r5
1a00568c:	f7fc fc9e 	bl	1a001fcc <__aeabi_dmul>
1a005690:	4604      	mov	r4, r0
1a005692:	460d      	mov	r5, r1
1a005694:	1c70      	adds	r0, r6, #1
1a005696:	e9cd 4500 	strd	r4, r5, [sp]
1a00569a:	f7fc fc2d 	bl	1a001ef8 <__aeabi_i2d>
1a00569e:	4622      	mov	r2, r4
1a0056a0:	462b      	mov	r3, r5
1a0056a2:	f7fc fc93 	bl	1a001fcc <__aeabi_dmul>
1a0056a6:	4b35      	ldr	r3, [pc, #212]	; (1a00577c <_dtoa_r+0xe4c>)
1a0056a8:	2200      	movs	r2, #0
1a0056aa:	f7fc fad9 	bl	1a001c60 <__adddf3>
1a0056ae:	9b06      	ldr	r3, [sp, #24]
1a0056b0:	9710      	str	r7, [sp, #64]	; 0x40
1a0056b2:	3b01      	subs	r3, #1
1a0056b4:	4604      	mov	r4, r0
1a0056b6:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a0056ba:	9312      	str	r3, [sp, #72]	; 0x48
1a0056bc:	f7ff bacf 	b.w	1a004c5e <_dtoa_r+0x32e>
1a0056c0:	9a06      	ldr	r2, [sp, #24]
1a0056c2:	3201      	adds	r2, #1
1a0056c4:	9206      	str	r2, [sp, #24]
1a0056c6:	2231      	movs	r2, #49	; 0x31
1a0056c8:	701a      	strb	r2, [r3, #0]
1a0056ca:	f7ff bb58 	b.w	1a004d7e <_dtoa_r+0x44e>
1a0056ce:	2239      	movs	r2, #57	; 0x39
1a0056d0:	9500      	str	r5, [sp, #0]
1a0056d2:	7032      	strb	r2, [r6, #0]
1a0056d4:	4645      	mov	r5, r8
1a0056d6:	e518      	b.n	1a00510a <_dtoa_r+0x7da>
1a0056d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0056da:	3301      	adds	r3, #1
1a0056dc:	9306      	str	r3, [sp, #24]
1a0056de:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a0056e2:	e427      	b.n	1a004f34 <_dtoa_r+0x604>
1a0056e4:	f47f af26 	bne.w	1a005534 <_dtoa_r+0xc04>
1a0056e8:	f019 0f01 	tst.w	r9, #1
1a0056ec:	f47f af1b 	bne.w	1a005526 <_dtoa_r+0xbf6>
1a0056f0:	e720      	b.n	1a005534 <_dtoa_r+0xc04>
1a0056f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0056f4:	3301      	adds	r3, #1
1a0056f6:	46da      	mov	sl, fp
1a0056f8:	9306      	str	r3, [sp, #24]
1a0056fa:	f8dd b000 	ldr.w	fp, [sp]
1a0056fe:	e419      	b.n	1a004f34 <_dtoa_r+0x604>
1a005700:	2a39      	cmp	r2, #57	; 0x39
1a005702:	463b      	mov	r3, r7
1a005704:	4691      	mov	r9, r2
1a005706:	4627      	mov	r7, r4
1a005708:	f106 0401 	add.w	r4, r6, #1
1a00570c:	d0df      	beq.n	1a0056ce <_dtoa_r+0xd9e>
1a00570e:	2b00      	cmp	r3, #0
1a005710:	f73f af0d 	bgt.w	1a00552e <_dtoa_r+0xbfe>
1a005714:	e70e      	b.n	1a005534 <_dtoa_r+0xc04>
1a005716:	9b02      	ldr	r3, [sp, #8]
1a005718:	2b02      	cmp	r3, #2
1a00571a:	f77f ae49 	ble.w	1a0053b0 <_dtoa_r+0xa80>
1a00571e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005720:	9309      	str	r3, [sp, #36]	; 0x24
1a005722:	f8cd 8018 	str.w	r8, [sp, #24]
1a005726:	e5ba      	b.n	1a00529e <_dtoa_r+0x96e>
1a005728:	9b02      	ldr	r3, [sp, #8]
1a00572a:	2b02      	cmp	r3, #2
1a00572c:	dcf7      	bgt.n	1a00571e <_dtoa_r+0xdee>
1a00572e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005730:	e539      	b.n	1a0051a6 <_dtoa_r+0x876>
1a005732:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005734:	3301      	adds	r3, #1
1a005736:	9306      	str	r3, [sp, #24]
1a005738:	f7ff bbfc 	b.w	1a004f34 <_dtoa_r+0x604>
1a00573c:	4b10      	ldr	r3, [pc, #64]	; (1a005780 <_dtoa_r+0xe50>)
1a00573e:	9303      	str	r3, [sp, #12]
1a005740:	f7ff b934 	b.w	1a0049ac <_dtoa_r+0x7c>
1a005744:	f43f ac98 	beq.w	1a005078 <_dtoa_r+0x748>
1a005748:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
1a00574c:	e48f      	b.n	1a00506e <_dtoa_r+0x73e>
1a00574e:	2400      	movs	r4, #0
1a005750:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
1a005754:	4621      	mov	r1, r4
1a005756:	4650      	mov	r0, sl
1a005758:	f001 f846 	bl	1a0067e8 <_Balloc>
1a00575c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a005760:	e9cd 3409 	strd	r3, r4, [sp, #36]	; 0x24
1a005764:	930f      	str	r3, [sp, #60]	; 0x3c
1a005766:	2301      	movs	r3, #1
1a005768:	9003      	str	r0, [sp, #12]
1a00576a:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
1a00576e:	930b      	str	r3, [sp, #44]	; 0x2c
1a005770:	f7ff bb23 	b.w	1a004dba <_dtoa_r+0x48a>
1a005774:	40240000 	.word	0x40240000
1a005778:	3fe00000 	.word	0x3fe00000
1a00577c:	401c0000 	.word	0x401c0000
1a005780:	1a007a2c 	.word	0x1a007a2c

1a005784 <__sflush_r>:
1a005784:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1a005788:	b29a      	uxth	r2, r3
1a00578a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a00578e:	460c      	mov	r4, r1
1a005790:	0711      	lsls	r1, r2, #28
1a005792:	4680      	mov	r8, r0
1a005794:	d448      	bmi.n	1a005828 <__sflush_r+0xa4>
1a005796:	6862      	ldr	r2, [r4, #4]
1a005798:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a00579c:	2a00      	cmp	r2, #0
1a00579e:	81a3      	strh	r3, [r4, #12]
1a0057a0:	dd5d      	ble.n	1a00585e <__sflush_r+0xda>
1a0057a2:	6aa5      	ldr	r5, [r4, #40]	; 0x28
1a0057a4:	2d00      	cmp	r5, #0
1a0057a6:	d057      	beq.n	1a005858 <__sflush_r+0xd4>
1a0057a8:	2200      	movs	r2, #0
1a0057aa:	b29b      	uxth	r3, r3
1a0057ac:	f8d8 6000 	ldr.w	r6, [r8]
1a0057b0:	69e1      	ldr	r1, [r4, #28]
1a0057b2:	f8c8 2000 	str.w	r2, [r8]
1a0057b6:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
1a0057ba:	d154      	bne.n	1a005866 <__sflush_r+0xe2>
1a0057bc:	2301      	movs	r3, #1
1a0057be:	4640      	mov	r0, r8
1a0057c0:	47a8      	blx	r5
1a0057c2:	1c43      	adds	r3, r0, #1
1a0057c4:	4602      	mov	r2, r0
1a0057c6:	d065      	beq.n	1a005894 <__sflush_r+0x110>
1a0057c8:	89a3      	ldrh	r3, [r4, #12]
1a0057ca:	6aa5      	ldr	r5, [r4, #40]	; 0x28
1a0057cc:	69e1      	ldr	r1, [r4, #28]
1a0057ce:	075f      	lsls	r7, r3, #29
1a0057d0:	d505      	bpl.n	1a0057de <__sflush_r+0x5a>
1a0057d2:	6860      	ldr	r0, [r4, #4]
1a0057d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
1a0057d6:	1a12      	subs	r2, r2, r0
1a0057d8:	b10b      	cbz	r3, 1a0057de <__sflush_r+0x5a>
1a0057da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1a0057dc:	1ad2      	subs	r2, r2, r3
1a0057de:	2300      	movs	r3, #0
1a0057e0:	4640      	mov	r0, r8
1a0057e2:	47a8      	blx	r5
1a0057e4:	1c45      	adds	r5, r0, #1
1a0057e6:	d148      	bne.n	1a00587a <__sflush_r+0xf6>
1a0057e8:	f8d8 2000 	ldr.w	r2, [r8]
1a0057ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0057f0:	2a00      	cmp	r2, #0
1a0057f2:	d05c      	beq.n	1a0058ae <__sflush_r+0x12a>
1a0057f4:	2a1d      	cmp	r2, #29
1a0057f6:	d001      	beq.n	1a0057fc <__sflush_r+0x78>
1a0057f8:	2a16      	cmp	r2, #22
1a0057fa:	d164      	bne.n	1a0058c6 <__sflush_r+0x142>
1a0057fc:	6922      	ldr	r2, [r4, #16]
1a0057fe:	2100      	movs	r1, #0
1a005800:	e9c4 2100 	strd	r2, r1, [r4]
1a005804:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a005808:	81a3      	strh	r3, [r4, #12]
1a00580a:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a00580c:	f8c8 6000 	str.w	r6, [r8]
1a005810:	b311      	cbz	r1, 1a005858 <__sflush_r+0xd4>
1a005812:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a005816:	4299      	cmp	r1, r3
1a005818:	d002      	beq.n	1a005820 <__sflush_r+0x9c>
1a00581a:	4640      	mov	r0, r8
1a00581c:	f000 f93a 	bl	1a005a94 <_free_r>
1a005820:	2000      	movs	r0, #0
1a005822:	6320      	str	r0, [r4, #48]	; 0x30
1a005824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a005828:	6926      	ldr	r6, [r4, #16]
1a00582a:	b1ae      	cbz	r6, 1a005858 <__sflush_r+0xd4>
1a00582c:	6825      	ldr	r5, [r4, #0]
1a00582e:	6026      	str	r6, [r4, #0]
1a005830:	0791      	lsls	r1, r2, #30
1a005832:	bf0c      	ite	eq
1a005834:	6963      	ldreq	r3, [r4, #20]
1a005836:	2300      	movne	r3, #0
1a005838:	1bad      	subs	r5, r5, r6
1a00583a:	60a3      	str	r3, [r4, #8]
1a00583c:	e00a      	b.n	1a005854 <__sflush_r+0xd0>
1a00583e:	462b      	mov	r3, r5
1a005840:	4632      	mov	r2, r6
1a005842:	6a67      	ldr	r7, [r4, #36]	; 0x24
1a005844:	69e1      	ldr	r1, [r4, #28]
1a005846:	4640      	mov	r0, r8
1a005848:	47b8      	blx	r7
1a00584a:	2800      	cmp	r0, #0
1a00584c:	eba5 0500 	sub.w	r5, r5, r0
1a005850:	4406      	add	r6, r0
1a005852:	dd0a      	ble.n	1a00586a <__sflush_r+0xe6>
1a005854:	2d00      	cmp	r5, #0
1a005856:	dcf2      	bgt.n	1a00583e <__sflush_r+0xba>
1a005858:	2000      	movs	r0, #0
1a00585a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00585e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
1a005860:	2a00      	cmp	r2, #0
1a005862:	dc9e      	bgt.n	1a0057a2 <__sflush_r+0x1e>
1a005864:	e7f8      	b.n	1a005858 <__sflush_r+0xd4>
1a005866:	6d22      	ldr	r2, [r4, #80]	; 0x50
1a005868:	e7b1      	b.n	1a0057ce <__sflush_r+0x4a>
1a00586a:	89a3      	ldrh	r3, [r4, #12]
1a00586c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a005870:	81a3      	strh	r3, [r4, #12]
1a005872:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a005876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00587a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a00587e:	6922      	ldr	r2, [r4, #16]
1a005880:	6022      	str	r2, [r4, #0]
1a005882:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a005886:	2200      	movs	r2, #0
1a005888:	6062      	str	r2, [r4, #4]
1a00588a:	04da      	lsls	r2, r3, #19
1a00588c:	81a3      	strh	r3, [r4, #12]
1a00588e:	d5bc      	bpl.n	1a00580a <__sflush_r+0x86>
1a005890:	6520      	str	r0, [r4, #80]	; 0x50
1a005892:	e7ba      	b.n	1a00580a <__sflush_r+0x86>
1a005894:	f8d8 3000 	ldr.w	r3, [r8]
1a005898:	2b00      	cmp	r3, #0
1a00589a:	d095      	beq.n	1a0057c8 <__sflush_r+0x44>
1a00589c:	2b1d      	cmp	r3, #29
1a00589e:	d00f      	beq.n	1a0058c0 <__sflush_r+0x13c>
1a0058a0:	2b16      	cmp	r3, #22
1a0058a2:	d00d      	beq.n	1a0058c0 <__sflush_r+0x13c>
1a0058a4:	89a3      	ldrh	r3, [r4, #12]
1a0058a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0058aa:	81a3      	strh	r3, [r4, #12]
1a0058ac:	e7d5      	b.n	1a00585a <__sflush_r+0xd6>
1a0058ae:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a0058b2:	6921      	ldr	r1, [r4, #16]
1a0058b4:	81a3      	strh	r3, [r4, #12]
1a0058b6:	04db      	lsls	r3, r3, #19
1a0058b8:	e9c4 1200 	strd	r1, r2, [r4]
1a0058bc:	d5a5      	bpl.n	1a00580a <__sflush_r+0x86>
1a0058be:	e7e7      	b.n	1a005890 <__sflush_r+0x10c>
1a0058c0:	f8c8 6000 	str.w	r6, [r8]
1a0058c4:	e7c8      	b.n	1a005858 <__sflush_r+0xd4>
1a0058c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0058ca:	81a3      	strh	r3, [r4, #12]
1a0058cc:	e7c5      	b.n	1a00585a <__sflush_r+0xd6>
1a0058ce:	bf00      	nop

1a0058d0 <_fflush_r>:
1a0058d0:	b538      	push	{r3, r4, r5, lr}
1a0058d2:	460d      	mov	r5, r1
1a0058d4:	4604      	mov	r4, r0
1a0058d6:	b108      	cbz	r0, 1a0058dc <_fflush_r+0xc>
1a0058d8:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a0058da:	b1a3      	cbz	r3, 1a005906 <_fflush_r+0x36>
1a0058dc:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
1a0058e0:	b1b8      	cbz	r0, 1a005912 <_fflush_r+0x42>
1a0058e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
1a0058e4:	07db      	lsls	r3, r3, #31
1a0058e6:	d401      	bmi.n	1a0058ec <_fflush_r+0x1c>
1a0058e8:	0581      	lsls	r1, r0, #22
1a0058ea:	d515      	bpl.n	1a005918 <_fflush_r+0x48>
1a0058ec:	4620      	mov	r0, r4
1a0058ee:	4629      	mov	r1, r5
1a0058f0:	f7ff ff48 	bl	1a005784 <__sflush_r>
1a0058f4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
1a0058f6:	07da      	lsls	r2, r3, #31
1a0058f8:	4604      	mov	r4, r0
1a0058fa:	d402      	bmi.n	1a005902 <_fflush_r+0x32>
1a0058fc:	89ab      	ldrh	r3, [r5, #12]
1a0058fe:	059b      	lsls	r3, r3, #22
1a005900:	d50e      	bpl.n	1a005920 <_fflush_r+0x50>
1a005902:	4620      	mov	r0, r4
1a005904:	bd38      	pop	{r3, r4, r5, pc}
1a005906:	f000 f83f 	bl	1a005988 <__sinit>
1a00590a:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
1a00590e:	2800      	cmp	r0, #0
1a005910:	d1e7      	bne.n	1a0058e2 <_fflush_r+0x12>
1a005912:	4604      	mov	r4, r0
1a005914:	4620      	mov	r0, r4
1a005916:	bd38      	pop	{r3, r4, r5, pc}
1a005918:	6da8      	ldr	r0, [r5, #88]	; 0x58
1a00591a:	f000 fb67 	bl	1a005fec <__retarget_lock_acquire_recursive>
1a00591e:	e7e5      	b.n	1a0058ec <_fflush_r+0x1c>
1a005920:	6da8      	ldr	r0, [r5, #88]	; 0x58
1a005922:	f000 fb65 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a005926:	4620      	mov	r0, r4
1a005928:	bd38      	pop	{r3, r4, r5, pc}
1a00592a:	bf00      	nop

1a00592c <std>:
1a00592c:	b510      	push	{r4, lr}
1a00592e:	2300      	movs	r3, #0
1a005930:	4604      	mov	r4, r0
1a005932:	8181      	strh	r1, [r0, #12]
1a005934:	81c2      	strh	r2, [r0, #14]
1a005936:	e9c0 3300 	strd	r3, r3, [r0]
1a00593a:	6083      	str	r3, [r0, #8]
1a00593c:	6643      	str	r3, [r0, #100]	; 0x64
1a00593e:	e9c0 3304 	strd	r3, r3, [r0, #16]
1a005942:	6183      	str	r3, [r0, #24]
1a005944:	4619      	mov	r1, r3
1a005946:	2208      	movs	r2, #8
1a005948:	305c      	adds	r0, #92	; 0x5c
1a00594a:	f7fd f819 	bl	1a002980 <memset>
1a00594e:	4807      	ldr	r0, [pc, #28]	; (1a00596c <std+0x40>)
1a005950:	4907      	ldr	r1, [pc, #28]	; (1a005970 <std+0x44>)
1a005952:	4a08      	ldr	r2, [pc, #32]	; (1a005974 <std+0x48>)
1a005954:	4b08      	ldr	r3, [pc, #32]	; (1a005978 <std+0x4c>)
1a005956:	62e3      	str	r3, [r4, #44]	; 0x2c
1a005958:	e9c4 4007 	strd	r4, r0, [r4, #28]
1a00595c:	e9c4 1209 	strd	r1, r2, [r4, #36]	; 0x24
1a005960:	f104 0058 	add.w	r0, r4, #88	; 0x58
1a005964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1a005968:	f000 bb3c 	b.w	1a005fe4 <__retarget_lock_init_recursive>
1a00596c:	1a0071d5 	.word	0x1a0071d5
1a005970:	1a0071f9 	.word	0x1a0071f9
1a005974:	1a007239 	.word	0x1a007239
1a005978:	1a007259 	.word	0x1a007259

1a00597c <_cleanup_r>:
1a00597c:	4901      	ldr	r1, [pc, #4]	; (1a005984 <_cleanup_r+0x8>)
1a00597e:	f000 bb03 	b.w	1a005f88 <_fwalk_reent>
1a005982:	bf00      	nop
1a005984:	1a0073c1 	.word	0x1a0073c1

1a005988 <__sinit>:
1a005988:	b510      	push	{r4, lr}
1a00598a:	4604      	mov	r4, r0
1a00598c:	4811      	ldr	r0, [pc, #68]	; (1a0059d4 <__sinit+0x4c>)
1a00598e:	f000 fb2d 	bl	1a005fec <__retarget_lock_acquire_recursive>
1a005992:	6ba2      	ldr	r2, [r4, #56]	; 0x38
1a005994:	b9c2      	cbnz	r2, 1a0059c8 <__sinit+0x40>
1a005996:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
1a00599a:	480f      	ldr	r0, [pc, #60]	; (1a0059d8 <__sinit+0x50>)
1a00599c:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
1a0059a0:	2103      	movs	r1, #3
1a0059a2:	e9c4 13b9 	strd	r1, r3, [r4, #740]	; 0x2e4
1a0059a6:	63e0      	str	r0, [r4, #60]	; 0x3c
1a0059a8:	2104      	movs	r1, #4
1a0059aa:	6860      	ldr	r0, [r4, #4]
1a0059ac:	f7ff ffbe 	bl	1a00592c <std>
1a0059b0:	2201      	movs	r2, #1
1a0059b2:	2109      	movs	r1, #9
1a0059b4:	68a0      	ldr	r0, [r4, #8]
1a0059b6:	f7ff ffb9 	bl	1a00592c <std>
1a0059ba:	2202      	movs	r2, #2
1a0059bc:	2112      	movs	r1, #18
1a0059be:	68e0      	ldr	r0, [r4, #12]
1a0059c0:	f7ff ffb4 	bl	1a00592c <std>
1a0059c4:	2301      	movs	r3, #1
1a0059c6:	63a3      	str	r3, [r4, #56]	; 0x38
1a0059c8:	4802      	ldr	r0, [pc, #8]	; (1a0059d4 <__sinit+0x4c>)
1a0059ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1a0059ce:	f000 bb0f 	b.w	1a005ff0 <__retarget_lock_release_recursive>
1a0059d2:	bf00      	nop
1a0059d4:	10000b10 	.word	0x10000b10
1a0059d8:	1a00597d 	.word	0x1a00597d

1a0059dc <__sfp_lock_acquire>:
1a0059dc:	4801      	ldr	r0, [pc, #4]	; (1a0059e4 <__sfp_lock_acquire+0x8>)
1a0059de:	f000 bb05 	b.w	1a005fec <__retarget_lock_acquire_recursive>
1a0059e2:	bf00      	nop
1a0059e4:	10000b24 	.word	0x10000b24

1a0059e8 <__sfp_lock_release>:
1a0059e8:	4801      	ldr	r0, [pc, #4]	; (1a0059f0 <__sfp_lock_release+0x8>)
1a0059ea:	f000 bb01 	b.w	1a005ff0 <__retarget_lock_release_recursive>
1a0059ee:	bf00      	nop
1a0059f0:	10000b24 	.word	0x10000b24

1a0059f4 <_malloc_trim_r>:
1a0059f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0059f6:	4f24      	ldr	r7, [pc, #144]	; (1a005a88 <_malloc_trim_r+0x94>)
1a0059f8:	460c      	mov	r4, r1
1a0059fa:	4606      	mov	r6, r0
1a0059fc:	f000 fee8 	bl	1a0067d0 <__malloc_lock>
1a005a00:	68bb      	ldr	r3, [r7, #8]
1a005a02:	685d      	ldr	r5, [r3, #4]
1a005a04:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
1a005a08:	310f      	adds	r1, #15
1a005a0a:	f025 0503 	bic.w	r5, r5, #3
1a005a0e:	4429      	add	r1, r5
1a005a10:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
1a005a14:	f021 010f 	bic.w	r1, r1, #15
1a005a18:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
1a005a1c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
1a005a20:	db07      	blt.n	1a005a32 <_malloc_trim_r+0x3e>
1a005a22:	2100      	movs	r1, #0
1a005a24:	4630      	mov	r0, r6
1a005a26:	f7fa feed 	bl	1a000804 <_sbrk_r>
1a005a2a:	68bb      	ldr	r3, [r7, #8]
1a005a2c:	442b      	add	r3, r5
1a005a2e:	4298      	cmp	r0, r3
1a005a30:	d004      	beq.n	1a005a3c <_malloc_trim_r+0x48>
1a005a32:	4630      	mov	r0, r6
1a005a34:	f000 fed2 	bl	1a0067dc <__malloc_unlock>
1a005a38:	2000      	movs	r0, #0
1a005a3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a005a3c:	4261      	negs	r1, r4
1a005a3e:	4630      	mov	r0, r6
1a005a40:	f7fa fee0 	bl	1a000804 <_sbrk_r>
1a005a44:	3001      	adds	r0, #1
1a005a46:	d00d      	beq.n	1a005a64 <_malloc_trim_r+0x70>
1a005a48:	4b10      	ldr	r3, [pc, #64]	; (1a005a8c <_malloc_trim_r+0x98>)
1a005a4a:	68ba      	ldr	r2, [r7, #8]
1a005a4c:	6819      	ldr	r1, [r3, #0]
1a005a4e:	1b2d      	subs	r5, r5, r4
1a005a50:	f045 0501 	orr.w	r5, r5, #1
1a005a54:	4630      	mov	r0, r6
1a005a56:	1b09      	subs	r1, r1, r4
1a005a58:	6055      	str	r5, [r2, #4]
1a005a5a:	6019      	str	r1, [r3, #0]
1a005a5c:	f000 febe 	bl	1a0067dc <__malloc_unlock>
1a005a60:	2001      	movs	r0, #1
1a005a62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a005a64:	2100      	movs	r1, #0
1a005a66:	4630      	mov	r0, r6
1a005a68:	f7fa fecc 	bl	1a000804 <_sbrk_r>
1a005a6c:	68ba      	ldr	r2, [r7, #8]
1a005a6e:	1a83      	subs	r3, r0, r2
1a005a70:	2b0f      	cmp	r3, #15
1a005a72:	ddde      	ble.n	1a005a32 <_malloc_trim_r+0x3e>
1a005a74:	4c06      	ldr	r4, [pc, #24]	; (1a005a90 <_malloc_trim_r+0x9c>)
1a005a76:	4905      	ldr	r1, [pc, #20]	; (1a005a8c <_malloc_trim_r+0x98>)
1a005a78:	6824      	ldr	r4, [r4, #0]
1a005a7a:	f043 0301 	orr.w	r3, r3, #1
1a005a7e:	1b00      	subs	r0, r0, r4
1a005a80:	6053      	str	r3, [r2, #4]
1a005a82:	6008      	str	r0, [r1, #0]
1a005a84:	e7d5      	b.n	1a005a32 <_malloc_trim_r+0x3e>
1a005a86:	bf00      	nop
1a005a88:	10000478 	.word	0x10000478
1a005a8c:	10000a70 	.word	0x10000a70
1a005a90:	10000880 	.word	0x10000880

1a005a94 <_free_r>:
1a005a94:	2900      	cmp	r1, #0
1a005a96:	d05d      	beq.n	1a005b54 <_free_r+0xc0>
1a005a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a005a9a:	460f      	mov	r7, r1
1a005a9c:	4606      	mov	r6, r0
1a005a9e:	f000 fe97 	bl	1a0067d0 <__malloc_lock>
1a005aa2:	f857 cc04 	ldr.w	ip, [r7, #-4]
1a005aa6:	4c73      	ldr	r4, [pc, #460]	; (1a005c74 <_free_r+0x1e0>)
1a005aa8:	f02c 0301 	bic.w	r3, ip, #1
1a005aac:	f1a7 0008 	sub.w	r0, r7, #8
1a005ab0:	18c2      	adds	r2, r0, r3
1a005ab2:	68a1      	ldr	r1, [r4, #8]
1a005ab4:	6855      	ldr	r5, [r2, #4]
1a005ab6:	4291      	cmp	r1, r2
1a005ab8:	f025 0503 	bic.w	r5, r5, #3
1a005abc:	d07f      	beq.n	1a005bbe <_free_r+0x12a>
1a005abe:	f01c 0f01 	tst.w	ip, #1
1a005ac2:	6055      	str	r5, [r2, #4]
1a005ac4:	eb02 0105 	add.w	r1, r2, r5
1a005ac8:	d133      	bne.n	1a005b32 <_free_r+0x9e>
1a005aca:	f857 ec08 	ldr.w	lr, [r7, #-8]
1a005ace:	6849      	ldr	r1, [r1, #4]
1a005ad0:	eba0 000e 	sub.w	r0, r0, lr
1a005ad4:	f104 0c08 	add.w	ip, r4, #8
1a005ad8:	6887      	ldr	r7, [r0, #8]
1a005ada:	4567      	cmp	r7, ip
1a005adc:	4473      	add	r3, lr
1a005ade:	f001 0101 	and.w	r1, r1, #1
1a005ae2:	d060      	beq.n	1a005ba6 <_free_r+0x112>
1a005ae4:	f8d0 e00c 	ldr.w	lr, [r0, #12]
1a005ae8:	f8c7 e00c 	str.w	lr, [r7, #12]
1a005aec:	f8ce 7008 	str.w	r7, [lr, #8]
1a005af0:	2900      	cmp	r1, #0
1a005af2:	f000 8089 	beq.w	1a005c08 <_free_r+0x174>
1a005af6:	f043 0101 	orr.w	r1, r3, #1
1a005afa:	6041      	str	r1, [r0, #4]
1a005afc:	6013      	str	r3, [r2, #0]
1a005afe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a005b02:	d230      	bcs.n	1a005b66 <_free_r+0xd2>
1a005b04:	08db      	lsrs	r3, r3, #3
1a005b06:	1c59      	adds	r1, r3, #1
1a005b08:	6865      	ldr	r5, [r4, #4]
1a005b0a:	109a      	asrs	r2, r3, #2
1a005b0c:	2301      	movs	r3, #1
1a005b0e:	4093      	lsls	r3, r2
1a005b10:	432b      	orrs	r3, r5
1a005b12:	eb04 02c1 	add.w	r2, r4, r1, lsl #3
1a005b16:	f854 5031 	ldr.w	r5, [r4, r1, lsl #3]
1a005b1a:	6063      	str	r3, [r4, #4]
1a005b1c:	3a08      	subs	r2, #8
1a005b1e:	e9c0 5202 	strd	r5, r2, [r0, #8]
1a005b22:	f844 0031 	str.w	r0, [r4, r1, lsl #3]
1a005b26:	60e8      	str	r0, [r5, #12]
1a005b28:	4630      	mov	r0, r6
1a005b2a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a005b2e:	f000 be55 	b.w	1a0067dc <__malloc_unlock>
1a005b32:	6849      	ldr	r1, [r1, #4]
1a005b34:	07c9      	lsls	r1, r1, #31
1a005b36:	d40e      	bmi.n	1a005b56 <_free_r+0xc2>
1a005b38:	442b      	add	r3, r5
1a005b3a:	f104 0c08 	add.w	ip, r4, #8
1a005b3e:	6891      	ldr	r1, [r2, #8]
1a005b40:	4561      	cmp	r1, ip
1a005b42:	f043 0501 	orr.w	r5, r3, #1
1a005b46:	d067      	beq.n	1a005c18 <_free_r+0x184>
1a005b48:	68d2      	ldr	r2, [r2, #12]
1a005b4a:	60ca      	str	r2, [r1, #12]
1a005b4c:	6091      	str	r1, [r2, #8]
1a005b4e:	6045      	str	r5, [r0, #4]
1a005b50:	50c3      	str	r3, [r0, r3]
1a005b52:	e7d4      	b.n	1a005afe <_free_r+0x6a>
1a005b54:	4770      	bx	lr
1a005b56:	f043 0101 	orr.w	r1, r3, #1
1a005b5a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a005b5e:	f847 1c04 	str.w	r1, [r7, #-4]
1a005b62:	6013      	str	r3, [r2, #0]
1a005b64:	d3ce      	bcc.n	1a005b04 <_free_r+0x70>
1a005b66:	0a5a      	lsrs	r2, r3, #9
1a005b68:	2a04      	cmp	r2, #4
1a005b6a:	d842      	bhi.n	1a005bf2 <_free_r+0x15e>
1a005b6c:	099a      	lsrs	r2, r3, #6
1a005b6e:	f102 0739 	add.w	r7, r2, #57	; 0x39
1a005b72:	00ff      	lsls	r7, r7, #3
1a005b74:	f102 0138 	add.w	r1, r2, #56	; 0x38
1a005b78:	19e5      	adds	r5, r4, r7
1a005b7a:	59e2      	ldr	r2, [r4, r7]
1a005b7c:	3d08      	subs	r5, #8
1a005b7e:	4295      	cmp	r5, r2
1a005b80:	d051      	beq.n	1a005c26 <_free_r+0x192>
1a005b82:	6851      	ldr	r1, [r2, #4]
1a005b84:	f021 0103 	bic.w	r1, r1, #3
1a005b88:	4299      	cmp	r1, r3
1a005b8a:	d902      	bls.n	1a005b92 <_free_r+0xfe>
1a005b8c:	6892      	ldr	r2, [r2, #8]
1a005b8e:	4295      	cmp	r5, r2
1a005b90:	d1f7      	bne.n	1a005b82 <_free_r+0xee>
1a005b92:	68d5      	ldr	r5, [r2, #12]
1a005b94:	e9c0 2502 	strd	r2, r5, [r0, #8]
1a005b98:	60a8      	str	r0, [r5, #8]
1a005b9a:	60d0      	str	r0, [r2, #12]
1a005b9c:	4630      	mov	r0, r6
1a005b9e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a005ba2:	f000 be1b 	b.w	1a0067dc <__malloc_unlock>
1a005ba6:	2900      	cmp	r1, #0
1a005ba8:	d15e      	bne.n	1a005c68 <_free_r+0x1d4>
1a005baa:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
1a005bae:	442b      	add	r3, r5
1a005bb0:	f043 0401 	orr.w	r4, r3, #1
1a005bb4:	60ca      	str	r2, [r1, #12]
1a005bb6:	6091      	str	r1, [r2, #8]
1a005bb8:	6044      	str	r4, [r0, #4]
1a005bba:	50c3      	str	r3, [r0, r3]
1a005bbc:	e7b4      	b.n	1a005b28 <_free_r+0x94>
1a005bbe:	f01c 0f01 	tst.w	ip, #1
1a005bc2:	442b      	add	r3, r5
1a005bc4:	d107      	bne.n	1a005bd6 <_free_r+0x142>
1a005bc6:	f857 2c08 	ldr.w	r2, [r7, #-8]
1a005bca:	1a80      	subs	r0, r0, r2
1a005bcc:	4413      	add	r3, r2
1a005bce:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
1a005bd2:	60ca      	str	r2, [r1, #12]
1a005bd4:	6091      	str	r1, [r2, #8]
1a005bd6:	4a28      	ldr	r2, [pc, #160]	; (1a005c78 <_free_r+0x1e4>)
1a005bd8:	6812      	ldr	r2, [r2, #0]
1a005bda:	f043 0101 	orr.w	r1, r3, #1
1a005bde:	429a      	cmp	r2, r3
1a005be0:	6041      	str	r1, [r0, #4]
1a005be2:	60a0      	str	r0, [r4, #8]
1a005be4:	d8a0      	bhi.n	1a005b28 <_free_r+0x94>
1a005be6:	4b25      	ldr	r3, [pc, #148]	; (1a005c7c <_free_r+0x1e8>)
1a005be8:	4630      	mov	r0, r6
1a005bea:	6819      	ldr	r1, [r3, #0]
1a005bec:	f7ff ff02 	bl	1a0059f4 <_malloc_trim_r>
1a005bf0:	e79a      	b.n	1a005b28 <_free_r+0x94>
1a005bf2:	2a14      	cmp	r2, #20
1a005bf4:	d90a      	bls.n	1a005c0c <_free_r+0x178>
1a005bf6:	2a54      	cmp	r2, #84	; 0x54
1a005bf8:	d81d      	bhi.n	1a005c36 <_free_r+0x1a2>
1a005bfa:	0b1a      	lsrs	r2, r3, #12
1a005bfc:	f102 076f 	add.w	r7, r2, #111	; 0x6f
1a005c00:	00ff      	lsls	r7, r7, #3
1a005c02:	f102 016e 	add.w	r1, r2, #110	; 0x6e
1a005c06:	e7b7      	b.n	1a005b78 <_free_r+0xe4>
1a005c08:	442b      	add	r3, r5
1a005c0a:	e798      	b.n	1a005b3e <_free_r+0xaa>
1a005c0c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
1a005c10:	00ff      	lsls	r7, r7, #3
1a005c12:	f102 015b 	add.w	r1, r2, #91	; 0x5b
1a005c16:	e7af      	b.n	1a005b78 <_free_r+0xe4>
1a005c18:	e9c4 0004 	strd	r0, r0, [r4, #16]
1a005c1c:	e9c0 cc02 	strd	ip, ip, [r0, #8]
1a005c20:	6045      	str	r5, [r0, #4]
1a005c22:	50c3      	str	r3, [r0, r3]
1a005c24:	e780      	b.n	1a005b28 <_free_r+0x94>
1a005c26:	6863      	ldr	r3, [r4, #4]
1a005c28:	1089      	asrs	r1, r1, #2
1a005c2a:	2701      	movs	r7, #1
1a005c2c:	fa07 f101 	lsl.w	r1, r7, r1
1a005c30:	4319      	orrs	r1, r3
1a005c32:	6061      	str	r1, [r4, #4]
1a005c34:	e7ae      	b.n	1a005b94 <_free_r+0x100>
1a005c36:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a005c3a:	d806      	bhi.n	1a005c4a <_free_r+0x1b6>
1a005c3c:	0bda      	lsrs	r2, r3, #15
1a005c3e:	f102 0778 	add.w	r7, r2, #120	; 0x78
1a005c42:	00ff      	lsls	r7, r7, #3
1a005c44:	f102 0177 	add.w	r1, r2, #119	; 0x77
1a005c48:	e796      	b.n	1a005b78 <_free_r+0xe4>
1a005c4a:	f240 5154 	movw	r1, #1364	; 0x554
1a005c4e:	428a      	cmp	r2, r1
1a005c50:	d806      	bhi.n	1a005c60 <_free_r+0x1cc>
1a005c52:	0c9a      	lsrs	r2, r3, #18
1a005c54:	f102 077d 	add.w	r7, r2, #125	; 0x7d
1a005c58:	00ff      	lsls	r7, r7, #3
1a005c5a:	f102 017c 	add.w	r1, r2, #124	; 0x7c
1a005c5e:	e78b      	b.n	1a005b78 <_free_r+0xe4>
1a005c60:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
1a005c64:	217e      	movs	r1, #126	; 0x7e
1a005c66:	e787      	b.n	1a005b78 <_free_r+0xe4>
1a005c68:	f043 0101 	orr.w	r1, r3, #1
1a005c6c:	6041      	str	r1, [r0, #4]
1a005c6e:	6013      	str	r3, [r2, #0]
1a005c70:	e75a      	b.n	1a005b28 <_free_r+0x94>
1a005c72:	bf00      	nop
1a005c74:	10000478 	.word	0x10000478
1a005c78:	10000884 	.word	0x10000884
1a005c7c:	10000aa0 	.word	0x10000aa0

1a005c80 <__sfvwrite_r>:
1a005c80:	6893      	ldr	r3, [r2, #8]
1a005c82:	2b00      	cmp	r3, #0
1a005c84:	f000 8102 	beq.w	1a005e8c <__sfvwrite_r+0x20c>
1a005c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a005c8c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1a005c90:	b29b      	uxth	r3, r3
1a005c92:	460c      	mov	r4, r1
1a005c94:	0719      	lsls	r1, r3, #28
1a005c96:	b083      	sub	sp, #12
1a005c98:	4682      	mov	sl, r0
1a005c9a:	4690      	mov	r8, r2
1a005c9c:	d535      	bpl.n	1a005d0a <__sfvwrite_r+0x8a>
1a005c9e:	6922      	ldr	r2, [r4, #16]
1a005ca0:	b39a      	cbz	r2, 1a005d0a <__sfvwrite_r+0x8a>
1a005ca2:	f013 0202 	ands.w	r2, r3, #2
1a005ca6:	f8d8 6000 	ldr.w	r6, [r8]
1a005caa:	d03d      	beq.n	1a005d28 <__sfvwrite_r+0xa8>
1a005cac:	2700      	movs	r7, #0
1a005cae:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
1a005cb2:	f8d4 c01c 	ldr.w	ip, [r4, #28]
1a005cb6:	f8df 92cc 	ldr.w	r9, [pc, #716]	; 1a005f84 <__sfvwrite_r+0x304>
1a005cba:	463d      	mov	r5, r7
1a005cbc:	454d      	cmp	r5, r9
1a005cbe:	462b      	mov	r3, r5
1a005cc0:	463a      	mov	r2, r7
1a005cc2:	bf28      	it	cs
1a005cc4:	464b      	movcs	r3, r9
1a005cc6:	4661      	mov	r1, ip
1a005cc8:	4650      	mov	r0, sl
1a005cca:	b1d5      	cbz	r5, 1a005d02 <__sfvwrite_r+0x82>
1a005ccc:	47d8      	blx	fp
1a005cce:	2800      	cmp	r0, #0
1a005cd0:	f340 80d2 	ble.w	1a005e78 <__sfvwrite_r+0x1f8>
1a005cd4:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a005cd8:	1a1b      	subs	r3, r3, r0
1a005cda:	4407      	add	r7, r0
1a005cdc:	1a2d      	subs	r5, r5, r0
1a005cde:	f8c8 3008 	str.w	r3, [r8, #8]
1a005ce2:	2b00      	cmp	r3, #0
1a005ce4:	f000 80b7 	beq.w	1a005e56 <__sfvwrite_r+0x1d6>
1a005ce8:	f8d4 c01c 	ldr.w	ip, [r4, #28]
1a005cec:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
1a005cf0:	454d      	cmp	r5, r9
1a005cf2:	462b      	mov	r3, r5
1a005cf4:	463a      	mov	r2, r7
1a005cf6:	bf28      	it	cs
1a005cf8:	464b      	movcs	r3, r9
1a005cfa:	4661      	mov	r1, ip
1a005cfc:	4650      	mov	r0, sl
1a005cfe:	2d00      	cmp	r5, #0
1a005d00:	d1e4      	bne.n	1a005ccc <__sfvwrite_r+0x4c>
1a005d02:	e9d6 7500 	ldrd	r7, r5, [r6]
1a005d06:	3608      	adds	r6, #8
1a005d08:	e7d8      	b.n	1a005cbc <__sfvwrite_r+0x3c>
1a005d0a:	4621      	mov	r1, r4
1a005d0c:	4650      	mov	r0, sl
1a005d0e:	f7fe fd13 	bl	1a004738 <__swsetup_r>
1a005d12:	2800      	cmp	r0, #0
1a005d14:	f040 8130 	bne.w	1a005f78 <__sfvwrite_r+0x2f8>
1a005d18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005d1c:	f8d8 6000 	ldr.w	r6, [r8]
1a005d20:	b29b      	uxth	r3, r3
1a005d22:	f013 0202 	ands.w	r2, r3, #2
1a005d26:	d1c1      	bne.n	1a005cac <__sfvwrite_r+0x2c>
1a005d28:	f013 0901 	ands.w	r9, r3, #1
1a005d2c:	f040 80b0 	bne.w	1a005e90 <__sfvwrite_r+0x210>
1a005d30:	68a7      	ldr	r7, [r4, #8]
1a005d32:	6820      	ldr	r0, [r4, #0]
1a005d34:	464d      	mov	r5, r9
1a005d36:	2d00      	cmp	r5, #0
1a005d38:	d054      	beq.n	1a005de4 <__sfvwrite_r+0x164>
1a005d3a:	059a      	lsls	r2, r3, #22
1a005d3c:	f140 80bc 	bpl.w	1a005eb8 <__sfvwrite_r+0x238>
1a005d40:	42af      	cmp	r7, r5
1a005d42:	46bb      	mov	fp, r7
1a005d44:	f200 80e7 	bhi.w	1a005f16 <__sfvwrite_r+0x296>
1a005d48:	f413 6f90 	tst.w	r3, #1152	; 0x480
1a005d4c:	d02f      	beq.n	1a005dae <__sfvwrite_r+0x12e>
1a005d4e:	e9d4 1704 	ldrd	r1, r7, [r4, #16]
1a005d52:	eb07 0747 	add.w	r7, r7, r7, lsl #1
1a005d56:	eba0 0b01 	sub.w	fp, r0, r1
1a005d5a:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
1a005d5e:	1c68      	adds	r0, r5, #1
1a005d60:	107f      	asrs	r7, r7, #1
1a005d62:	4458      	add	r0, fp
1a005d64:	42b8      	cmp	r0, r7
1a005d66:	463a      	mov	r2, r7
1a005d68:	bf84      	itt	hi
1a005d6a:	4607      	movhi	r7, r0
1a005d6c:	463a      	movhi	r2, r7
1a005d6e:	055b      	lsls	r3, r3, #21
1a005d70:	f140 80e9 	bpl.w	1a005f46 <__sfvwrite_r+0x2c6>
1a005d74:	4611      	mov	r1, r2
1a005d76:	4650      	mov	r0, sl
1a005d78:	f000 f9b4 	bl	1a0060e4 <_malloc_r>
1a005d7c:	2800      	cmp	r0, #0
1a005d7e:	f000 80f5 	beq.w	1a005f6c <__sfvwrite_r+0x2ec>
1a005d82:	465a      	mov	r2, fp
1a005d84:	6921      	ldr	r1, [r4, #16]
1a005d86:	9001      	str	r0, [sp, #4]
1a005d88:	f7fc fd60 	bl	1a00284c <memcpy>
1a005d8c:	89a2      	ldrh	r2, [r4, #12]
1a005d8e:	9b01      	ldr	r3, [sp, #4]
1a005d90:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
1a005d94:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a005d98:	81a2      	strh	r2, [r4, #12]
1a005d9a:	eba7 020b 	sub.w	r2, r7, fp
1a005d9e:	eb03 000b 	add.w	r0, r3, fp
1a005da2:	6167      	str	r7, [r4, #20]
1a005da4:	6123      	str	r3, [r4, #16]
1a005da6:	6020      	str	r0, [r4, #0]
1a005da8:	60a2      	str	r2, [r4, #8]
1a005daa:	462f      	mov	r7, r5
1a005dac:	46ab      	mov	fp, r5
1a005dae:	465a      	mov	r2, fp
1a005db0:	4649      	mov	r1, r9
1a005db2:	f000 fca5 	bl	1a006700 <memmove>
1a005db6:	68a2      	ldr	r2, [r4, #8]
1a005db8:	6823      	ldr	r3, [r4, #0]
1a005dba:	1bd2      	subs	r2, r2, r7
1a005dbc:	445b      	add	r3, fp
1a005dbe:	462f      	mov	r7, r5
1a005dc0:	60a2      	str	r2, [r4, #8]
1a005dc2:	6023      	str	r3, [r4, #0]
1a005dc4:	2500      	movs	r5, #0
1a005dc6:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a005dca:	1bdb      	subs	r3, r3, r7
1a005dcc:	44b9      	add	r9, r7
1a005dce:	f8c8 3008 	str.w	r3, [r8, #8]
1a005dd2:	2b00      	cmp	r3, #0
1a005dd4:	d03f      	beq.n	1a005e56 <__sfvwrite_r+0x1d6>
1a005dd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005dda:	68a7      	ldr	r7, [r4, #8]
1a005ddc:	6820      	ldr	r0, [r4, #0]
1a005dde:	b29b      	uxth	r3, r3
1a005de0:	2d00      	cmp	r5, #0
1a005de2:	d1aa      	bne.n	1a005d3a <__sfvwrite_r+0xba>
1a005de4:	e9d6 9500 	ldrd	r9, r5, [r6]
1a005de8:	3608      	adds	r6, #8
1a005dea:	e7a4      	b.n	1a005d36 <__sfvwrite_r+0xb6>
1a005dec:	f10b 0308 	add.w	r3, fp, #8
1a005df0:	e953 6702 	ldrd	r6, r7, [r3, #-8]
1a005df4:	469b      	mov	fp, r3
1a005df6:	3308      	adds	r3, #8
1a005df8:	2f00      	cmp	r7, #0
1a005dfa:	d0f9      	beq.n	1a005df0 <__sfvwrite_r+0x170>
1a005dfc:	463a      	mov	r2, r7
1a005dfe:	210a      	movs	r1, #10
1a005e00:	4630      	mov	r0, r6
1a005e02:	f000 fc2d 	bl	1a006660 <memchr>
1a005e06:	2800      	cmp	r0, #0
1a005e08:	d053      	beq.n	1a005eb2 <__sfvwrite_r+0x232>
1a005e0a:	3001      	adds	r0, #1
1a005e0c:	eba0 0906 	sub.w	r9, r0, r6
1a005e10:	464b      	mov	r3, r9
1a005e12:	e9d4 1204 	ldrd	r1, r2, [r4, #16]
1a005e16:	6820      	ldr	r0, [r4, #0]
1a005e18:	42bb      	cmp	r3, r7
1a005e1a:	bf28      	it	cs
1a005e1c:	463b      	movcs	r3, r7
1a005e1e:	4288      	cmp	r0, r1
1a005e20:	d903      	bls.n	1a005e2a <__sfvwrite_r+0x1aa>
1a005e22:	68a5      	ldr	r5, [r4, #8]
1a005e24:	4415      	add	r5, r2
1a005e26:	42ab      	cmp	r3, r5
1a005e28:	dc19      	bgt.n	1a005e5e <__sfvwrite_r+0x1de>
1a005e2a:	429a      	cmp	r2, r3
1a005e2c:	dc7d      	bgt.n	1a005f2a <__sfvwrite_r+0x2aa>
1a005e2e:	4613      	mov	r3, r2
1a005e30:	6a65      	ldr	r5, [r4, #36]	; 0x24
1a005e32:	69e1      	ldr	r1, [r4, #28]
1a005e34:	4632      	mov	r2, r6
1a005e36:	4650      	mov	r0, sl
1a005e38:	47a8      	blx	r5
1a005e3a:	1e05      	subs	r5, r0, #0
1a005e3c:	dd1c      	ble.n	1a005e78 <__sfvwrite_r+0x1f8>
1a005e3e:	ebb9 0905 	subs.w	r9, r9, r5
1a005e42:	d06b      	beq.n	1a005f1c <__sfvwrite_r+0x29c>
1a005e44:	2001      	movs	r0, #1
1a005e46:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a005e4a:	1b5b      	subs	r3, r3, r5
1a005e4c:	442e      	add	r6, r5
1a005e4e:	1b7f      	subs	r7, r7, r5
1a005e50:	f8c8 3008 	str.w	r3, [r8, #8]
1a005e54:	bb13      	cbnz	r3, 1a005e9c <__sfvwrite_r+0x21c>
1a005e56:	2000      	movs	r0, #0
1a005e58:	b003      	add	sp, #12
1a005e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005e5e:	4631      	mov	r1, r6
1a005e60:	462a      	mov	r2, r5
1a005e62:	f000 fc4d 	bl	1a006700 <memmove>
1a005e66:	6823      	ldr	r3, [r4, #0]
1a005e68:	442b      	add	r3, r5
1a005e6a:	6023      	str	r3, [r4, #0]
1a005e6c:	4621      	mov	r1, r4
1a005e6e:	4650      	mov	r0, sl
1a005e70:	f7ff fd2e 	bl	1a0058d0 <_fflush_r>
1a005e74:	2800      	cmp	r0, #0
1a005e76:	d0e2      	beq.n	1a005e3e <__sfvwrite_r+0x1be>
1a005e78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005e7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a005e80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a005e84:	81a3      	strh	r3, [r4, #12]
1a005e86:	b003      	add	sp, #12
1a005e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005e8c:	2000      	movs	r0, #0
1a005e8e:	4770      	bx	lr
1a005e90:	4633      	mov	r3, r6
1a005e92:	4691      	mov	r9, r2
1a005e94:	4610      	mov	r0, r2
1a005e96:	4617      	mov	r7, r2
1a005e98:	464e      	mov	r6, r9
1a005e9a:	469b      	mov	fp, r3
1a005e9c:	2f00      	cmp	r7, #0
1a005e9e:	d0a5      	beq.n	1a005dec <__sfvwrite_r+0x16c>
1a005ea0:	2800      	cmp	r0, #0
1a005ea2:	d1b5      	bne.n	1a005e10 <__sfvwrite_r+0x190>
1a005ea4:	463a      	mov	r2, r7
1a005ea6:	210a      	movs	r1, #10
1a005ea8:	4630      	mov	r0, r6
1a005eaa:	f000 fbd9 	bl	1a006660 <memchr>
1a005eae:	2800      	cmp	r0, #0
1a005eb0:	d1ab      	bne.n	1a005e0a <__sfvwrite_r+0x18a>
1a005eb2:	1c7b      	adds	r3, r7, #1
1a005eb4:	4699      	mov	r9, r3
1a005eb6:	e7ac      	b.n	1a005e12 <__sfvwrite_r+0x192>
1a005eb8:	6923      	ldr	r3, [r4, #16]
1a005eba:	4283      	cmp	r3, r0
1a005ebc:	d315      	bcc.n	1a005eea <__sfvwrite_r+0x26a>
1a005ebe:	6961      	ldr	r1, [r4, #20]
1a005ec0:	42a9      	cmp	r1, r5
1a005ec2:	d812      	bhi.n	1a005eea <__sfvwrite_r+0x26a>
1a005ec4:	4b2e      	ldr	r3, [pc, #184]	; (1a005f80 <__sfvwrite_r+0x300>)
1a005ec6:	6a67      	ldr	r7, [r4, #36]	; 0x24
1a005ec8:	429d      	cmp	r5, r3
1a005eca:	bf94      	ite	ls
1a005ecc:	462b      	movls	r3, r5
1a005ece:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
1a005ed2:	464a      	mov	r2, r9
1a005ed4:	fb93 f3f1 	sdiv	r3, r3, r1
1a005ed8:	4650      	mov	r0, sl
1a005eda:	fb01 f303 	mul.w	r3, r1, r3
1a005ede:	69e1      	ldr	r1, [r4, #28]
1a005ee0:	47b8      	blx	r7
1a005ee2:	1e07      	subs	r7, r0, #0
1a005ee4:	ddc8      	ble.n	1a005e78 <__sfvwrite_r+0x1f8>
1a005ee6:	1bed      	subs	r5, r5, r7
1a005ee8:	e76d      	b.n	1a005dc6 <__sfvwrite_r+0x146>
1a005eea:	42af      	cmp	r7, r5
1a005eec:	bf28      	it	cs
1a005eee:	462f      	movcs	r7, r5
1a005ef0:	463a      	mov	r2, r7
1a005ef2:	4649      	mov	r1, r9
1a005ef4:	f000 fc04 	bl	1a006700 <memmove>
1a005ef8:	68a3      	ldr	r3, [r4, #8]
1a005efa:	6822      	ldr	r2, [r4, #0]
1a005efc:	1bdb      	subs	r3, r3, r7
1a005efe:	443a      	add	r2, r7
1a005f00:	60a3      	str	r3, [r4, #8]
1a005f02:	6022      	str	r2, [r4, #0]
1a005f04:	2b00      	cmp	r3, #0
1a005f06:	d1ee      	bne.n	1a005ee6 <__sfvwrite_r+0x266>
1a005f08:	4621      	mov	r1, r4
1a005f0a:	4650      	mov	r0, sl
1a005f0c:	f7ff fce0 	bl	1a0058d0 <_fflush_r>
1a005f10:	2800      	cmp	r0, #0
1a005f12:	d0e8      	beq.n	1a005ee6 <__sfvwrite_r+0x266>
1a005f14:	e7b0      	b.n	1a005e78 <__sfvwrite_r+0x1f8>
1a005f16:	462f      	mov	r7, r5
1a005f18:	46ab      	mov	fp, r5
1a005f1a:	e748      	b.n	1a005dae <__sfvwrite_r+0x12e>
1a005f1c:	4621      	mov	r1, r4
1a005f1e:	4650      	mov	r0, sl
1a005f20:	f7ff fcd6 	bl	1a0058d0 <_fflush_r>
1a005f24:	2800      	cmp	r0, #0
1a005f26:	d08e      	beq.n	1a005e46 <__sfvwrite_r+0x1c6>
1a005f28:	e7a6      	b.n	1a005e78 <__sfvwrite_r+0x1f8>
1a005f2a:	461a      	mov	r2, r3
1a005f2c:	4631      	mov	r1, r6
1a005f2e:	9301      	str	r3, [sp, #4]
1a005f30:	f000 fbe6 	bl	1a006700 <memmove>
1a005f34:	9b01      	ldr	r3, [sp, #4]
1a005f36:	68a1      	ldr	r1, [r4, #8]
1a005f38:	6822      	ldr	r2, [r4, #0]
1a005f3a:	1ac9      	subs	r1, r1, r3
1a005f3c:	441a      	add	r2, r3
1a005f3e:	60a1      	str	r1, [r4, #8]
1a005f40:	6022      	str	r2, [r4, #0]
1a005f42:	461d      	mov	r5, r3
1a005f44:	e77b      	b.n	1a005e3e <__sfvwrite_r+0x1be>
1a005f46:	4650      	mov	r0, sl
1a005f48:	f000 ff58 	bl	1a006dfc <_realloc_r>
1a005f4c:	4603      	mov	r3, r0
1a005f4e:	2800      	cmp	r0, #0
1a005f50:	f47f af23 	bne.w	1a005d9a <__sfvwrite_r+0x11a>
1a005f54:	6921      	ldr	r1, [r4, #16]
1a005f56:	4650      	mov	r0, sl
1a005f58:	f7ff fd9c 	bl	1a005a94 <_free_r>
1a005f5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005f60:	220c      	movs	r2, #12
1a005f62:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a005f66:	f8ca 2000 	str.w	r2, [sl]
1a005f6a:	e787      	b.n	1a005e7c <__sfvwrite_r+0x1fc>
1a005f6c:	230c      	movs	r3, #12
1a005f6e:	f8ca 3000 	str.w	r3, [sl]
1a005f72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005f76:	e781      	b.n	1a005e7c <__sfvwrite_r+0x1fc>
1a005f78:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a005f7c:	e76c      	b.n	1a005e58 <__sfvwrite_r+0x1d8>
1a005f7e:	bf00      	nop
1a005f80:	7ffffffe 	.word	0x7ffffffe
1a005f84:	7ffffc00 	.word	0x7ffffc00

1a005f88 <_fwalk_reent>:
1a005f88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a005f8c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
1a005f90:	d01f      	beq.n	1a005fd2 <_fwalk_reent+0x4a>
1a005f92:	4688      	mov	r8, r1
1a005f94:	4606      	mov	r6, r0
1a005f96:	f04f 0900 	mov.w	r9, #0
1a005f9a:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
1a005f9e:	3d01      	subs	r5, #1
1a005fa0:	d411      	bmi.n	1a005fc6 <_fwalk_reent+0x3e>
1a005fa2:	89a3      	ldrh	r3, [r4, #12]
1a005fa4:	2b01      	cmp	r3, #1
1a005fa6:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
1a005faa:	d908      	bls.n	1a005fbe <_fwalk_reent+0x36>
1a005fac:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
1a005fb0:	3301      	adds	r3, #1
1a005fb2:	4621      	mov	r1, r4
1a005fb4:	4630      	mov	r0, r6
1a005fb6:	d002      	beq.n	1a005fbe <_fwalk_reent+0x36>
1a005fb8:	47c0      	blx	r8
1a005fba:	ea49 0900 	orr.w	r9, r9, r0
1a005fbe:	1c6b      	adds	r3, r5, #1
1a005fc0:	f104 0468 	add.w	r4, r4, #104	; 0x68
1a005fc4:	d1ed      	bne.n	1a005fa2 <_fwalk_reent+0x1a>
1a005fc6:	683f      	ldr	r7, [r7, #0]
1a005fc8:	2f00      	cmp	r7, #0
1a005fca:	d1e6      	bne.n	1a005f9a <_fwalk_reent+0x12>
1a005fcc:	4648      	mov	r0, r9
1a005fce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a005fd2:	46b9      	mov	r9, r7
1a005fd4:	4648      	mov	r0, r9
1a005fd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a005fda:	bf00      	nop

1a005fdc <_localeconv_r>:
1a005fdc:	4800      	ldr	r0, [pc, #0]	; (1a005fe0 <_localeconv_r+0x4>)
1a005fde:	4770      	bx	lr
1a005fe0:	10000978 	.word	0x10000978

1a005fe4 <__retarget_lock_init_recursive>:
1a005fe4:	4770      	bx	lr
1a005fe6:	bf00      	nop

1a005fe8 <__retarget_lock_close_recursive>:
1a005fe8:	4770      	bx	lr
1a005fea:	bf00      	nop

1a005fec <__retarget_lock_acquire_recursive>:
1a005fec:	4770      	bx	lr
1a005fee:	bf00      	nop

1a005ff0 <__retarget_lock_release_recursive>:
1a005ff0:	4770      	bx	lr
1a005ff2:	bf00      	nop

1a005ff4 <__swhatbuf_r>:
1a005ff4:	b570      	push	{r4, r5, r6, lr}
1a005ff6:	460c      	mov	r4, r1
1a005ff8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a005ffc:	2900      	cmp	r1, #0
1a005ffe:	b096      	sub	sp, #88	; 0x58
1a006000:	4615      	mov	r5, r2
1a006002:	461e      	mov	r6, r3
1a006004:	db14      	blt.n	1a006030 <__swhatbuf_r+0x3c>
1a006006:	466a      	mov	r2, sp
1a006008:	f7fa fbad 	bl	1a000766 <_fstat_r>
1a00600c:	2800      	cmp	r0, #0
1a00600e:	db0f      	blt.n	1a006030 <__swhatbuf_r+0x3c>
1a006010:	9a01      	ldr	r2, [sp, #4]
1a006012:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
1a006016:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
1a00601a:	fab2 f282 	clz	r2, r2
1a00601e:	0952      	lsrs	r2, r2, #5
1a006020:	f44f 6380 	mov.w	r3, #1024	; 0x400
1a006024:	f44f 6000 	mov.w	r0, #2048	; 0x800
1a006028:	6032      	str	r2, [r6, #0]
1a00602a:	602b      	str	r3, [r5, #0]
1a00602c:	b016      	add	sp, #88	; 0x58
1a00602e:	bd70      	pop	{r4, r5, r6, pc}
1a006030:	89a2      	ldrh	r2, [r4, #12]
1a006032:	2300      	movs	r3, #0
1a006034:	f012 0080 	ands.w	r0, r2, #128	; 0x80
1a006038:	6033      	str	r3, [r6, #0]
1a00603a:	d004      	beq.n	1a006046 <__swhatbuf_r+0x52>
1a00603c:	2240      	movs	r2, #64	; 0x40
1a00603e:	4618      	mov	r0, r3
1a006040:	602a      	str	r2, [r5, #0]
1a006042:	b016      	add	sp, #88	; 0x58
1a006044:	bd70      	pop	{r4, r5, r6, pc}
1a006046:	f44f 6380 	mov.w	r3, #1024	; 0x400
1a00604a:	602b      	str	r3, [r5, #0]
1a00604c:	b016      	add	sp, #88	; 0x58
1a00604e:	bd70      	pop	{r4, r5, r6, pc}

1a006050 <__smakebuf_r>:
1a006050:	898a      	ldrh	r2, [r1, #12]
1a006052:	0792      	lsls	r2, r2, #30
1a006054:	460b      	mov	r3, r1
1a006056:	d506      	bpl.n	1a006066 <__smakebuf_r+0x16>
1a006058:	f101 0243 	add.w	r2, r1, #67	; 0x43
1a00605c:	2101      	movs	r1, #1
1a00605e:	601a      	str	r2, [r3, #0]
1a006060:	e9c3 2104 	strd	r2, r1, [r3, #16]
1a006064:	4770      	bx	lr
1a006066:	b570      	push	{r4, r5, r6, lr}
1a006068:	b082      	sub	sp, #8
1a00606a:	ab01      	add	r3, sp, #4
1a00606c:	466a      	mov	r2, sp
1a00606e:	460c      	mov	r4, r1
1a006070:	4606      	mov	r6, r0
1a006072:	f7ff ffbf 	bl	1a005ff4 <__swhatbuf_r>
1a006076:	9900      	ldr	r1, [sp, #0]
1a006078:	4605      	mov	r5, r0
1a00607a:	4630      	mov	r0, r6
1a00607c:	f000 f832 	bl	1a0060e4 <_malloc_r>
1a006080:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006084:	b170      	cbz	r0, 1a0060a4 <__smakebuf_r+0x54>
1a006086:	4916      	ldr	r1, [pc, #88]	; (1a0060e0 <__smakebuf_r+0x90>)
1a006088:	63f1      	str	r1, [r6, #60]	; 0x3c
1a00608a:	9a01      	ldr	r2, [sp, #4]
1a00608c:	9900      	ldr	r1, [sp, #0]
1a00608e:	6020      	str	r0, [r4, #0]
1a006090:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a006094:	81a3      	strh	r3, [r4, #12]
1a006096:	e9c4 0104 	strd	r0, r1, [r4, #16]
1a00609a:	b98a      	cbnz	r2, 1a0060c0 <__smakebuf_r+0x70>
1a00609c:	432b      	orrs	r3, r5
1a00609e:	81a3      	strh	r3, [r4, #12]
1a0060a0:	b002      	add	sp, #8
1a0060a2:	bd70      	pop	{r4, r5, r6, pc}
1a0060a4:	059a      	lsls	r2, r3, #22
1a0060a6:	d4fb      	bmi.n	1a0060a0 <__smakebuf_r+0x50>
1a0060a8:	f023 0303 	bic.w	r3, r3, #3
1a0060ac:	f104 0243 	add.w	r2, r4, #67	; 0x43
1a0060b0:	f043 0302 	orr.w	r3, r3, #2
1a0060b4:	2101      	movs	r1, #1
1a0060b6:	81a3      	strh	r3, [r4, #12]
1a0060b8:	6022      	str	r2, [r4, #0]
1a0060ba:	e9c4 2104 	strd	r2, r1, [r4, #16]
1a0060be:	e7ef      	b.n	1a0060a0 <__smakebuf_r+0x50>
1a0060c0:	4630      	mov	r0, r6
1a0060c2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1a0060c6:	f7fa fb53 	bl	1a000770 <_isatty_r>
1a0060ca:	b910      	cbnz	r0, 1a0060d2 <__smakebuf_r+0x82>
1a0060cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0060d0:	e7e4      	b.n	1a00609c <__smakebuf_r+0x4c>
1a0060d2:	89a3      	ldrh	r3, [r4, #12]
1a0060d4:	f023 0303 	bic.w	r3, r3, #3
1a0060d8:	f043 0301 	orr.w	r3, r3, #1
1a0060dc:	b21b      	sxth	r3, r3
1a0060de:	e7dd      	b.n	1a00609c <__smakebuf_r+0x4c>
1a0060e0:	1a00597d 	.word	0x1a00597d

1a0060e4 <_malloc_r>:
1a0060e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0060e8:	f101 050b 	add.w	r5, r1, #11
1a0060ec:	2d16      	cmp	r5, #22
1a0060ee:	b083      	sub	sp, #12
1a0060f0:	4606      	mov	r6, r0
1a0060f2:	d823      	bhi.n	1a00613c <_malloc_r+0x58>
1a0060f4:	2910      	cmp	r1, #16
1a0060f6:	f200 80b9 	bhi.w	1a00626c <_malloc_r+0x188>
1a0060fa:	f000 fb69 	bl	1a0067d0 <__malloc_lock>
1a0060fe:	2510      	movs	r5, #16
1a006100:	2318      	movs	r3, #24
1a006102:	2002      	movs	r0, #2
1a006104:	4fba      	ldr	r7, [pc, #744]	; (1a0063f0 <_malloc_r+0x30c>)
1a006106:	443b      	add	r3, r7
1a006108:	f1a3 0208 	sub.w	r2, r3, #8
1a00610c:	685c      	ldr	r4, [r3, #4]
1a00610e:	4294      	cmp	r4, r2
1a006110:	f000 80b9 	beq.w	1a006286 <_malloc_r+0x1a2>
1a006114:	6863      	ldr	r3, [r4, #4]
1a006116:	f023 0303 	bic.w	r3, r3, #3
1a00611a:	4423      	add	r3, r4
1a00611c:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
1a006120:	685a      	ldr	r2, [r3, #4]
1a006122:	60e9      	str	r1, [r5, #12]
1a006124:	f042 0201 	orr.w	r2, r2, #1
1a006128:	4630      	mov	r0, r6
1a00612a:	608d      	str	r5, [r1, #8]
1a00612c:	605a      	str	r2, [r3, #4]
1a00612e:	f000 fb55 	bl	1a0067dc <__malloc_unlock>
1a006132:	3408      	adds	r4, #8
1a006134:	4620      	mov	r0, r4
1a006136:	b003      	add	sp, #12
1a006138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00613c:	f035 0507 	bics.w	r5, r5, #7
1a006140:	f100 8094 	bmi.w	1a00626c <_malloc_r+0x188>
1a006144:	42a9      	cmp	r1, r5
1a006146:	f200 8091 	bhi.w	1a00626c <_malloc_r+0x188>
1a00614a:	f000 fb41 	bl	1a0067d0 <__malloc_lock>
1a00614e:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
1a006152:	f0c0 81a2 	bcc.w	1a00649a <_malloc_r+0x3b6>
1a006156:	0a6b      	lsrs	r3, r5, #9
1a006158:	f000 808f 	beq.w	1a00627a <_malloc_r+0x196>
1a00615c:	2b04      	cmp	r3, #4
1a00615e:	f200 8178 	bhi.w	1a006452 <_malloc_r+0x36e>
1a006162:	09ab      	lsrs	r3, r5, #6
1a006164:	f103 0039 	add.w	r0, r3, #57	; 0x39
1a006168:	f103 0c38 	add.w	ip, r3, #56	; 0x38
1a00616c:	00c3      	lsls	r3, r0, #3
1a00616e:	4fa0      	ldr	r7, [pc, #640]	; (1a0063f0 <_malloc_r+0x30c>)
1a006170:	443b      	add	r3, r7
1a006172:	f1a3 0108 	sub.w	r1, r3, #8
1a006176:	685c      	ldr	r4, [r3, #4]
1a006178:	42a1      	cmp	r1, r4
1a00617a:	d106      	bne.n	1a00618a <_malloc_r+0xa6>
1a00617c:	e00c      	b.n	1a006198 <_malloc_r+0xb4>
1a00617e:	2a00      	cmp	r2, #0
1a006180:	f280 8127 	bge.w	1a0063d2 <_malloc_r+0x2ee>
1a006184:	68e4      	ldr	r4, [r4, #12]
1a006186:	42a1      	cmp	r1, r4
1a006188:	d006      	beq.n	1a006198 <_malloc_r+0xb4>
1a00618a:	6863      	ldr	r3, [r4, #4]
1a00618c:	f023 0303 	bic.w	r3, r3, #3
1a006190:	1b5a      	subs	r2, r3, r5
1a006192:	2a0f      	cmp	r2, #15
1a006194:	ddf3      	ble.n	1a00617e <_malloc_r+0x9a>
1a006196:	4660      	mov	r0, ip
1a006198:	693c      	ldr	r4, [r7, #16]
1a00619a:	f8df c268 	ldr.w	ip, [pc, #616]	; 1a006404 <_malloc_r+0x320>
1a00619e:	4564      	cmp	r4, ip
1a0061a0:	d07c      	beq.n	1a00629c <_malloc_r+0x1b8>
1a0061a2:	6863      	ldr	r3, [r4, #4]
1a0061a4:	f023 0303 	bic.w	r3, r3, #3
1a0061a8:	1b5a      	subs	r2, r3, r5
1a0061aa:	2a0f      	cmp	r2, #15
1a0061ac:	f300 8183 	bgt.w	1a0064b6 <_malloc_r+0x3d2>
1a0061b0:	2a00      	cmp	r2, #0
1a0061b2:	e9c7 cc04 	strd	ip, ip, [r7, #16]
1a0061b6:	f280 8174 	bge.w	1a0064a2 <_malloc_r+0x3be>
1a0061ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a0061be:	f080 8125 	bcs.w	1a00640c <_malloc_r+0x328>
1a0061c2:	08db      	lsrs	r3, r3, #3
1a0061c4:	1c59      	adds	r1, r3, #1
1a0061c6:	687a      	ldr	r2, [r7, #4]
1a0061c8:	f857 8031 	ldr.w	r8, [r7, r1, lsl #3]
1a0061cc:	f8c4 8008 	str.w	r8, [r4, #8]
1a0061d0:	f04f 0e01 	mov.w	lr, #1
1a0061d4:	109b      	asrs	r3, r3, #2
1a0061d6:	fa0e f303 	lsl.w	r3, lr, r3
1a0061da:	eb07 0ec1 	add.w	lr, r7, r1, lsl #3
1a0061de:	4313      	orrs	r3, r2
1a0061e0:	f1ae 0208 	sub.w	r2, lr, #8
1a0061e4:	60e2      	str	r2, [r4, #12]
1a0061e6:	607b      	str	r3, [r7, #4]
1a0061e8:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1a0061ec:	f8c8 400c 	str.w	r4, [r8, #12]
1a0061f0:	1082      	asrs	r2, r0, #2
1a0061f2:	2401      	movs	r4, #1
1a0061f4:	4094      	lsls	r4, r2
1a0061f6:	429c      	cmp	r4, r3
1a0061f8:	d856      	bhi.n	1a0062a8 <_malloc_r+0x1c4>
1a0061fa:	421c      	tst	r4, r3
1a0061fc:	d106      	bne.n	1a00620c <_malloc_r+0x128>
1a0061fe:	f020 0003 	bic.w	r0, r0, #3
1a006202:	0064      	lsls	r4, r4, #1
1a006204:	421c      	tst	r4, r3
1a006206:	f100 0004 	add.w	r0, r0, #4
1a00620a:	d0fa      	beq.n	1a006202 <_malloc_r+0x11e>
1a00620c:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
1a006210:	46ce      	mov	lr, r9
1a006212:	4680      	mov	r8, r0
1a006214:	f8de 300c 	ldr.w	r3, [lr, #12]
1a006218:	459e      	cmp	lr, r3
1a00621a:	d107      	bne.n	1a00622c <_malloc_r+0x148>
1a00621c:	e125      	b.n	1a00646a <_malloc_r+0x386>
1a00621e:	2a00      	cmp	r2, #0
1a006220:	f280 812c 	bge.w	1a00647c <_malloc_r+0x398>
1a006224:	68db      	ldr	r3, [r3, #12]
1a006226:	459e      	cmp	lr, r3
1a006228:	f000 811f 	beq.w	1a00646a <_malloc_r+0x386>
1a00622c:	6859      	ldr	r1, [r3, #4]
1a00622e:	f021 0103 	bic.w	r1, r1, #3
1a006232:	1b4a      	subs	r2, r1, r5
1a006234:	2a0f      	cmp	r2, #15
1a006236:	ddf2      	ble.n	1a00621e <_malloc_r+0x13a>
1a006238:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
1a00623c:	195c      	adds	r4, r3, r5
1a00623e:	f045 0501 	orr.w	r5, r5, #1
1a006242:	605d      	str	r5, [r3, #4]
1a006244:	f042 0501 	orr.w	r5, r2, #1
1a006248:	f8c8 e00c 	str.w	lr, [r8, #12]
1a00624c:	4630      	mov	r0, r6
1a00624e:	f8ce 8008 	str.w	r8, [lr, #8]
1a006252:	e9c7 4404 	strd	r4, r4, [r7, #16]
1a006256:	e9c4 cc02 	strd	ip, ip, [r4, #8]
1a00625a:	6065      	str	r5, [r4, #4]
1a00625c:	505a      	str	r2, [r3, r1]
1a00625e:	9300      	str	r3, [sp, #0]
1a006260:	f000 fabc 	bl	1a0067dc <__malloc_unlock>
1a006264:	9b00      	ldr	r3, [sp, #0]
1a006266:	f103 0408 	add.w	r4, r3, #8
1a00626a:	e002      	b.n	1a006272 <_malloc_r+0x18e>
1a00626c:	230c      	movs	r3, #12
1a00626e:	6033      	str	r3, [r6, #0]
1a006270:	2400      	movs	r4, #0
1a006272:	4620      	mov	r0, r4
1a006274:	b003      	add	sp, #12
1a006276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00627a:	f44f 7300 	mov.w	r3, #512	; 0x200
1a00627e:	2040      	movs	r0, #64	; 0x40
1a006280:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
1a006284:	e773      	b.n	1a00616e <_malloc_r+0x8a>
1a006286:	68dc      	ldr	r4, [r3, #12]
1a006288:	42a3      	cmp	r3, r4
1a00628a:	bf08      	it	eq
1a00628c:	3002      	addeq	r0, #2
1a00628e:	f47f af41 	bne.w	1a006114 <_malloc_r+0x30>
1a006292:	693c      	ldr	r4, [r7, #16]
1a006294:	f8df c16c 	ldr.w	ip, [pc, #364]	; 1a006404 <_malloc_r+0x320>
1a006298:	4564      	cmp	r4, ip
1a00629a:	d182      	bne.n	1a0061a2 <_malloc_r+0xbe>
1a00629c:	687b      	ldr	r3, [r7, #4]
1a00629e:	1082      	asrs	r2, r0, #2
1a0062a0:	2401      	movs	r4, #1
1a0062a2:	4094      	lsls	r4, r2
1a0062a4:	429c      	cmp	r4, r3
1a0062a6:	d9a8      	bls.n	1a0061fa <_malloc_r+0x116>
1a0062a8:	68bc      	ldr	r4, [r7, #8]
1a0062aa:	6863      	ldr	r3, [r4, #4]
1a0062ac:	f023 0803 	bic.w	r8, r3, #3
1a0062b0:	45a8      	cmp	r8, r5
1a0062b2:	d303      	bcc.n	1a0062bc <_malloc_r+0x1d8>
1a0062b4:	eba8 0305 	sub.w	r3, r8, r5
1a0062b8:	2b0f      	cmp	r3, #15
1a0062ba:	dc7a      	bgt.n	1a0063b2 <_malloc_r+0x2ce>
1a0062bc:	f8df 9148 	ldr.w	r9, [pc, #328]	; 1a006408 <_malloc_r+0x324>
1a0062c0:	4b4c      	ldr	r3, [pc, #304]	; (1a0063f4 <_malloc_r+0x310>)
1a0062c2:	f8d9 2000 	ldr.w	r2, [r9]
1a0062c6:	681b      	ldr	r3, [r3, #0]
1a0062c8:	3201      	adds	r2, #1
1a0062ca:	442b      	add	r3, r5
1a0062cc:	eb04 0a08 	add.w	sl, r4, r8
1a0062d0:	f000 813c 	beq.w	1a00654c <_malloc_r+0x468>
1a0062d4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a0062d8:	330f      	adds	r3, #15
1a0062da:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
1a0062de:	f02b 0b0f 	bic.w	fp, fp, #15
1a0062e2:	4659      	mov	r1, fp
1a0062e4:	4630      	mov	r0, r6
1a0062e6:	f7fa fa8d 	bl	1a000804 <_sbrk_r>
1a0062ea:	1c41      	adds	r1, r0, #1
1a0062ec:	4602      	mov	r2, r0
1a0062ee:	f000 80fc 	beq.w	1a0064ea <_malloc_r+0x406>
1a0062f2:	4582      	cmp	sl, r0
1a0062f4:	f200 80f7 	bhi.w	1a0064e6 <_malloc_r+0x402>
1a0062f8:	4b3f      	ldr	r3, [pc, #252]	; (1a0063f8 <_malloc_r+0x314>)
1a0062fa:	6818      	ldr	r0, [r3, #0]
1a0062fc:	4458      	add	r0, fp
1a0062fe:	6018      	str	r0, [r3, #0]
1a006300:	4601      	mov	r1, r0
1a006302:	f000 8157 	beq.w	1a0065b4 <_malloc_r+0x4d0>
1a006306:	f8d9 0000 	ldr.w	r0, [r9]
1a00630a:	9301      	str	r3, [sp, #4]
1a00630c:	3001      	adds	r0, #1
1a00630e:	bf1b      	ittet	ne
1a006310:	eba2 0a0a 	subne.w	sl, r2, sl
1a006314:	4451      	addne	r1, sl
1a006316:	f8c9 2000 	streq.w	r2, [r9]
1a00631a:	6019      	strne	r1, [r3, #0]
1a00631c:	f012 0a07 	ands.w	sl, r2, #7
1a006320:	f000 8120 	beq.w	1a006564 <_malloc_r+0x480>
1a006324:	f1ca 0108 	rsb	r1, sl, #8
1a006328:	440a      	add	r2, r1
1a00632a:	f5ca 5180 	rsb	r1, sl, #4096	; 0x1000
1a00632e:	4493      	add	fp, r2
1a006330:	3108      	adds	r1, #8
1a006332:	eba1 010b 	sub.w	r1, r1, fp
1a006336:	f3c1 090b 	ubfx	r9, r1, #0, #12
1a00633a:	4649      	mov	r1, r9
1a00633c:	4630      	mov	r0, r6
1a00633e:	9200      	str	r2, [sp, #0]
1a006340:	f7fa fa60 	bl	1a000804 <_sbrk_r>
1a006344:	1c42      	adds	r2, r0, #1
1a006346:	e9dd 2300 	ldrd	r2, r3, [sp]
1a00634a:	f000 8158 	beq.w	1a0065fe <_malloc_r+0x51a>
1a00634e:	1a80      	subs	r0, r0, r2
1a006350:	eb00 0b09 	add.w	fp, r0, r9
1a006354:	6818      	ldr	r0, [r3, #0]
1a006356:	60ba      	str	r2, [r7, #8]
1a006358:	f04b 0101 	orr.w	r1, fp, #1
1a00635c:	4448      	add	r0, r9
1a00635e:	42bc      	cmp	r4, r7
1a006360:	6051      	str	r1, [r2, #4]
1a006362:	6018      	str	r0, [r3, #0]
1a006364:	f000 8132 	beq.w	1a0065cc <_malloc_r+0x4e8>
1a006368:	f1b8 0f0f 	cmp.w	r8, #15
1a00636c:	f240 8130 	bls.w	1a0065d0 <_malloc_r+0x4ec>
1a006370:	6861      	ldr	r1, [r4, #4]
1a006372:	f1a8 0c0c 	sub.w	ip, r8, #12
1a006376:	f02c 0c07 	bic.w	ip, ip, #7
1a00637a:	f001 0101 	and.w	r1, r1, #1
1a00637e:	eb04 0e0c 	add.w	lr, r4, ip
1a006382:	ea41 010c 	orr.w	r1, r1, ip
1a006386:	f04f 0805 	mov.w	r8, #5
1a00638a:	f1bc 0f0f 	cmp.w	ip, #15
1a00638e:	6061      	str	r1, [r4, #4]
1a006390:	e9ce 8801 	strd	r8, r8, [lr, #4]
1a006394:	f200 813b 	bhi.w	1a00660e <_malloc_r+0x52a>
1a006398:	6851      	ldr	r1, [r2, #4]
1a00639a:	4614      	mov	r4, r2
1a00639c:	4b17      	ldr	r3, [pc, #92]	; (1a0063fc <_malloc_r+0x318>)
1a00639e:	681a      	ldr	r2, [r3, #0]
1a0063a0:	4282      	cmp	r2, r0
1a0063a2:	bf38      	it	cc
1a0063a4:	6018      	strcc	r0, [r3, #0]
1a0063a6:	4b16      	ldr	r3, [pc, #88]	; (1a006400 <_malloc_r+0x31c>)
1a0063a8:	681a      	ldr	r2, [r3, #0]
1a0063aa:	4282      	cmp	r2, r0
1a0063ac:	bf38      	it	cc
1a0063ae:	6018      	strcc	r0, [r3, #0]
1a0063b0:	e09d      	b.n	1a0064ee <_malloc_r+0x40a>
1a0063b2:	1962      	adds	r2, r4, r5
1a0063b4:	f043 0301 	orr.w	r3, r3, #1
1a0063b8:	f045 0501 	orr.w	r5, r5, #1
1a0063bc:	6065      	str	r5, [r4, #4]
1a0063be:	4630      	mov	r0, r6
1a0063c0:	60ba      	str	r2, [r7, #8]
1a0063c2:	6053      	str	r3, [r2, #4]
1a0063c4:	f000 fa0a 	bl	1a0067dc <__malloc_unlock>
1a0063c8:	3408      	adds	r4, #8
1a0063ca:	4620      	mov	r0, r4
1a0063cc:	b003      	add	sp, #12
1a0063ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0063d2:	4423      	add	r3, r4
1a0063d4:	68e1      	ldr	r1, [r4, #12]
1a0063d6:	685a      	ldr	r2, [r3, #4]
1a0063d8:	68a5      	ldr	r5, [r4, #8]
1a0063da:	f042 0201 	orr.w	r2, r2, #1
1a0063de:	60e9      	str	r1, [r5, #12]
1a0063e0:	4630      	mov	r0, r6
1a0063e2:	608d      	str	r5, [r1, #8]
1a0063e4:	605a      	str	r2, [r3, #4]
1a0063e6:	f000 f9f9 	bl	1a0067dc <__malloc_unlock>
1a0063ea:	3408      	adds	r4, #8
1a0063ec:	e741      	b.n	1a006272 <_malloc_r+0x18e>
1a0063ee:	bf00      	nop
1a0063f0:	10000478 	.word	0x10000478
1a0063f4:	10000aa0 	.word	0x10000aa0
1a0063f8:	10000a70 	.word	0x10000a70
1a0063fc:	10000a98 	.word	0x10000a98
1a006400:	10000a9c 	.word	0x10000a9c
1a006404:	10000480 	.word	0x10000480
1a006408:	10000880 	.word	0x10000880
1a00640c:	0a5a      	lsrs	r2, r3, #9
1a00640e:	2a04      	cmp	r2, #4
1a006410:	d963      	bls.n	1a0064da <_malloc_r+0x3f6>
1a006412:	2a14      	cmp	r2, #20
1a006414:	f200 80b7 	bhi.w	1a006586 <_malloc_r+0x4a2>
1a006418:	f102 015c 	add.w	r1, r2, #92	; 0x5c
1a00641c:	00c9      	lsls	r1, r1, #3
1a00641e:	325b      	adds	r2, #91	; 0x5b
1a006420:	eb07 0e01 	add.w	lr, r7, r1
1a006424:	5879      	ldr	r1, [r7, r1]
1a006426:	f1ae 0e08 	sub.w	lr, lr, #8
1a00642a:	458e      	cmp	lr, r1
1a00642c:	f000 8091 	beq.w	1a006552 <_malloc_r+0x46e>
1a006430:	684a      	ldr	r2, [r1, #4]
1a006432:	f022 0203 	bic.w	r2, r2, #3
1a006436:	429a      	cmp	r2, r3
1a006438:	d902      	bls.n	1a006440 <_malloc_r+0x35c>
1a00643a:	6889      	ldr	r1, [r1, #8]
1a00643c:	458e      	cmp	lr, r1
1a00643e:	d1f7      	bne.n	1a006430 <_malloc_r+0x34c>
1a006440:	f8d1 e00c 	ldr.w	lr, [r1, #12]
1a006444:	687b      	ldr	r3, [r7, #4]
1a006446:	e9c4 1e02 	strd	r1, lr, [r4, #8]
1a00644a:	f8ce 4008 	str.w	r4, [lr, #8]
1a00644e:	60cc      	str	r4, [r1, #12]
1a006450:	e6ce      	b.n	1a0061f0 <_malloc_r+0x10c>
1a006452:	2b14      	cmp	r3, #20
1a006454:	d959      	bls.n	1a00650a <_malloc_r+0x426>
1a006456:	2b54      	cmp	r3, #84	; 0x54
1a006458:	f200 809d 	bhi.w	1a006596 <_malloc_r+0x4b2>
1a00645c:	0b2b      	lsrs	r3, r5, #12
1a00645e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
1a006462:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
1a006466:	00c3      	lsls	r3, r0, #3
1a006468:	e681      	b.n	1a00616e <_malloc_r+0x8a>
1a00646a:	f108 0801 	add.w	r8, r8, #1
1a00646e:	f018 0f03 	tst.w	r8, #3
1a006472:	f10e 0e08 	add.w	lr, lr, #8
1a006476:	f47f aecd 	bne.w	1a006214 <_malloc_r+0x130>
1a00647a:	e051      	b.n	1a006520 <_malloc_r+0x43c>
1a00647c:	4419      	add	r1, r3
1a00647e:	461c      	mov	r4, r3
1a006480:	684a      	ldr	r2, [r1, #4]
1a006482:	68db      	ldr	r3, [r3, #12]
1a006484:	f854 5f08 	ldr.w	r5, [r4, #8]!
1a006488:	f042 0201 	orr.w	r2, r2, #1
1a00648c:	604a      	str	r2, [r1, #4]
1a00648e:	4630      	mov	r0, r6
1a006490:	60eb      	str	r3, [r5, #12]
1a006492:	609d      	str	r5, [r3, #8]
1a006494:	f000 f9a2 	bl	1a0067dc <__malloc_unlock>
1a006498:	e6eb      	b.n	1a006272 <_malloc_r+0x18e>
1a00649a:	08e8      	lsrs	r0, r5, #3
1a00649c:	f105 0308 	add.w	r3, r5, #8
1a0064a0:	e630      	b.n	1a006104 <_malloc_r+0x20>
1a0064a2:	4423      	add	r3, r4
1a0064a4:	4630      	mov	r0, r6
1a0064a6:	685a      	ldr	r2, [r3, #4]
1a0064a8:	f042 0201 	orr.w	r2, r2, #1
1a0064ac:	605a      	str	r2, [r3, #4]
1a0064ae:	3408      	adds	r4, #8
1a0064b0:	f000 f994 	bl	1a0067dc <__malloc_unlock>
1a0064b4:	e6dd      	b.n	1a006272 <_malloc_r+0x18e>
1a0064b6:	1961      	adds	r1, r4, r5
1a0064b8:	f045 0e01 	orr.w	lr, r5, #1
1a0064bc:	f042 0501 	orr.w	r5, r2, #1
1a0064c0:	f8c4 e004 	str.w	lr, [r4, #4]
1a0064c4:	4630      	mov	r0, r6
1a0064c6:	e9c7 1104 	strd	r1, r1, [r7, #16]
1a0064ca:	e9c1 cc02 	strd	ip, ip, [r1, #8]
1a0064ce:	604d      	str	r5, [r1, #4]
1a0064d0:	50e2      	str	r2, [r4, r3]
1a0064d2:	f000 f983 	bl	1a0067dc <__malloc_unlock>
1a0064d6:	3408      	adds	r4, #8
1a0064d8:	e6cb      	b.n	1a006272 <_malloc_r+0x18e>
1a0064da:	099a      	lsrs	r2, r3, #6
1a0064dc:	f102 0139 	add.w	r1, r2, #57	; 0x39
1a0064e0:	00c9      	lsls	r1, r1, #3
1a0064e2:	3238      	adds	r2, #56	; 0x38
1a0064e4:	e79c      	b.n	1a006420 <_malloc_r+0x33c>
1a0064e6:	42bc      	cmp	r4, r7
1a0064e8:	d05f      	beq.n	1a0065aa <_malloc_r+0x4c6>
1a0064ea:	68bc      	ldr	r4, [r7, #8]
1a0064ec:	6861      	ldr	r1, [r4, #4]
1a0064ee:	f021 0b03 	bic.w	fp, r1, #3
1a0064f2:	45ab      	cmp	fp, r5
1a0064f4:	ebab 0305 	sub.w	r3, fp, r5
1a0064f8:	d302      	bcc.n	1a006500 <_malloc_r+0x41c>
1a0064fa:	2b0f      	cmp	r3, #15
1a0064fc:	f73f af59 	bgt.w	1a0063b2 <_malloc_r+0x2ce>
1a006500:	4630      	mov	r0, r6
1a006502:	f000 f96b 	bl	1a0067dc <__malloc_unlock>
1a006506:	2400      	movs	r4, #0
1a006508:	e6b3      	b.n	1a006272 <_malloc_r+0x18e>
1a00650a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
1a00650e:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
1a006512:	00c3      	lsls	r3, r0, #3
1a006514:	e62b      	b.n	1a00616e <_malloc_r+0x8a>
1a006516:	f859 3908 	ldr.w	r3, [r9], #-8
1a00651a:	454b      	cmp	r3, r9
1a00651c:	f040 8096 	bne.w	1a00664c <_malloc_r+0x568>
1a006520:	f010 0f03 	tst.w	r0, #3
1a006524:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
1a006528:	d1f5      	bne.n	1a006516 <_malloc_r+0x432>
1a00652a:	687b      	ldr	r3, [r7, #4]
1a00652c:	ea23 0304 	bic.w	r3, r3, r4
1a006530:	607b      	str	r3, [r7, #4]
1a006532:	0064      	lsls	r4, r4, #1
1a006534:	429c      	cmp	r4, r3
1a006536:	f63f aeb7 	bhi.w	1a0062a8 <_malloc_r+0x1c4>
1a00653a:	b91c      	cbnz	r4, 1a006544 <_malloc_r+0x460>
1a00653c:	e6b4      	b.n	1a0062a8 <_malloc_r+0x1c4>
1a00653e:	0064      	lsls	r4, r4, #1
1a006540:	f108 0804 	add.w	r8, r8, #4
1a006544:	421c      	tst	r4, r3
1a006546:	d0fa      	beq.n	1a00653e <_malloc_r+0x45a>
1a006548:	4640      	mov	r0, r8
1a00654a:	e65f      	b.n	1a00620c <_malloc_r+0x128>
1a00654c:	f103 0b10 	add.w	fp, r3, #16
1a006550:	e6c7      	b.n	1a0062e2 <_malloc_r+0x1fe>
1a006552:	687b      	ldr	r3, [r7, #4]
1a006554:	1092      	asrs	r2, r2, #2
1a006556:	f04f 0801 	mov.w	r8, #1
1a00655a:	fa08 f202 	lsl.w	r2, r8, r2
1a00655e:	4313      	orrs	r3, r2
1a006560:	607b      	str	r3, [r7, #4]
1a006562:	e770      	b.n	1a006446 <_malloc_r+0x362>
1a006564:	eb02 000b 	add.w	r0, r2, fp
1a006568:	4240      	negs	r0, r0
1a00656a:	f3c0 090b 	ubfx	r9, r0, #0, #12
1a00656e:	4649      	mov	r1, r9
1a006570:	4630      	mov	r0, r6
1a006572:	9200      	str	r2, [sp, #0]
1a006574:	f7fa f946 	bl	1a000804 <_sbrk_r>
1a006578:	1c43      	adds	r3, r0, #1
1a00657a:	e9dd 2300 	ldrd	r2, r3, [sp]
1a00657e:	f47f aee6 	bne.w	1a00634e <_malloc_r+0x26a>
1a006582:	46d1      	mov	r9, sl
1a006584:	e6e6      	b.n	1a006354 <_malloc_r+0x270>
1a006586:	2a54      	cmp	r2, #84	; 0x54
1a006588:	d825      	bhi.n	1a0065d6 <_malloc_r+0x4f2>
1a00658a:	0b1a      	lsrs	r2, r3, #12
1a00658c:	f102 016f 	add.w	r1, r2, #111	; 0x6f
1a006590:	00c9      	lsls	r1, r1, #3
1a006592:	326e      	adds	r2, #110	; 0x6e
1a006594:	e744      	b.n	1a006420 <_malloc_r+0x33c>
1a006596:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
1a00659a:	d825      	bhi.n	1a0065e8 <_malloc_r+0x504>
1a00659c:	0beb      	lsrs	r3, r5, #15
1a00659e:	f103 0078 	add.w	r0, r3, #120	; 0x78
1a0065a2:	f103 0c77 	add.w	ip, r3, #119	; 0x77
1a0065a6:	00c3      	lsls	r3, r0, #3
1a0065a8:	e5e1      	b.n	1a00616e <_malloc_r+0x8a>
1a0065aa:	4b29      	ldr	r3, [pc, #164]	; (1a006650 <_malloc_r+0x56c>)
1a0065ac:	6819      	ldr	r1, [r3, #0]
1a0065ae:	4459      	add	r1, fp
1a0065b0:	6019      	str	r1, [r3, #0]
1a0065b2:	e6a8      	b.n	1a006306 <_malloc_r+0x222>
1a0065b4:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
1a0065b8:	f1bc 0f00 	cmp.w	ip, #0
1a0065bc:	f47f aea3 	bne.w	1a006306 <_malloc_r+0x222>
1a0065c0:	44c3      	add	fp, r8
1a0065c2:	68bc      	ldr	r4, [r7, #8]
1a0065c4:	f04b 0101 	orr.w	r1, fp, #1
1a0065c8:	6061      	str	r1, [r4, #4]
1a0065ca:	e6e7      	b.n	1a00639c <_malloc_r+0x2b8>
1a0065cc:	4614      	mov	r4, r2
1a0065ce:	e6e5      	b.n	1a00639c <_malloc_r+0x2b8>
1a0065d0:	2301      	movs	r3, #1
1a0065d2:	6053      	str	r3, [r2, #4]
1a0065d4:	e794      	b.n	1a006500 <_malloc_r+0x41c>
1a0065d6:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a0065da:	d823      	bhi.n	1a006624 <_malloc_r+0x540>
1a0065dc:	0bda      	lsrs	r2, r3, #15
1a0065de:	f102 0178 	add.w	r1, r2, #120	; 0x78
1a0065e2:	00c9      	lsls	r1, r1, #3
1a0065e4:	3277      	adds	r2, #119	; 0x77
1a0065e6:	e71b      	b.n	1a006420 <_malloc_r+0x33c>
1a0065e8:	f240 5254 	movw	r2, #1364	; 0x554
1a0065ec:	4293      	cmp	r3, r2
1a0065ee:	d823      	bhi.n	1a006638 <_malloc_r+0x554>
1a0065f0:	0cab      	lsrs	r3, r5, #18
1a0065f2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
1a0065f6:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
1a0065fa:	00c3      	lsls	r3, r0, #3
1a0065fc:	e5b7      	b.n	1a00616e <_malloc_r+0x8a>
1a0065fe:	f1aa 0a08 	sub.w	sl, sl, #8
1a006602:	44d3      	add	fp, sl
1a006604:	ebab 0b02 	sub.w	fp, fp, r2
1a006608:	f04f 0900 	mov.w	r9, #0
1a00660c:	e6a2      	b.n	1a006354 <_malloc_r+0x270>
1a00660e:	f104 0108 	add.w	r1, r4, #8
1a006612:	4630      	mov	r0, r6
1a006614:	9300      	str	r3, [sp, #0]
1a006616:	f7ff fa3d 	bl	1a005a94 <_free_r>
1a00661a:	68bc      	ldr	r4, [r7, #8]
1a00661c:	9b00      	ldr	r3, [sp, #0]
1a00661e:	6861      	ldr	r1, [r4, #4]
1a006620:	6818      	ldr	r0, [r3, #0]
1a006622:	e6bb      	b.n	1a00639c <_malloc_r+0x2b8>
1a006624:	f240 5154 	movw	r1, #1364	; 0x554
1a006628:	428a      	cmp	r2, r1
1a00662a:	d80b      	bhi.n	1a006644 <_malloc_r+0x560>
1a00662c:	0c9a      	lsrs	r2, r3, #18
1a00662e:	f102 017d 	add.w	r1, r2, #125	; 0x7d
1a006632:	00c9      	lsls	r1, r1, #3
1a006634:	327c      	adds	r2, #124	; 0x7c
1a006636:	e6f3      	b.n	1a006420 <_malloc_r+0x33c>
1a006638:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
1a00663c:	207f      	movs	r0, #127	; 0x7f
1a00663e:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
1a006642:	e594      	b.n	1a00616e <_malloc_r+0x8a>
1a006644:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
1a006648:	227e      	movs	r2, #126	; 0x7e
1a00664a:	e6e9      	b.n	1a006420 <_malloc_r+0x33c>
1a00664c:	687b      	ldr	r3, [r7, #4]
1a00664e:	e770      	b.n	1a006532 <_malloc_r+0x44e>
1a006650:	10000a70 	.word	0x10000a70
1a006654:	ffffffff 	.word	0xffffffff
1a006658:	ffffffff 	.word	0xffffffff
1a00665c:	ffffffff 	.word	0xffffffff

1a006660 <memchr>:
1a006660:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a006664:	2a10      	cmp	r2, #16
1a006666:	db2b      	blt.n	1a0066c0 <memchr+0x60>
1a006668:	f010 0f07 	tst.w	r0, #7
1a00666c:	d008      	beq.n	1a006680 <memchr+0x20>
1a00666e:	f810 3b01 	ldrb.w	r3, [r0], #1
1a006672:	3a01      	subs	r2, #1
1a006674:	428b      	cmp	r3, r1
1a006676:	d02d      	beq.n	1a0066d4 <memchr+0x74>
1a006678:	f010 0f07 	tst.w	r0, #7
1a00667c:	b342      	cbz	r2, 1a0066d0 <memchr+0x70>
1a00667e:	d1f6      	bne.n	1a00666e <memchr+0xe>
1a006680:	b4f0      	push	{r4, r5, r6, r7}
1a006682:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
1a006686:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1a00668a:	f022 0407 	bic.w	r4, r2, #7
1a00668e:	f07f 0700 	mvns.w	r7, #0
1a006692:	2300      	movs	r3, #0
1a006694:	e8f0 5602 	ldrd	r5, r6, [r0], #8
1a006698:	3c08      	subs	r4, #8
1a00669a:	ea85 0501 	eor.w	r5, r5, r1
1a00669e:	ea86 0601 	eor.w	r6, r6, r1
1a0066a2:	fa85 f547 	uadd8	r5, r5, r7
1a0066a6:	faa3 f587 	sel	r5, r3, r7
1a0066aa:	fa86 f647 	uadd8	r6, r6, r7
1a0066ae:	faa5 f687 	sel	r6, r5, r7
1a0066b2:	b98e      	cbnz	r6, 1a0066d8 <memchr+0x78>
1a0066b4:	d1ee      	bne.n	1a006694 <memchr+0x34>
1a0066b6:	bcf0      	pop	{r4, r5, r6, r7}
1a0066b8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a0066bc:	f002 0207 	and.w	r2, r2, #7
1a0066c0:	b132      	cbz	r2, 1a0066d0 <memchr+0x70>
1a0066c2:	f810 3b01 	ldrb.w	r3, [r0], #1
1a0066c6:	3a01      	subs	r2, #1
1a0066c8:	ea83 0301 	eor.w	r3, r3, r1
1a0066cc:	b113      	cbz	r3, 1a0066d4 <memchr+0x74>
1a0066ce:	d1f8      	bne.n	1a0066c2 <memchr+0x62>
1a0066d0:	2000      	movs	r0, #0
1a0066d2:	4770      	bx	lr
1a0066d4:	3801      	subs	r0, #1
1a0066d6:	4770      	bx	lr
1a0066d8:	2d00      	cmp	r5, #0
1a0066da:	bf06      	itte	eq
1a0066dc:	4635      	moveq	r5, r6
1a0066de:	3803      	subeq	r0, #3
1a0066e0:	3807      	subne	r0, #7
1a0066e2:	f015 0f01 	tst.w	r5, #1
1a0066e6:	d107      	bne.n	1a0066f8 <memchr+0x98>
1a0066e8:	3001      	adds	r0, #1
1a0066ea:	f415 7f80 	tst.w	r5, #256	; 0x100
1a0066ee:	bf02      	ittt	eq
1a0066f0:	3001      	addeq	r0, #1
1a0066f2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
1a0066f6:	3001      	addeq	r0, #1
1a0066f8:	bcf0      	pop	{r4, r5, r6, r7}
1a0066fa:	3801      	subs	r0, #1
1a0066fc:	4770      	bx	lr
1a0066fe:	bf00      	nop

1a006700 <memmove>:
1a006700:	4288      	cmp	r0, r1
1a006702:	b4f0      	push	{r4, r5, r6, r7}
1a006704:	d90d      	bls.n	1a006722 <memmove+0x22>
1a006706:	188b      	adds	r3, r1, r2
1a006708:	4283      	cmp	r3, r0
1a00670a:	d90a      	bls.n	1a006722 <memmove+0x22>
1a00670c:	1884      	adds	r4, r0, r2
1a00670e:	b132      	cbz	r2, 1a00671e <memmove+0x1e>
1a006710:	4622      	mov	r2, r4
1a006712:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
1a006716:	f802 4d01 	strb.w	r4, [r2, #-1]!
1a00671a:	4299      	cmp	r1, r3
1a00671c:	d1f9      	bne.n	1a006712 <memmove+0x12>
1a00671e:	bcf0      	pop	{r4, r5, r6, r7}
1a006720:	4770      	bx	lr
1a006722:	2a0f      	cmp	r2, #15
1a006724:	d80e      	bhi.n	1a006744 <memmove+0x44>
1a006726:	4603      	mov	r3, r0
1a006728:	1e54      	subs	r4, r2, #1
1a00672a:	2a00      	cmp	r2, #0
1a00672c:	d0f7      	beq.n	1a00671e <memmove+0x1e>
1a00672e:	3401      	adds	r4, #1
1a006730:	440c      	add	r4, r1
1a006732:	3b01      	subs	r3, #1
1a006734:	f811 2b01 	ldrb.w	r2, [r1], #1
1a006738:	f803 2f01 	strb.w	r2, [r3, #1]!
1a00673c:	42a1      	cmp	r1, r4
1a00673e:	d1f9      	bne.n	1a006734 <memmove+0x34>
1a006740:	bcf0      	pop	{r4, r5, r6, r7}
1a006742:	4770      	bx	lr
1a006744:	ea40 0301 	orr.w	r3, r0, r1
1a006748:	079b      	lsls	r3, r3, #30
1a00674a:	d13b      	bne.n	1a0067c4 <memmove+0xc4>
1a00674c:	f1a2 0710 	sub.w	r7, r2, #16
1a006750:	093f      	lsrs	r7, r7, #4
1a006752:	f101 0620 	add.w	r6, r1, #32
1a006756:	eb06 1607 	add.w	r6, r6, r7, lsl #4
1a00675a:	f101 0310 	add.w	r3, r1, #16
1a00675e:	f100 0410 	add.w	r4, r0, #16
1a006762:	f853 5c10 	ldr.w	r5, [r3, #-16]
1a006766:	f844 5c10 	str.w	r5, [r4, #-16]
1a00676a:	f853 5c0c 	ldr.w	r5, [r3, #-12]
1a00676e:	f844 5c0c 	str.w	r5, [r4, #-12]
1a006772:	f853 5c08 	ldr.w	r5, [r3, #-8]
1a006776:	f844 5c08 	str.w	r5, [r4, #-8]
1a00677a:	f853 5c04 	ldr.w	r5, [r3, #-4]
1a00677e:	f844 5c04 	str.w	r5, [r4, #-4]
1a006782:	3310      	adds	r3, #16
1a006784:	42b3      	cmp	r3, r6
1a006786:	f104 0410 	add.w	r4, r4, #16
1a00678a:	d1ea      	bne.n	1a006762 <memmove+0x62>
1a00678c:	1c7b      	adds	r3, r7, #1
1a00678e:	011b      	lsls	r3, r3, #4
1a006790:	f012 0f0c 	tst.w	r2, #12
1a006794:	4419      	add	r1, r3
1a006796:	f002 050f 	and.w	r5, r2, #15
1a00679a:	4403      	add	r3, r0
1a00679c:	d015      	beq.n	1a0067ca <memmove+0xca>
1a00679e:	3d04      	subs	r5, #4
1a0067a0:	08ad      	lsrs	r5, r5, #2
1a0067a2:	eb03 0c85 	add.w	ip, r3, r5, lsl #2
1a0067a6:	1f1c      	subs	r4, r3, #4
1a0067a8:	460e      	mov	r6, r1
1a0067aa:	f856 7b04 	ldr.w	r7, [r6], #4
1a0067ae:	f844 7f04 	str.w	r7, [r4, #4]!
1a0067b2:	4564      	cmp	r4, ip
1a0067b4:	d1f9      	bne.n	1a0067aa <memmove+0xaa>
1a0067b6:	3501      	adds	r5, #1
1a0067b8:	00ad      	lsls	r5, r5, #2
1a0067ba:	442b      	add	r3, r5
1a0067bc:	4429      	add	r1, r5
1a0067be:	f002 0203 	and.w	r2, r2, #3
1a0067c2:	e7b1      	b.n	1a006728 <memmove+0x28>
1a0067c4:	1e54      	subs	r4, r2, #1
1a0067c6:	4603      	mov	r3, r0
1a0067c8:	e7b1      	b.n	1a00672e <memmove+0x2e>
1a0067ca:	462a      	mov	r2, r5
1a0067cc:	e7ac      	b.n	1a006728 <memmove+0x28>
1a0067ce:	bf00      	nop

1a0067d0 <__malloc_lock>:
1a0067d0:	4801      	ldr	r0, [pc, #4]	; (1a0067d8 <__malloc_lock+0x8>)
1a0067d2:	f7ff bc0b 	b.w	1a005fec <__retarget_lock_acquire_recursive>
1a0067d6:	bf00      	nop
1a0067d8:	10000b14 	.word	0x10000b14

1a0067dc <__malloc_unlock>:
1a0067dc:	4801      	ldr	r0, [pc, #4]	; (1a0067e4 <__malloc_unlock+0x8>)
1a0067de:	f7ff bc07 	b.w	1a005ff0 <__retarget_lock_release_recursive>
1a0067e2:	bf00      	nop
1a0067e4:	10000b14 	.word	0x10000b14

1a0067e8 <_Balloc>:
1a0067e8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a0067ea:	b570      	push	{r4, r5, r6, lr}
1a0067ec:	4605      	mov	r5, r0
1a0067ee:	460c      	mov	r4, r1
1a0067f0:	b14b      	cbz	r3, 1a006806 <_Balloc+0x1e>
1a0067f2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1a0067f6:	b180      	cbz	r0, 1a00681a <_Balloc+0x32>
1a0067f8:	6802      	ldr	r2, [r0, #0]
1a0067fa:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1a0067fe:	2300      	movs	r3, #0
1a006800:	e9c0 3303 	strd	r3, r3, [r0, #12]
1a006804:	bd70      	pop	{r4, r5, r6, pc}
1a006806:	2221      	movs	r2, #33	; 0x21
1a006808:	2104      	movs	r1, #4
1a00680a:	f000 fda9 	bl	1a007360 <_calloc_r>
1a00680e:	4603      	mov	r3, r0
1a006810:	64e8      	str	r0, [r5, #76]	; 0x4c
1a006812:	2800      	cmp	r0, #0
1a006814:	d1ed      	bne.n	1a0067f2 <_Balloc+0xa>
1a006816:	2000      	movs	r0, #0
1a006818:	bd70      	pop	{r4, r5, r6, pc}
1a00681a:	2101      	movs	r1, #1
1a00681c:	fa01 f604 	lsl.w	r6, r1, r4
1a006820:	1d72      	adds	r2, r6, #5
1a006822:	4628      	mov	r0, r5
1a006824:	0092      	lsls	r2, r2, #2
1a006826:	f000 fd9b 	bl	1a007360 <_calloc_r>
1a00682a:	2800      	cmp	r0, #0
1a00682c:	d0f3      	beq.n	1a006816 <_Balloc+0x2e>
1a00682e:	e9c0 4601 	strd	r4, r6, [r0, #4]
1a006832:	e7e4      	b.n	1a0067fe <_Balloc+0x16>

1a006834 <_Bfree>:
1a006834:	b131      	cbz	r1, 1a006844 <_Bfree+0x10>
1a006836:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a006838:	684a      	ldr	r2, [r1, #4]
1a00683a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1a00683e:	6008      	str	r0, [r1, #0]
1a006840:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1a006844:	4770      	bx	lr
1a006846:	bf00      	nop

1a006848 <__multadd>:
1a006848:	b5f0      	push	{r4, r5, r6, r7, lr}
1a00684a:	690c      	ldr	r4, [r1, #16]
1a00684c:	b083      	sub	sp, #12
1a00684e:	460d      	mov	r5, r1
1a006850:	4606      	mov	r6, r0
1a006852:	f101 0c14 	add.w	ip, r1, #20
1a006856:	2700      	movs	r7, #0
1a006858:	f8dc 0000 	ldr.w	r0, [ip]
1a00685c:	b281      	uxth	r1, r0
1a00685e:	fb02 3301 	mla	r3, r2, r1, r3
1a006862:	0c19      	lsrs	r1, r3, #16
1a006864:	0c00      	lsrs	r0, r0, #16
1a006866:	fb02 1000 	mla	r0, r2, r0, r1
1a00686a:	b29b      	uxth	r3, r3
1a00686c:	3701      	adds	r7, #1
1a00686e:	eb03 4300 	add.w	r3, r3, r0, lsl #16
1a006872:	42bc      	cmp	r4, r7
1a006874:	f84c 3b04 	str.w	r3, [ip], #4
1a006878:	ea4f 4310 	mov.w	r3, r0, lsr #16
1a00687c:	dcec      	bgt.n	1a006858 <__multadd+0x10>
1a00687e:	b13b      	cbz	r3, 1a006890 <__multadd+0x48>
1a006880:	68aa      	ldr	r2, [r5, #8]
1a006882:	42a2      	cmp	r2, r4
1a006884:	dd07      	ble.n	1a006896 <__multadd+0x4e>
1a006886:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a00688a:	3401      	adds	r4, #1
1a00688c:	6153      	str	r3, [r2, #20]
1a00688e:	612c      	str	r4, [r5, #16]
1a006890:	4628      	mov	r0, r5
1a006892:	b003      	add	sp, #12
1a006894:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a006896:	6869      	ldr	r1, [r5, #4]
1a006898:	9301      	str	r3, [sp, #4]
1a00689a:	3101      	adds	r1, #1
1a00689c:	4630      	mov	r0, r6
1a00689e:	f7ff ffa3 	bl	1a0067e8 <_Balloc>
1a0068a2:	692a      	ldr	r2, [r5, #16]
1a0068a4:	3202      	adds	r2, #2
1a0068a6:	f105 010c 	add.w	r1, r5, #12
1a0068aa:	4607      	mov	r7, r0
1a0068ac:	0092      	lsls	r2, r2, #2
1a0068ae:	300c      	adds	r0, #12
1a0068b0:	f7fb ffcc 	bl	1a00284c <memcpy>
1a0068b4:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
1a0068b6:	6869      	ldr	r1, [r5, #4]
1a0068b8:	9b01      	ldr	r3, [sp, #4]
1a0068ba:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
1a0068be:	6028      	str	r0, [r5, #0]
1a0068c0:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
1a0068c4:	463d      	mov	r5, r7
1a0068c6:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a0068ca:	3401      	adds	r4, #1
1a0068cc:	6153      	str	r3, [r2, #20]
1a0068ce:	612c      	str	r4, [r5, #16]
1a0068d0:	e7de      	b.n	1a006890 <__multadd+0x48>
1a0068d2:	bf00      	nop

1a0068d4 <__hi0bits>:
1a0068d4:	0c02      	lsrs	r2, r0, #16
1a0068d6:	0412      	lsls	r2, r2, #16
1a0068d8:	4603      	mov	r3, r0
1a0068da:	b9ca      	cbnz	r2, 1a006910 <__hi0bits+0x3c>
1a0068dc:	0403      	lsls	r3, r0, #16
1a0068de:	2010      	movs	r0, #16
1a0068e0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
1a0068e4:	bf04      	itt	eq
1a0068e6:	021b      	lsleq	r3, r3, #8
1a0068e8:	3008      	addeq	r0, #8
1a0068ea:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
1a0068ee:	bf04      	itt	eq
1a0068f0:	011b      	lsleq	r3, r3, #4
1a0068f2:	3004      	addeq	r0, #4
1a0068f4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
1a0068f8:	bf04      	itt	eq
1a0068fa:	009b      	lsleq	r3, r3, #2
1a0068fc:	3002      	addeq	r0, #2
1a0068fe:	2b00      	cmp	r3, #0
1a006900:	db05      	blt.n	1a00690e <__hi0bits+0x3a>
1a006902:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
1a006906:	f100 0001 	add.w	r0, r0, #1
1a00690a:	bf08      	it	eq
1a00690c:	2020      	moveq	r0, #32
1a00690e:	4770      	bx	lr
1a006910:	2000      	movs	r0, #0
1a006912:	e7e5      	b.n	1a0068e0 <__hi0bits+0xc>

1a006914 <__lo0bits>:
1a006914:	6803      	ldr	r3, [r0, #0]
1a006916:	f013 0207 	ands.w	r2, r3, #7
1a00691a:	4601      	mov	r1, r0
1a00691c:	d007      	beq.n	1a00692e <__lo0bits+0x1a>
1a00691e:	07da      	lsls	r2, r3, #31
1a006920:	d420      	bmi.n	1a006964 <__lo0bits+0x50>
1a006922:	0798      	lsls	r0, r3, #30
1a006924:	d522      	bpl.n	1a00696c <__lo0bits+0x58>
1a006926:	085b      	lsrs	r3, r3, #1
1a006928:	600b      	str	r3, [r1, #0]
1a00692a:	2001      	movs	r0, #1
1a00692c:	4770      	bx	lr
1a00692e:	b298      	uxth	r0, r3
1a006930:	b9b0      	cbnz	r0, 1a006960 <__lo0bits+0x4c>
1a006932:	0c1b      	lsrs	r3, r3, #16
1a006934:	2010      	movs	r0, #16
1a006936:	f013 0fff 	tst.w	r3, #255	; 0xff
1a00693a:	bf04      	itt	eq
1a00693c:	0a1b      	lsreq	r3, r3, #8
1a00693e:	3008      	addeq	r0, #8
1a006940:	071a      	lsls	r2, r3, #28
1a006942:	bf04      	itt	eq
1a006944:	091b      	lsreq	r3, r3, #4
1a006946:	3004      	addeq	r0, #4
1a006948:	079a      	lsls	r2, r3, #30
1a00694a:	bf04      	itt	eq
1a00694c:	089b      	lsreq	r3, r3, #2
1a00694e:	3002      	addeq	r0, #2
1a006950:	07da      	lsls	r2, r3, #31
1a006952:	d403      	bmi.n	1a00695c <__lo0bits+0x48>
1a006954:	085b      	lsrs	r3, r3, #1
1a006956:	f100 0001 	add.w	r0, r0, #1
1a00695a:	d005      	beq.n	1a006968 <__lo0bits+0x54>
1a00695c:	600b      	str	r3, [r1, #0]
1a00695e:	4770      	bx	lr
1a006960:	4610      	mov	r0, r2
1a006962:	e7e8      	b.n	1a006936 <__lo0bits+0x22>
1a006964:	2000      	movs	r0, #0
1a006966:	4770      	bx	lr
1a006968:	2020      	movs	r0, #32
1a00696a:	4770      	bx	lr
1a00696c:	089b      	lsrs	r3, r3, #2
1a00696e:	600b      	str	r3, [r1, #0]
1a006970:	2002      	movs	r0, #2
1a006972:	4770      	bx	lr

1a006974 <__i2b>:
1a006974:	b510      	push	{r4, lr}
1a006976:	460c      	mov	r4, r1
1a006978:	2101      	movs	r1, #1
1a00697a:	f7ff ff35 	bl	1a0067e8 <_Balloc>
1a00697e:	2201      	movs	r2, #1
1a006980:	e9c0 2404 	strd	r2, r4, [r0, #16]
1a006984:	bd10      	pop	{r4, pc}
1a006986:	bf00      	nop

1a006988 <__multiply>:
1a006988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a00698c:	690e      	ldr	r6, [r1, #16]
1a00698e:	6917      	ldr	r7, [r2, #16]
1a006990:	42be      	cmp	r6, r7
1a006992:	b083      	sub	sp, #12
1a006994:	460c      	mov	r4, r1
1a006996:	4615      	mov	r5, r2
1a006998:	db05      	blt.n	1a0069a6 <__multiply+0x1e>
1a00699a:	463a      	mov	r2, r7
1a00699c:	462b      	mov	r3, r5
1a00699e:	4637      	mov	r7, r6
1a0069a0:	460d      	mov	r5, r1
1a0069a2:	4616      	mov	r6, r2
1a0069a4:	461c      	mov	r4, r3
1a0069a6:	e9d5 1301 	ldrd	r1, r3, [r5, #4]
1a0069aa:	eb07 0806 	add.w	r8, r7, r6
1a0069ae:	4543      	cmp	r3, r8
1a0069b0:	bfb8      	it	lt
1a0069b2:	3101      	addlt	r1, #1
1a0069b4:	f7ff ff18 	bl	1a0067e8 <_Balloc>
1a0069b8:	f100 0a14 	add.w	sl, r0, #20
1a0069bc:	eb0a 0988 	add.w	r9, sl, r8, lsl #2
1a0069c0:	45ca      	cmp	sl, r9
1a0069c2:	9000      	str	r0, [sp, #0]
1a0069c4:	d205      	bcs.n	1a0069d2 <__multiply+0x4a>
1a0069c6:	4653      	mov	r3, sl
1a0069c8:	2100      	movs	r1, #0
1a0069ca:	f843 1b04 	str.w	r1, [r3], #4
1a0069ce:	4599      	cmp	r9, r3
1a0069d0:	d8fb      	bhi.n	1a0069ca <__multiply+0x42>
1a0069d2:	f104 0e14 	add.w	lr, r4, #20
1a0069d6:	eb0e 0b86 	add.w	fp, lr, r6, lsl #2
1a0069da:	f105 0314 	add.w	r3, r5, #20
1a0069de:	45de      	cmp	lr, fp
1a0069e0:	eb03 0787 	add.w	r7, r3, r7, lsl #2
1a0069e4:	d253      	bcs.n	1a006a8e <__multiply+0x106>
1a0069e6:	f8cd 8004 	str.w	r8, [sp, #4]
1a0069ea:	4698      	mov	r8, r3
1a0069ec:	e005      	b.n	1a0069fa <__multiply+0x72>
1a0069ee:	0c09      	lsrs	r1, r1, #16
1a0069f0:	d128      	bne.n	1a006a44 <__multiply+0xbc>
1a0069f2:	45f3      	cmp	fp, lr
1a0069f4:	f10a 0a04 	add.w	sl, sl, #4
1a0069f8:	d947      	bls.n	1a006a8a <__multiply+0x102>
1a0069fa:	f85e 1b04 	ldr.w	r1, [lr], #4
1a0069fe:	b28e      	uxth	r6, r1
1a006a00:	2e00      	cmp	r6, #0
1a006a02:	d0f4      	beq.n	1a0069ee <__multiply+0x66>
1a006a04:	4645      	mov	r5, r8
1a006a06:	4654      	mov	r4, sl
1a006a08:	2300      	movs	r3, #0
1a006a0a:	f855 1b04 	ldr.w	r1, [r5], #4
1a006a0e:	6820      	ldr	r0, [r4, #0]
1a006a10:	b28a      	uxth	r2, r1
1a006a12:	fa1f fc80 	uxth.w	ip, r0
1a006a16:	fb06 c202 	mla	r2, r6, r2, ip
1a006a1a:	0c09      	lsrs	r1, r1, #16
1a006a1c:	0c00      	lsrs	r0, r0, #16
1a006a1e:	4413      	add	r3, r2
1a006a20:	fb06 0201 	mla	r2, r6, r1, r0
1a006a24:	eb02 4213 	add.w	r2, r2, r3, lsr #16
1a006a28:	b29b      	uxth	r3, r3
1a006a2a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a006a2e:	42af      	cmp	r7, r5
1a006a30:	f844 3b04 	str.w	r3, [r4], #4
1a006a34:	ea4f 4312 	mov.w	r3, r2, lsr #16
1a006a38:	d8e7      	bhi.n	1a006a0a <__multiply+0x82>
1a006a3a:	6023      	str	r3, [r4, #0]
1a006a3c:	f85e 1c04 	ldr.w	r1, [lr, #-4]
1a006a40:	0c09      	lsrs	r1, r1, #16
1a006a42:	d0d6      	beq.n	1a0069f2 <__multiply+0x6a>
1a006a44:	f8da 3000 	ldr.w	r3, [sl]
1a006a48:	4640      	mov	r0, r8
1a006a4a:	461a      	mov	r2, r3
1a006a4c:	4654      	mov	r4, sl
1a006a4e:	f04f 0c00 	mov.w	ip, #0
1a006a52:	8805      	ldrh	r5, [r0, #0]
1a006a54:	0c12      	lsrs	r2, r2, #16
1a006a56:	fb01 2205 	mla	r2, r1, r5, r2
1a006a5a:	4494      	add	ip, r2
1a006a5c:	b29b      	uxth	r3, r3
1a006a5e:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
1a006a62:	f844 3b04 	str.w	r3, [r4], #4
1a006a66:	f850 3b04 	ldr.w	r3, [r0], #4
1a006a6a:	6822      	ldr	r2, [r4, #0]
1a006a6c:	0c1b      	lsrs	r3, r3, #16
1a006a6e:	b295      	uxth	r5, r2
1a006a70:	fb01 5303 	mla	r3, r1, r3, r5
1a006a74:	eb03 431c 	add.w	r3, r3, ip, lsr #16
1a006a78:	4287      	cmp	r7, r0
1a006a7a:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1a006a7e:	d8e8      	bhi.n	1a006a52 <__multiply+0xca>
1a006a80:	45f3      	cmp	fp, lr
1a006a82:	6023      	str	r3, [r4, #0]
1a006a84:	f10a 0a04 	add.w	sl, sl, #4
1a006a88:	d8b7      	bhi.n	1a0069fa <__multiply+0x72>
1a006a8a:	f8dd 8004 	ldr.w	r8, [sp, #4]
1a006a8e:	f1b8 0f00 	cmp.w	r8, #0
1a006a92:	dd0b      	ble.n	1a006aac <__multiply+0x124>
1a006a94:	f859 3c04 	ldr.w	r3, [r9, #-4]
1a006a98:	f1a9 0904 	sub.w	r9, r9, #4
1a006a9c:	b11b      	cbz	r3, 1a006aa6 <__multiply+0x11e>
1a006a9e:	e005      	b.n	1a006aac <__multiply+0x124>
1a006aa0:	f859 3d04 	ldr.w	r3, [r9, #-4]!
1a006aa4:	b913      	cbnz	r3, 1a006aac <__multiply+0x124>
1a006aa6:	f1b8 0801 	subs.w	r8, r8, #1
1a006aaa:	d1f9      	bne.n	1a006aa0 <__multiply+0x118>
1a006aac:	9800      	ldr	r0, [sp, #0]
1a006aae:	f8c0 8010 	str.w	r8, [r0, #16]
1a006ab2:	b003      	add	sp, #12
1a006ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a006ab8 <__pow5mult>:
1a006ab8:	f012 0303 	ands.w	r3, r2, #3
1a006abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a006ac0:	4614      	mov	r4, r2
1a006ac2:	4607      	mov	r7, r0
1a006ac4:	d12e      	bne.n	1a006b24 <__pow5mult+0x6c>
1a006ac6:	460d      	mov	r5, r1
1a006ac8:	10a4      	asrs	r4, r4, #2
1a006aca:	d01c      	beq.n	1a006b06 <__pow5mult+0x4e>
1a006acc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
1a006ace:	b396      	cbz	r6, 1a006b36 <__pow5mult+0x7e>
1a006ad0:	07e3      	lsls	r3, r4, #31
1a006ad2:	f04f 0800 	mov.w	r8, #0
1a006ad6:	d406      	bmi.n	1a006ae6 <__pow5mult+0x2e>
1a006ad8:	1064      	asrs	r4, r4, #1
1a006ada:	d014      	beq.n	1a006b06 <__pow5mult+0x4e>
1a006adc:	6830      	ldr	r0, [r6, #0]
1a006ade:	b1a8      	cbz	r0, 1a006b0c <__pow5mult+0x54>
1a006ae0:	4606      	mov	r6, r0
1a006ae2:	07e3      	lsls	r3, r4, #31
1a006ae4:	d5f8      	bpl.n	1a006ad8 <__pow5mult+0x20>
1a006ae6:	4632      	mov	r2, r6
1a006ae8:	4629      	mov	r1, r5
1a006aea:	4638      	mov	r0, r7
1a006aec:	f7ff ff4c 	bl	1a006988 <__multiply>
1a006af0:	b1b5      	cbz	r5, 1a006b20 <__pow5mult+0x68>
1a006af2:	686a      	ldr	r2, [r5, #4]
1a006af4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a006af6:	1064      	asrs	r4, r4, #1
1a006af8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a006afc:	6029      	str	r1, [r5, #0]
1a006afe:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a006b02:	4605      	mov	r5, r0
1a006b04:	d1ea      	bne.n	1a006adc <__pow5mult+0x24>
1a006b06:	4628      	mov	r0, r5
1a006b08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a006b0c:	4632      	mov	r2, r6
1a006b0e:	4631      	mov	r1, r6
1a006b10:	4638      	mov	r0, r7
1a006b12:	f7ff ff39 	bl	1a006988 <__multiply>
1a006b16:	6030      	str	r0, [r6, #0]
1a006b18:	f8c0 8000 	str.w	r8, [r0]
1a006b1c:	4606      	mov	r6, r0
1a006b1e:	e7e0      	b.n	1a006ae2 <__pow5mult+0x2a>
1a006b20:	4605      	mov	r5, r0
1a006b22:	e7d9      	b.n	1a006ad8 <__pow5mult+0x20>
1a006b24:	3b01      	subs	r3, #1
1a006b26:	4a0b      	ldr	r2, [pc, #44]	; (1a006b54 <__pow5mult+0x9c>)
1a006b28:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1a006b2c:	2300      	movs	r3, #0
1a006b2e:	f7ff fe8b 	bl	1a006848 <__multadd>
1a006b32:	4605      	mov	r5, r0
1a006b34:	e7c8      	b.n	1a006ac8 <__pow5mult+0x10>
1a006b36:	2101      	movs	r1, #1
1a006b38:	4638      	mov	r0, r7
1a006b3a:	f7ff fe55 	bl	1a0067e8 <_Balloc>
1a006b3e:	f240 2371 	movw	r3, #625	; 0x271
1a006b42:	6143      	str	r3, [r0, #20]
1a006b44:	2201      	movs	r2, #1
1a006b46:	2300      	movs	r3, #0
1a006b48:	6102      	str	r2, [r0, #16]
1a006b4a:	4606      	mov	r6, r0
1a006b4c:	64b8      	str	r0, [r7, #72]	; 0x48
1a006b4e:	6003      	str	r3, [r0, #0]
1a006b50:	e7be      	b.n	1a006ad0 <__pow5mult+0x18>
1a006b52:	bf00      	nop
1a006b54:	1a007b28 	.word	0x1a007b28

1a006b58 <__lshift>:
1a006b58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a006b5c:	690e      	ldr	r6, [r1, #16]
1a006b5e:	460d      	mov	r5, r1
1a006b60:	ea4f 1962 	mov.w	r9, r2, asr #5
1a006b64:	e9d1 1301 	ldrd	r1, r3, [r1, #4]
1a006b68:	444e      	add	r6, r9
1a006b6a:	1c74      	adds	r4, r6, #1
1a006b6c:	429c      	cmp	r4, r3
1a006b6e:	4690      	mov	r8, r2
1a006b70:	4607      	mov	r7, r0
1a006b72:	dd04      	ble.n	1a006b7e <__lshift+0x26>
1a006b74:	005b      	lsls	r3, r3, #1
1a006b76:	429c      	cmp	r4, r3
1a006b78:	f101 0101 	add.w	r1, r1, #1
1a006b7c:	dcfa      	bgt.n	1a006b74 <__lshift+0x1c>
1a006b7e:	4638      	mov	r0, r7
1a006b80:	f7ff fe32 	bl	1a0067e8 <_Balloc>
1a006b84:	f1b9 0f00 	cmp.w	r9, #0
1a006b88:	f100 0c14 	add.w	ip, r0, #20
1a006b8c:	dd0e      	ble.n	1a006bac <__lshift+0x54>
1a006b8e:	f109 0905 	add.w	r9, r9, #5
1a006b92:	ea4f 0989 	mov.w	r9, r9, lsl #2
1a006b96:	eb00 0109 	add.w	r1, r0, r9
1a006b9a:	4663      	mov	r3, ip
1a006b9c:	2200      	movs	r2, #0
1a006b9e:	f843 2b04 	str.w	r2, [r3], #4
1a006ba2:	428b      	cmp	r3, r1
1a006ba4:	d1fb      	bne.n	1a006b9e <__lshift+0x46>
1a006ba6:	f1a9 0914 	sub.w	r9, r9, #20
1a006baa:	44cc      	add	ip, r9
1a006bac:	6929      	ldr	r1, [r5, #16]
1a006bae:	f105 0314 	add.w	r3, r5, #20
1a006bb2:	f018 081f 	ands.w	r8, r8, #31
1a006bb6:	eb03 0e81 	add.w	lr, r3, r1, lsl #2
1a006bba:	d01d      	beq.n	1a006bf8 <__lshift+0xa0>
1a006bbc:	f1c8 0920 	rsb	r9, r8, #32
1a006bc0:	2200      	movs	r2, #0
1a006bc2:	6819      	ldr	r1, [r3, #0]
1a006bc4:	fa01 f108 	lsl.w	r1, r1, r8
1a006bc8:	4311      	orrs	r1, r2
1a006bca:	f84c 1b04 	str.w	r1, [ip], #4
1a006bce:	f853 2b04 	ldr.w	r2, [r3], #4
1a006bd2:	4573      	cmp	r3, lr
1a006bd4:	fa22 f209 	lsr.w	r2, r2, r9
1a006bd8:	d3f3      	bcc.n	1a006bc2 <__lshift+0x6a>
1a006bda:	f8cc 2000 	str.w	r2, [ip]
1a006bde:	2a00      	cmp	r2, #0
1a006be0:	bf18      	it	ne
1a006be2:	4626      	movne	r6, r4
1a006be4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a006be6:	686a      	ldr	r2, [r5, #4]
1a006be8:	6106      	str	r6, [r0, #16]
1a006bea:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a006bee:	6029      	str	r1, [r5, #0]
1a006bf0:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a006bf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a006bf8:	f1ac 0c04 	sub.w	ip, ip, #4
1a006bfc:	f853 2b04 	ldr.w	r2, [r3], #4
1a006c00:	f84c 2f04 	str.w	r2, [ip, #4]!
1a006c04:	459e      	cmp	lr, r3
1a006c06:	d8f9      	bhi.n	1a006bfc <__lshift+0xa4>
1a006c08:	e7ec      	b.n	1a006be4 <__lshift+0x8c>
1a006c0a:	bf00      	nop

1a006c0c <__mcmp>:
1a006c0c:	b430      	push	{r4, r5}
1a006c0e:	690b      	ldr	r3, [r1, #16]
1a006c10:	4605      	mov	r5, r0
1a006c12:	6900      	ldr	r0, [r0, #16]
1a006c14:	1ac0      	subs	r0, r0, r3
1a006c16:	d110      	bne.n	1a006c3a <__mcmp+0x2e>
1a006c18:	009b      	lsls	r3, r3, #2
1a006c1a:	3514      	adds	r5, #20
1a006c1c:	3114      	adds	r1, #20
1a006c1e:	4419      	add	r1, r3
1a006c20:	442b      	add	r3, r5
1a006c22:	e001      	b.n	1a006c28 <__mcmp+0x1c>
1a006c24:	429d      	cmp	r5, r3
1a006c26:	d208      	bcs.n	1a006c3a <__mcmp+0x2e>
1a006c28:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1a006c2c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a006c30:	4294      	cmp	r4, r2
1a006c32:	d0f7      	beq.n	1a006c24 <__mcmp+0x18>
1a006c34:	d203      	bcs.n	1a006c3e <__mcmp+0x32>
1a006c36:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a006c3a:	bc30      	pop	{r4, r5}
1a006c3c:	4770      	bx	lr
1a006c3e:	2001      	movs	r0, #1
1a006c40:	bc30      	pop	{r4, r5}
1a006c42:	4770      	bx	lr

1a006c44 <__mdiff>:
1a006c44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a006c48:	460f      	mov	r7, r1
1a006c4a:	690d      	ldr	r5, [r1, #16]
1a006c4c:	6911      	ldr	r1, [r2, #16]
1a006c4e:	1a6d      	subs	r5, r5, r1
1a006c50:	2d00      	cmp	r5, #0
1a006c52:	4690      	mov	r8, r2
1a006c54:	4684      	mov	ip, r0
1a006c56:	f107 0414 	add.w	r4, r7, #20
1a006c5a:	f102 0614 	add.w	r6, r2, #20
1a006c5e:	d114      	bne.n	1a006c8a <__mdiff+0x46>
1a006c60:	0089      	lsls	r1, r1, #2
1a006c62:	1863      	adds	r3, r4, r1
1a006c64:	4431      	add	r1, r6
1a006c66:	e001      	b.n	1a006c6c <__mdiff+0x28>
1a006c68:	42a3      	cmp	r3, r4
1a006c6a:	d95d      	bls.n	1a006d28 <__mdiff+0xe4>
1a006c6c:	f853 0d04 	ldr.w	r0, [r3, #-4]!
1a006c70:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a006c74:	4290      	cmp	r0, r2
1a006c76:	d0f7      	beq.n	1a006c68 <__mdiff+0x24>
1a006c78:	d209      	bcs.n	1a006c8e <__mdiff+0x4a>
1a006c7a:	4622      	mov	r2, r4
1a006c7c:	463b      	mov	r3, r7
1a006c7e:	4634      	mov	r4, r6
1a006c80:	4647      	mov	r7, r8
1a006c82:	4616      	mov	r6, r2
1a006c84:	4698      	mov	r8, r3
1a006c86:	2501      	movs	r5, #1
1a006c88:	e001      	b.n	1a006c8e <__mdiff+0x4a>
1a006c8a:	dbf6      	blt.n	1a006c7a <__mdiff+0x36>
1a006c8c:	2500      	movs	r5, #0
1a006c8e:	4660      	mov	r0, ip
1a006c90:	6879      	ldr	r1, [r7, #4]
1a006c92:	f7ff fda9 	bl	1a0067e8 <_Balloc>
1a006c96:	693f      	ldr	r7, [r7, #16]
1a006c98:	f8d8 3010 	ldr.w	r3, [r8, #16]
1a006c9c:	60c5      	str	r5, [r0, #12]
1a006c9e:	eb06 0e83 	add.w	lr, r6, r3, lsl #2
1a006ca2:	eb04 0c87 	add.w	ip, r4, r7, lsl #2
1a006ca6:	f100 0514 	add.w	r5, r0, #20
1a006caa:	2200      	movs	r2, #0
1a006cac:	e000      	b.n	1a006cb0 <__mdiff+0x6c>
1a006cae:	460d      	mov	r5, r1
1a006cb0:	f856 1b04 	ldr.w	r1, [r6], #4
1a006cb4:	f854 8b04 	ldr.w	r8, [r4], #4
1a006cb8:	fa1f f981 	uxth.w	r9, r1
1a006cbc:	fa12 f388 	uxtah	r3, r2, r8
1a006cc0:	0c0a      	lsrs	r2, r1, #16
1a006cc2:	eba3 0309 	sub.w	r3, r3, r9
1a006cc6:	ebc2 4218 	rsb	r2, r2, r8, lsr #16
1a006cca:	eb02 4223 	add.w	r2, r2, r3, asr #16
1a006cce:	4629      	mov	r1, r5
1a006cd0:	b29b      	uxth	r3, r3
1a006cd2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a006cd6:	45b6      	cmp	lr, r6
1a006cd8:	ea4f 4222 	mov.w	r2, r2, asr #16
1a006cdc:	f841 3b04 	str.w	r3, [r1], #4
1a006ce0:	46a0      	mov	r8, r4
1a006ce2:	d8e4      	bhi.n	1a006cae <__mdiff+0x6a>
1a006ce4:	45a4      	cmp	ip, r4
1a006ce6:	d916      	bls.n	1a006d16 <__mdiff+0xd2>
1a006ce8:	460e      	mov	r6, r1
1a006cea:	f858 5b04 	ldr.w	r5, [r8], #4
1a006cee:	fa12 f385 	uxtah	r3, r2, r5
1a006cf2:	141a      	asrs	r2, r3, #16
1a006cf4:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1a006cf8:	b29b      	uxth	r3, r3
1a006cfa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a006cfe:	45c4      	cmp	ip, r8
1a006d00:	f846 3b04 	str.w	r3, [r6], #4
1a006d04:	ea4f 4222 	mov.w	r2, r2, asr #16
1a006d08:	d8ef      	bhi.n	1a006cea <__mdiff+0xa6>
1a006d0a:	f10c 35ff 	add.w	r5, ip, #4294967295	; 0xffffffff
1a006d0e:	1b2d      	subs	r5, r5, r4
1a006d10:	f025 0503 	bic.w	r5, r5, #3
1a006d14:	440d      	add	r5, r1
1a006d16:	b923      	cbnz	r3, 1a006d22 <__mdiff+0xde>
1a006d18:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1a006d1c:	3f01      	subs	r7, #1
1a006d1e:	2b00      	cmp	r3, #0
1a006d20:	d0fa      	beq.n	1a006d18 <__mdiff+0xd4>
1a006d22:	6107      	str	r7, [r0, #16]
1a006d24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a006d28:	4660      	mov	r0, ip
1a006d2a:	2100      	movs	r1, #0
1a006d2c:	f7ff fd5c 	bl	1a0067e8 <_Balloc>
1a006d30:	2201      	movs	r2, #1
1a006d32:	2300      	movs	r3, #0
1a006d34:	e9c0 2304 	strd	r2, r3, [r0, #16]
1a006d38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

1a006d3c <__d2b>:
1a006d3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a006d40:	460f      	mov	r7, r1
1a006d42:	b083      	sub	sp, #12
1a006d44:	2101      	movs	r1, #1
1a006d46:	ec55 4b10 	vmov	r4, r5, d0
1a006d4a:	4616      	mov	r6, r2
1a006d4c:	f7ff fd4c 	bl	1a0067e8 <_Balloc>
1a006d50:	f3c5 580a 	ubfx	r8, r5, #20, #11
1a006d54:	4681      	mov	r9, r0
1a006d56:	f3c5 0313 	ubfx	r3, r5, #0, #20
1a006d5a:	f1b8 0f00 	cmp.w	r8, #0
1a006d5e:	d001      	beq.n	1a006d64 <__d2b+0x28>
1a006d60:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a006d64:	2c00      	cmp	r4, #0
1a006d66:	9301      	str	r3, [sp, #4]
1a006d68:	d02b      	beq.n	1a006dc2 <__d2b+0x86>
1a006d6a:	4668      	mov	r0, sp
1a006d6c:	9400      	str	r4, [sp, #0]
1a006d6e:	f7ff fdd1 	bl	1a006914 <__lo0bits>
1a006d72:	b9d0      	cbnz	r0, 1a006daa <__d2b+0x6e>
1a006d74:	e9dd 2300 	ldrd	r2, r3, [sp]
1a006d78:	f8c9 2014 	str.w	r2, [r9, #20]
1a006d7c:	2b00      	cmp	r3, #0
1a006d7e:	bf14      	ite	ne
1a006d80:	2102      	movne	r1, #2
1a006d82:	2101      	moveq	r1, #1
1a006d84:	f8c9 3018 	str.w	r3, [r9, #24]
1a006d88:	f8c9 1010 	str.w	r1, [r9, #16]
1a006d8c:	f1b8 0f00 	cmp.w	r8, #0
1a006d90:	d024      	beq.n	1a006ddc <__d2b+0xa0>
1a006d92:	f2a8 4833 	subw	r8, r8, #1075	; 0x433
1a006d96:	eb08 0300 	add.w	r3, r8, r0
1a006d9a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
1a006d9e:	603b      	str	r3, [r7, #0]
1a006da0:	6030      	str	r0, [r6, #0]
1a006da2:	4648      	mov	r0, r9
1a006da4:	b003      	add	sp, #12
1a006da6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006daa:	e9dd 1300 	ldrd	r1, r3, [sp]
1a006dae:	f1c0 0220 	rsb	r2, r0, #32
1a006db2:	fa03 f202 	lsl.w	r2, r3, r2
1a006db6:	430a      	orrs	r2, r1
1a006db8:	40c3      	lsrs	r3, r0
1a006dba:	9301      	str	r3, [sp, #4]
1a006dbc:	f8c9 2014 	str.w	r2, [r9, #20]
1a006dc0:	e7dc      	b.n	1a006d7c <__d2b+0x40>
1a006dc2:	a801      	add	r0, sp, #4
1a006dc4:	f7ff fda6 	bl	1a006914 <__lo0bits>
1a006dc8:	9b01      	ldr	r3, [sp, #4]
1a006dca:	f8c9 3014 	str.w	r3, [r9, #20]
1a006dce:	2101      	movs	r1, #1
1a006dd0:	3020      	adds	r0, #32
1a006dd2:	f8c9 1010 	str.w	r1, [r9, #16]
1a006dd6:	f1b8 0f00 	cmp.w	r8, #0
1a006dda:	d1da      	bne.n	1a006d92 <__d2b+0x56>
1a006ddc:	eb09 0381 	add.w	r3, r9, r1, lsl #2
1a006de0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
1a006de4:	6038      	str	r0, [r7, #0]
1a006de6:	6918      	ldr	r0, [r3, #16]
1a006de8:	f7ff fd74 	bl	1a0068d4 <__hi0bits>
1a006dec:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
1a006df0:	6030      	str	r0, [r6, #0]
1a006df2:	4648      	mov	r0, r9
1a006df4:	b003      	add	sp, #12
1a006df6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006dfa:	bf00      	nop

1a006dfc <_realloc_r>:
1a006dfc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006e00:	4617      	mov	r7, r2
1a006e02:	2900      	cmp	r1, #0
1a006e04:	f000 80bb 	beq.w	1a006f7e <_realloc_r+0x182>
1a006e08:	f107 040b 	add.w	r4, r7, #11
1a006e0c:	4681      	mov	r9, r0
1a006e0e:	460d      	mov	r5, r1
1a006e10:	f7ff fcde 	bl	1a0067d0 <__malloc_lock>
1a006e14:	2c16      	cmp	r4, #22
1a006e16:	d85e      	bhi.n	1a006ed6 <_realloc_r+0xda>
1a006e18:	2410      	movs	r4, #16
1a006e1a:	4622      	mov	r2, r4
1a006e1c:	42a7      	cmp	r7, r4
1a006e1e:	d85f      	bhi.n	1a006ee0 <_realloc_r+0xe4>
1a006e20:	f855 ec04 	ldr.w	lr, [r5, #-4]
1a006e24:	f02e 0603 	bic.w	r6, lr, #3
1a006e28:	f1a5 0808 	sub.w	r8, r5, #8
1a006e2c:	4296      	cmp	r6, r2
1a006e2e:	eb08 0a06 	add.w	sl, r8, r6
1a006e32:	f280 8081 	bge.w	1a006f38 <_realloc_r+0x13c>
1a006e36:	4bcb      	ldr	r3, [pc, #812]	; (1a007164 <_realloc_r+0x368>)
1a006e38:	f8da 0004 	ldr.w	r0, [sl, #4]
1a006e3c:	6899      	ldr	r1, [r3, #8]
1a006e3e:	4551      	cmp	r1, sl
1a006e40:	f000 80b5 	beq.w	1a006fae <_realloc_r+0x1b2>
1a006e44:	f020 0301 	bic.w	r3, r0, #1
1a006e48:	4453      	add	r3, sl
1a006e4a:	685b      	ldr	r3, [r3, #4]
1a006e4c:	07db      	lsls	r3, r3, #31
1a006e4e:	f100 808a 	bmi.w	1a006f66 <_realloc_r+0x16a>
1a006e52:	f020 0003 	bic.w	r0, r0, #3
1a006e56:	1833      	adds	r3, r6, r0
1a006e58:	4293      	cmp	r3, r2
1a006e5a:	f280 8112 	bge.w	1a007082 <_realloc_r+0x286>
1a006e5e:	f01e 0f01 	tst.w	lr, #1
1a006e62:	d10f      	bne.n	1a006e84 <_realloc_r+0x88>
1a006e64:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a006e68:	eba8 0b03 	sub.w	fp, r8, r3
1a006e6c:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006e70:	f021 0103 	bic.w	r1, r1, #3
1a006e74:	4408      	add	r0, r1
1a006e76:	1983      	adds	r3, r0, r6
1a006e78:	4293      	cmp	r3, r2
1a006e7a:	f280 8116 	bge.w	1a0070aa <_realloc_r+0x2ae>
1a006e7e:	1873      	adds	r3, r6, r1
1a006e80:	4293      	cmp	r3, r2
1a006e82:	da34      	bge.n	1a006eee <_realloc_r+0xf2>
1a006e84:	4639      	mov	r1, r7
1a006e86:	4648      	mov	r0, r9
1a006e88:	f7ff f92c 	bl	1a0060e4 <_malloc_r>
1a006e8c:	4607      	mov	r7, r0
1a006e8e:	b1e0      	cbz	r0, 1a006eca <_realloc_r+0xce>
1a006e90:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a006e94:	f023 0301 	bic.w	r3, r3, #1
1a006e98:	4443      	add	r3, r8
1a006e9a:	f1a0 0208 	sub.w	r2, r0, #8
1a006e9e:	4293      	cmp	r3, r2
1a006ea0:	f000 80f7 	beq.w	1a007092 <_realloc_r+0x296>
1a006ea4:	1f32      	subs	r2, r6, #4
1a006ea6:	2a24      	cmp	r2, #36	; 0x24
1a006ea8:	f200 80fb 	bhi.w	1a0070a2 <_realloc_r+0x2a6>
1a006eac:	2a13      	cmp	r2, #19
1a006eae:	6829      	ldr	r1, [r5, #0]
1a006eb0:	f200 80c9 	bhi.w	1a007046 <_realloc_r+0x24a>
1a006eb4:	4603      	mov	r3, r0
1a006eb6:	462a      	mov	r2, r5
1a006eb8:	6019      	str	r1, [r3, #0]
1a006eba:	6851      	ldr	r1, [r2, #4]
1a006ebc:	6059      	str	r1, [r3, #4]
1a006ebe:	6892      	ldr	r2, [r2, #8]
1a006ec0:	609a      	str	r2, [r3, #8]
1a006ec2:	4629      	mov	r1, r5
1a006ec4:	4648      	mov	r0, r9
1a006ec6:	f7fe fde5 	bl	1a005a94 <_free_r>
1a006eca:	4648      	mov	r0, r9
1a006ecc:	f7ff fc86 	bl	1a0067dc <__malloc_unlock>
1a006ed0:	4638      	mov	r0, r7
1a006ed2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006ed6:	f024 0407 	bic.w	r4, r4, #7
1a006eda:	2c00      	cmp	r4, #0
1a006edc:	4622      	mov	r2, r4
1a006ede:	da9d      	bge.n	1a006e1c <_realloc_r+0x20>
1a006ee0:	230c      	movs	r3, #12
1a006ee2:	f8c9 3000 	str.w	r3, [r9]
1a006ee6:	2700      	movs	r7, #0
1a006ee8:	4638      	mov	r0, r7
1a006eea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006eee:	465f      	mov	r7, fp
1a006ef0:	f8db 100c 	ldr.w	r1, [fp, #12]
1a006ef4:	f857 0f08 	ldr.w	r0, [r7, #8]!
1a006ef8:	1f32      	subs	r2, r6, #4
1a006efa:	2a24      	cmp	r2, #36	; 0x24
1a006efc:	60c1      	str	r1, [r0, #12]
1a006efe:	eb0b 0a03 	add.w	sl, fp, r3
1a006f02:	6088      	str	r0, [r1, #8]
1a006f04:	f200 80d9 	bhi.w	1a0070ba <_realloc_r+0x2be>
1a006f08:	2a13      	cmp	r2, #19
1a006f0a:	6829      	ldr	r1, [r5, #0]
1a006f0c:	f240 80d3 	bls.w	1a0070b6 <_realloc_r+0x2ba>
1a006f10:	f8cb 1008 	str.w	r1, [fp, #8]
1a006f14:	6869      	ldr	r1, [r5, #4]
1a006f16:	f8cb 100c 	str.w	r1, [fp, #12]
1a006f1a:	2a1b      	cmp	r2, #27
1a006f1c:	68a9      	ldr	r1, [r5, #8]
1a006f1e:	f200 80e0 	bhi.w	1a0070e2 <_realloc_r+0x2e6>
1a006f22:	f10b 0210 	add.w	r2, fp, #16
1a006f26:	3508      	adds	r5, #8
1a006f28:	6011      	str	r1, [r2, #0]
1a006f2a:	6869      	ldr	r1, [r5, #4]
1a006f2c:	6051      	str	r1, [r2, #4]
1a006f2e:	68a9      	ldr	r1, [r5, #8]
1a006f30:	6091      	str	r1, [r2, #8]
1a006f32:	461e      	mov	r6, r3
1a006f34:	46d8      	mov	r8, fp
1a006f36:	463d      	mov	r5, r7
1a006f38:	f8d8 3004 	ldr.w	r3, [r8, #4]
1a006f3c:	1b32      	subs	r2, r6, r4
1a006f3e:	2a0f      	cmp	r2, #15
1a006f40:	f003 0301 	and.w	r3, r3, #1
1a006f44:	d820      	bhi.n	1a006f88 <_realloc_r+0x18c>
1a006f46:	4333      	orrs	r3, r6
1a006f48:	f8c8 3004 	str.w	r3, [r8, #4]
1a006f4c:	f8da 3004 	ldr.w	r3, [sl, #4]
1a006f50:	f043 0301 	orr.w	r3, r3, #1
1a006f54:	f8ca 3004 	str.w	r3, [sl, #4]
1a006f58:	4648      	mov	r0, r9
1a006f5a:	462f      	mov	r7, r5
1a006f5c:	f7ff fc3e 	bl	1a0067dc <__malloc_unlock>
1a006f60:	4638      	mov	r0, r7
1a006f62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006f66:	f01e 0f01 	tst.w	lr, #1
1a006f6a:	d18b      	bne.n	1a006e84 <_realloc_r+0x88>
1a006f6c:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a006f70:	eba8 0b03 	sub.w	fp, r8, r3
1a006f74:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006f78:	f021 0103 	bic.w	r1, r1, #3
1a006f7c:	e77f      	b.n	1a006e7e <_realloc_r+0x82>
1a006f7e:	4611      	mov	r1, r2
1a006f80:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006f84:	f7ff b8ae 	b.w	1a0060e4 <_malloc_r>
1a006f88:	eb08 0104 	add.w	r1, r8, r4
1a006f8c:	4323      	orrs	r3, r4
1a006f8e:	f042 0201 	orr.w	r2, r2, #1
1a006f92:	f8c8 3004 	str.w	r3, [r8, #4]
1a006f96:	604a      	str	r2, [r1, #4]
1a006f98:	f8da 3004 	ldr.w	r3, [sl, #4]
1a006f9c:	f043 0301 	orr.w	r3, r3, #1
1a006fa0:	3108      	adds	r1, #8
1a006fa2:	f8ca 3004 	str.w	r3, [sl, #4]
1a006fa6:	4648      	mov	r0, r9
1a006fa8:	f7fe fd74 	bl	1a005a94 <_free_r>
1a006fac:	e7d4      	b.n	1a006f58 <_realloc_r+0x15c>
1a006fae:	f020 0003 	bic.w	r0, r0, #3
1a006fb2:	1831      	adds	r1, r6, r0
1a006fb4:	f104 0c10 	add.w	ip, r4, #16
1a006fb8:	4561      	cmp	r1, ip
1a006fba:	da4f      	bge.n	1a00705c <_realloc_r+0x260>
1a006fbc:	f01e 0f01 	tst.w	lr, #1
1a006fc0:	f47f af60 	bne.w	1a006e84 <_realloc_r+0x88>
1a006fc4:	f855 1c08 	ldr.w	r1, [r5, #-8]
1a006fc8:	eba8 0b01 	sub.w	fp, r8, r1
1a006fcc:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006fd0:	f021 0103 	bic.w	r1, r1, #3
1a006fd4:	4408      	add	r0, r1
1a006fd6:	eb00 0a06 	add.w	sl, r0, r6
1a006fda:	45d4      	cmp	ip, sl
1a006fdc:	f73f af4f 	bgt.w	1a006e7e <_realloc_r+0x82>
1a006fe0:	465f      	mov	r7, fp
1a006fe2:	f8db 100c 	ldr.w	r1, [fp, #12]
1a006fe6:	f857 0f08 	ldr.w	r0, [r7, #8]!
1a006fea:	1f32      	subs	r2, r6, #4
1a006fec:	2a24      	cmp	r2, #36	; 0x24
1a006fee:	60c1      	str	r1, [r0, #12]
1a006ff0:	6088      	str	r0, [r1, #8]
1a006ff2:	f200 8099 	bhi.w	1a007128 <_realloc_r+0x32c>
1a006ff6:	2a13      	cmp	r2, #19
1a006ff8:	6829      	ldr	r1, [r5, #0]
1a006ffa:	f240 8093 	bls.w	1a007124 <_realloc_r+0x328>
1a006ffe:	f8cb 1008 	str.w	r1, [fp, #8]
1a007002:	6869      	ldr	r1, [r5, #4]
1a007004:	f8cb 100c 	str.w	r1, [fp, #12]
1a007008:	2a1b      	cmp	r2, #27
1a00700a:	68a9      	ldr	r1, [r5, #8]
1a00700c:	f200 8092 	bhi.w	1a007134 <_realloc_r+0x338>
1a007010:	f10b 0210 	add.w	r2, fp, #16
1a007014:	3508      	adds	r5, #8
1a007016:	6011      	str	r1, [r2, #0]
1a007018:	6869      	ldr	r1, [r5, #4]
1a00701a:	6051      	str	r1, [r2, #4]
1a00701c:	68a9      	ldr	r1, [r5, #8]
1a00701e:	6091      	str	r1, [r2, #8]
1a007020:	eb0b 0104 	add.w	r1, fp, r4
1a007024:	ebaa 0204 	sub.w	r2, sl, r4
1a007028:	f042 0201 	orr.w	r2, r2, #1
1a00702c:	6099      	str	r1, [r3, #8]
1a00702e:	604a      	str	r2, [r1, #4]
1a007030:	f8db 3004 	ldr.w	r3, [fp, #4]
1a007034:	f003 0301 	and.w	r3, r3, #1
1a007038:	431c      	orrs	r4, r3
1a00703a:	4648      	mov	r0, r9
1a00703c:	f8cb 4004 	str.w	r4, [fp, #4]
1a007040:	f7ff fbcc 	bl	1a0067dc <__malloc_unlock>
1a007044:	e750      	b.n	1a006ee8 <_realloc_r+0xec>
1a007046:	6001      	str	r1, [r0, #0]
1a007048:	686b      	ldr	r3, [r5, #4]
1a00704a:	6043      	str	r3, [r0, #4]
1a00704c:	2a1b      	cmp	r2, #27
1a00704e:	d83c      	bhi.n	1a0070ca <_realloc_r+0x2ce>
1a007050:	f105 0208 	add.w	r2, r5, #8
1a007054:	f100 0308 	add.w	r3, r0, #8
1a007058:	68a9      	ldr	r1, [r5, #8]
1a00705a:	e72d      	b.n	1a006eb8 <_realloc_r+0xbc>
1a00705c:	eb08 0004 	add.w	r0, r8, r4
1a007060:	1b0a      	subs	r2, r1, r4
1a007062:	f042 0201 	orr.w	r2, r2, #1
1a007066:	6098      	str	r0, [r3, #8]
1a007068:	6042      	str	r2, [r0, #4]
1a00706a:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a00706e:	f003 0301 	and.w	r3, r3, #1
1a007072:	431c      	orrs	r4, r3
1a007074:	4648      	mov	r0, r9
1a007076:	f845 4c04 	str.w	r4, [r5, #-4]
1a00707a:	f7ff fbaf 	bl	1a0067dc <__malloc_unlock>
1a00707e:	462f      	mov	r7, r5
1a007080:	e732      	b.n	1a006ee8 <_realloc_r+0xec>
1a007082:	e9da 1202 	ldrd	r1, r2, [sl, #8]
1a007086:	461e      	mov	r6, r3
1a007088:	60ca      	str	r2, [r1, #12]
1a00708a:	eb08 0a03 	add.w	sl, r8, r3
1a00708e:	6091      	str	r1, [r2, #8]
1a007090:	e752      	b.n	1a006f38 <_realloc_r+0x13c>
1a007092:	f850 3c04 	ldr.w	r3, [r0, #-4]
1a007096:	f023 0303 	bic.w	r3, r3, #3
1a00709a:	441e      	add	r6, r3
1a00709c:	eb08 0a06 	add.w	sl, r8, r6
1a0070a0:	e74a      	b.n	1a006f38 <_realloc_r+0x13c>
1a0070a2:	4629      	mov	r1, r5
1a0070a4:	f7ff fb2c 	bl	1a006700 <memmove>
1a0070a8:	e70b      	b.n	1a006ec2 <_realloc_r+0xc6>
1a0070aa:	e9da 1202 	ldrd	r1, r2, [sl, #8]
1a0070ae:	465f      	mov	r7, fp
1a0070b0:	60ca      	str	r2, [r1, #12]
1a0070b2:	6091      	str	r1, [r2, #8]
1a0070b4:	e71c      	b.n	1a006ef0 <_realloc_r+0xf4>
1a0070b6:	463a      	mov	r2, r7
1a0070b8:	e736      	b.n	1a006f28 <_realloc_r+0x12c>
1a0070ba:	4629      	mov	r1, r5
1a0070bc:	4638      	mov	r0, r7
1a0070be:	461e      	mov	r6, r3
1a0070c0:	46d8      	mov	r8, fp
1a0070c2:	f7ff fb1d 	bl	1a006700 <memmove>
1a0070c6:	463d      	mov	r5, r7
1a0070c8:	e736      	b.n	1a006f38 <_realloc_r+0x13c>
1a0070ca:	68ab      	ldr	r3, [r5, #8]
1a0070cc:	6083      	str	r3, [r0, #8]
1a0070ce:	68eb      	ldr	r3, [r5, #12]
1a0070d0:	60c3      	str	r3, [r0, #12]
1a0070d2:	2a24      	cmp	r2, #36	; 0x24
1a0070d4:	d011      	beq.n	1a0070fa <_realloc_r+0x2fe>
1a0070d6:	f105 0210 	add.w	r2, r5, #16
1a0070da:	f100 0310 	add.w	r3, r0, #16
1a0070de:	6929      	ldr	r1, [r5, #16]
1a0070e0:	e6ea      	b.n	1a006eb8 <_realloc_r+0xbc>
1a0070e2:	f8cb 1010 	str.w	r1, [fp, #16]
1a0070e6:	68e9      	ldr	r1, [r5, #12]
1a0070e8:	f8cb 1014 	str.w	r1, [fp, #20]
1a0070ec:	2a24      	cmp	r2, #36	; 0x24
1a0070ee:	d00e      	beq.n	1a00710e <_realloc_r+0x312>
1a0070f0:	6929      	ldr	r1, [r5, #16]
1a0070f2:	f10b 0218 	add.w	r2, fp, #24
1a0070f6:	3510      	adds	r5, #16
1a0070f8:	e716      	b.n	1a006f28 <_realloc_r+0x12c>
1a0070fa:	692b      	ldr	r3, [r5, #16]
1a0070fc:	6103      	str	r3, [r0, #16]
1a0070fe:	696b      	ldr	r3, [r5, #20]
1a007100:	6143      	str	r3, [r0, #20]
1a007102:	69a9      	ldr	r1, [r5, #24]
1a007104:	f105 0218 	add.w	r2, r5, #24
1a007108:	f100 0318 	add.w	r3, r0, #24
1a00710c:	e6d4      	b.n	1a006eb8 <_realloc_r+0xbc>
1a00710e:	692a      	ldr	r2, [r5, #16]
1a007110:	f8cb 2018 	str.w	r2, [fp, #24]
1a007114:	696a      	ldr	r2, [r5, #20]
1a007116:	f8cb 201c 	str.w	r2, [fp, #28]
1a00711a:	69a9      	ldr	r1, [r5, #24]
1a00711c:	f10b 0220 	add.w	r2, fp, #32
1a007120:	3518      	adds	r5, #24
1a007122:	e701      	b.n	1a006f28 <_realloc_r+0x12c>
1a007124:	463a      	mov	r2, r7
1a007126:	e776      	b.n	1a007016 <_realloc_r+0x21a>
1a007128:	4629      	mov	r1, r5
1a00712a:	4638      	mov	r0, r7
1a00712c:	f7ff fae8 	bl	1a006700 <memmove>
1a007130:	4b0c      	ldr	r3, [pc, #48]	; (1a007164 <_realloc_r+0x368>)
1a007132:	e775      	b.n	1a007020 <_realloc_r+0x224>
1a007134:	f8cb 1010 	str.w	r1, [fp, #16]
1a007138:	68e9      	ldr	r1, [r5, #12]
1a00713a:	f8cb 1014 	str.w	r1, [fp, #20]
1a00713e:	2a24      	cmp	r2, #36	; 0x24
1a007140:	d004      	beq.n	1a00714c <_realloc_r+0x350>
1a007142:	6929      	ldr	r1, [r5, #16]
1a007144:	f10b 0218 	add.w	r2, fp, #24
1a007148:	3510      	adds	r5, #16
1a00714a:	e764      	b.n	1a007016 <_realloc_r+0x21a>
1a00714c:	692a      	ldr	r2, [r5, #16]
1a00714e:	f8cb 2018 	str.w	r2, [fp, #24]
1a007152:	696a      	ldr	r2, [r5, #20]
1a007154:	f8cb 201c 	str.w	r2, [fp, #28]
1a007158:	69a9      	ldr	r1, [r5, #24]
1a00715a:	f10b 0220 	add.w	r2, fp, #32
1a00715e:	3518      	adds	r5, #24
1a007160:	e759      	b.n	1a007016 <_realloc_r+0x21a>
1a007162:	bf00      	nop
1a007164:	10000478 	.word	0x10000478

1a007168 <frexp>:
1a007168:	ec53 2b10 	vmov	r2, r3, d0
1a00716c:	b570      	push	{r4, r5, r6, lr}
1a00716e:	4e16      	ldr	r6, [pc, #88]	; (1a0071c8 <frexp+0x60>)
1a007170:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
1a007174:	2500      	movs	r5, #0
1a007176:	42b1      	cmp	r1, r6
1a007178:	4604      	mov	r4, r0
1a00717a:	6005      	str	r5, [r0, #0]
1a00717c:	dc21      	bgt.n	1a0071c2 <frexp+0x5a>
1a00717e:	ee10 6a10 	vmov	r6, s0
1a007182:	430e      	orrs	r6, r1
1a007184:	d01d      	beq.n	1a0071c2 <frexp+0x5a>
1a007186:	4e11      	ldr	r6, [pc, #68]	; (1a0071cc <frexp+0x64>)
1a007188:	401e      	ands	r6, r3
1a00718a:	4618      	mov	r0, r3
1a00718c:	b966      	cbnz	r6, 1a0071a8 <frexp+0x40>
1a00718e:	4619      	mov	r1, r3
1a007190:	2200      	movs	r2, #0
1a007192:	ee10 0a10 	vmov	r0, s0
1a007196:	4b0e      	ldr	r3, [pc, #56]	; (1a0071d0 <frexp+0x68>)
1a007198:	f7fa ff18 	bl	1a001fcc <__aeabi_dmul>
1a00719c:	f06f 0535 	mvn.w	r5, #53	; 0x35
1a0071a0:	4602      	mov	r2, r0
1a0071a2:	4608      	mov	r0, r1
1a0071a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a0071a8:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
1a0071ac:	1509      	asrs	r1, r1, #20
1a0071ae:	f420 00e0 	bic.w	r0, r0, #7340032	; 0x700000
1a0071b2:	f2a1 31fe 	subw	r1, r1, #1022	; 0x3fe
1a0071b6:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
1a0071ba:	4429      	add	r1, r5
1a0071bc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
1a0071c0:	6021      	str	r1, [r4, #0]
1a0071c2:	ec43 2b10 	vmov	d0, r2, r3
1a0071c6:	bd70      	pop	{r4, r5, r6, pc}
1a0071c8:	7fefffff 	.word	0x7fefffff
1a0071cc:	7ff00000 	.word	0x7ff00000
1a0071d0:	43500000 	.word	0x43500000

1a0071d4 <__sread>:
1a0071d4:	b510      	push	{r4, lr}
1a0071d6:	460c      	mov	r4, r1
1a0071d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a0071dc:	f7f9 fad6 	bl	1a00078c <_read_r>
1a0071e0:	2800      	cmp	r0, #0
1a0071e2:	db03      	blt.n	1a0071ec <__sread+0x18>
1a0071e4:	6d23      	ldr	r3, [r4, #80]	; 0x50
1a0071e6:	4403      	add	r3, r0
1a0071e8:	6523      	str	r3, [r4, #80]	; 0x50
1a0071ea:	bd10      	pop	{r4, pc}
1a0071ec:	89a3      	ldrh	r3, [r4, #12]
1a0071ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
1a0071f2:	81a3      	strh	r3, [r4, #12]
1a0071f4:	bd10      	pop	{r4, pc}
1a0071f6:	bf00      	nop

1a0071f8 <__swrite>:
1a0071f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0071fc:	4616      	mov	r6, r2
1a0071fe:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
1a007202:	461f      	mov	r7, r3
1a007204:	05d3      	lsls	r3, r2, #23
1a007206:	460c      	mov	r4, r1
1a007208:	4605      	mov	r5, r0
1a00720a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a00720e:	d409      	bmi.n	1a007224 <__swrite+0x2c>
1a007210:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
1a007214:	81a2      	strh	r2, [r4, #12]
1a007216:	463b      	mov	r3, r7
1a007218:	4632      	mov	r2, r6
1a00721a:	4628      	mov	r0, r5
1a00721c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
1a007220:	f7f9 badb 	b.w	1a0007da <_write_r>
1a007224:	2200      	movs	r2, #0
1a007226:	2302      	movs	r3, #2
1a007228:	f7f9 faab 	bl	1a000782 <_lseek_r>
1a00722c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a007230:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1a007234:	e7ec      	b.n	1a007210 <__swrite+0x18>
1a007236:	bf00      	nop

1a007238 <__sseek>:
1a007238:	b510      	push	{r4, lr}
1a00723a:	460c      	mov	r4, r1
1a00723c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a007240:	f7f9 fa9f 	bl	1a000782 <_lseek_r>
1a007244:	89a3      	ldrh	r3, [r4, #12]
1a007246:	1c42      	adds	r2, r0, #1
1a007248:	bf0e      	itee	eq
1a00724a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
1a00724e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
1a007252:	6520      	strne	r0, [r4, #80]	; 0x50
1a007254:	81a3      	strh	r3, [r4, #12]
1a007256:	bd10      	pop	{r4, pc}

1a007258 <__sclose>:
1a007258:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a00725c:	f7f9 ba7e 	b.w	1a00075c <_close_r>

1a007260 <strncpy>:
1a007260:	b470      	push	{r4, r5, r6}
1a007262:	ea40 0401 	orr.w	r4, r0, r1
1a007266:	07a3      	lsls	r3, r4, #30
1a007268:	d127      	bne.n	1a0072ba <strncpy+0x5a>
1a00726a:	2a03      	cmp	r2, #3
1a00726c:	d925      	bls.n	1a0072ba <strncpy+0x5a>
1a00726e:	460b      	mov	r3, r1
1a007270:	4606      	mov	r6, r0
1a007272:	4619      	mov	r1, r3
1a007274:	f853 5b04 	ldr.w	r5, [r3], #4
1a007278:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
1a00727c:	ea24 0405 	bic.w	r4, r4, r5
1a007280:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
1a007284:	d106      	bne.n	1a007294 <strncpy+0x34>
1a007286:	3a04      	subs	r2, #4
1a007288:	2a03      	cmp	r2, #3
1a00728a:	f846 5b04 	str.w	r5, [r6], #4
1a00728e:	4619      	mov	r1, r3
1a007290:	d8ef      	bhi.n	1a007272 <strncpy+0x12>
1a007292:	b182      	cbz	r2, 1a0072b6 <strncpy+0x56>
1a007294:	4633      	mov	r3, r6
1a007296:	780c      	ldrb	r4, [r1, #0]
1a007298:	f803 4b01 	strb.w	r4, [r3], #1
1a00729c:	1e55      	subs	r5, r2, #1
1a00729e:	b174      	cbz	r4, 1a0072be <strncpy+0x5e>
1a0072a0:	4432      	add	r2, r6
1a0072a2:	442e      	add	r6, r5
1a0072a4:	e005      	b.n	1a0072b2 <strncpy+0x52>
1a0072a6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1a0072aa:	1af5      	subs	r5, r6, r3
1a0072ac:	f803 4b01 	strb.w	r4, [r3], #1
1a0072b0:	b12c      	cbz	r4, 1a0072be <strncpy+0x5e>
1a0072b2:	429a      	cmp	r2, r3
1a0072b4:	d1f7      	bne.n	1a0072a6 <strncpy+0x46>
1a0072b6:	bc70      	pop	{r4, r5, r6}
1a0072b8:	4770      	bx	lr
1a0072ba:	4606      	mov	r6, r0
1a0072bc:	e7e9      	b.n	1a007292 <strncpy+0x32>
1a0072be:	2d00      	cmp	r5, #0
1a0072c0:	d0f9      	beq.n	1a0072b6 <strncpy+0x56>
1a0072c2:	441d      	add	r5, r3
1a0072c4:	2200      	movs	r2, #0
1a0072c6:	f803 2b01 	strb.w	r2, [r3], #1
1a0072ca:	42ab      	cmp	r3, r5
1a0072cc:	d1fb      	bne.n	1a0072c6 <strncpy+0x66>
1a0072ce:	bc70      	pop	{r4, r5, r6}
1a0072d0:	4770      	bx	lr
1a0072d2:	bf00      	nop

1a0072d4 <__sprint_r.part.0>:
1a0072d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0072d8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
1a0072da:	049c      	lsls	r4, r3, #18
1a0072dc:	4693      	mov	fp, r2
1a0072de:	d52d      	bpl.n	1a00733c <__sprint_r.part.0+0x68>
1a0072e0:	6893      	ldr	r3, [r2, #8]
1a0072e2:	6812      	ldr	r2, [r2, #0]
1a0072e4:	b343      	cbz	r3, 1a007338 <__sprint_r.part.0+0x64>
1a0072e6:	460e      	mov	r6, r1
1a0072e8:	4607      	mov	r7, r0
1a0072ea:	f102 0908 	add.w	r9, r2, #8
1a0072ee:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
1a0072f2:	ea5f 089a 	movs.w	r8, sl, lsr #2
1a0072f6:	d015      	beq.n	1a007324 <__sprint_r.part.0+0x50>
1a0072f8:	3d04      	subs	r5, #4
1a0072fa:	2400      	movs	r4, #0
1a0072fc:	e001      	b.n	1a007302 <__sprint_r.part.0+0x2e>
1a0072fe:	45a0      	cmp	r8, r4
1a007300:	d00e      	beq.n	1a007320 <__sprint_r.part.0+0x4c>
1a007302:	4632      	mov	r2, r6
1a007304:	f855 1f04 	ldr.w	r1, [r5, #4]!
1a007308:	4638      	mov	r0, r7
1a00730a:	f000 f911 	bl	1a007530 <_fputwc_r>
1a00730e:	1c43      	adds	r3, r0, #1
1a007310:	f104 0401 	add.w	r4, r4, #1
1a007314:	d1f3      	bne.n	1a0072fe <__sprint_r.part.0+0x2a>
1a007316:	2300      	movs	r3, #0
1a007318:	e9cb 3301 	strd	r3, r3, [fp, #4]
1a00731c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a007320:	f8db 3008 	ldr.w	r3, [fp, #8]
1a007324:	f02a 0a03 	bic.w	sl, sl, #3
1a007328:	eba3 030a 	sub.w	r3, r3, sl
1a00732c:	f8cb 3008 	str.w	r3, [fp, #8]
1a007330:	f109 0908 	add.w	r9, r9, #8
1a007334:	2b00      	cmp	r3, #0
1a007336:	d1da      	bne.n	1a0072ee <__sprint_r.part.0+0x1a>
1a007338:	2000      	movs	r0, #0
1a00733a:	e7ec      	b.n	1a007316 <__sprint_r.part.0+0x42>
1a00733c:	f7fe fca0 	bl	1a005c80 <__sfvwrite_r>
1a007340:	2300      	movs	r3, #0
1a007342:	e9cb 3301 	strd	r3, r3, [fp, #4]
1a007346:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00734a:	bf00      	nop

1a00734c <__sprint_r>:
1a00734c:	6893      	ldr	r3, [r2, #8]
1a00734e:	b10b      	cbz	r3, 1a007354 <__sprint_r+0x8>
1a007350:	f7ff bfc0 	b.w	1a0072d4 <__sprint_r.part.0>
1a007354:	b410      	push	{r4}
1a007356:	4618      	mov	r0, r3
1a007358:	6053      	str	r3, [r2, #4]
1a00735a:	f85d 4b04 	ldr.w	r4, [sp], #4
1a00735e:	4770      	bx	lr

1a007360 <_calloc_r>:
1a007360:	b510      	push	{r4, lr}
1a007362:	fb02 f101 	mul.w	r1, r2, r1
1a007366:	f7fe febd 	bl	1a0060e4 <_malloc_r>
1a00736a:	4604      	mov	r4, r0
1a00736c:	b168      	cbz	r0, 1a00738a <_calloc_r+0x2a>
1a00736e:	f850 2c04 	ldr.w	r2, [r0, #-4]
1a007372:	f022 0203 	bic.w	r2, r2, #3
1a007376:	3a04      	subs	r2, #4
1a007378:	2a24      	cmp	r2, #36	; 0x24
1a00737a:	d818      	bhi.n	1a0073ae <_calloc_r+0x4e>
1a00737c:	2a13      	cmp	r2, #19
1a00737e:	d806      	bhi.n	1a00738e <_calloc_r+0x2e>
1a007380:	4602      	mov	r2, r0
1a007382:	2300      	movs	r3, #0
1a007384:	e9c2 3300 	strd	r3, r3, [r2]
1a007388:	6093      	str	r3, [r2, #8]
1a00738a:	4620      	mov	r0, r4
1a00738c:	bd10      	pop	{r4, pc}
1a00738e:	2300      	movs	r3, #0
1a007390:	2a1b      	cmp	r2, #27
1a007392:	e9c0 3300 	strd	r3, r3, [r0]
1a007396:	d90f      	bls.n	1a0073b8 <_calloc_r+0x58>
1a007398:	2a24      	cmp	r2, #36	; 0x24
1a00739a:	e9c0 3302 	strd	r3, r3, [r0, #8]
1a00739e:	bf12      	itee	ne
1a0073a0:	f100 0210 	addne.w	r2, r0, #16
1a0073a4:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
1a0073a8:	f100 0218 	addeq.w	r2, r0, #24
1a0073ac:	e7e9      	b.n	1a007382 <_calloc_r+0x22>
1a0073ae:	2100      	movs	r1, #0
1a0073b0:	f7fb fae6 	bl	1a002980 <memset>
1a0073b4:	4620      	mov	r0, r4
1a0073b6:	bd10      	pop	{r4, pc}
1a0073b8:	f100 0208 	add.w	r2, r0, #8
1a0073bc:	e7e1      	b.n	1a007382 <_calloc_r+0x22>
1a0073be:	bf00      	nop

1a0073c0 <_fclose_r>:
1a0073c0:	b570      	push	{r4, r5, r6, lr}
1a0073c2:	2900      	cmp	r1, #0
1a0073c4:	d04a      	beq.n	1a00745c <_fclose_r+0x9c>
1a0073c6:	4605      	mov	r5, r0
1a0073c8:	460c      	mov	r4, r1
1a0073ca:	b110      	cbz	r0, 1a0073d2 <_fclose_r+0x12>
1a0073cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a0073ce:	2b00      	cmp	r3, #0
1a0073d0:	d047      	beq.n	1a007462 <_fclose_r+0xa2>
1a0073d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a0073d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a0073d8:	07d8      	lsls	r0, r3, #31
1a0073da:	d532      	bpl.n	1a007442 <_fclose_r+0x82>
1a0073dc:	2a00      	cmp	r2, #0
1a0073de:	d03d      	beq.n	1a00745c <_fclose_r+0x9c>
1a0073e0:	4621      	mov	r1, r4
1a0073e2:	4628      	mov	r0, r5
1a0073e4:	f7fe f9ce 	bl	1a005784 <__sflush_r>
1a0073e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a0073ea:	4606      	mov	r6, r0
1a0073ec:	b133      	cbz	r3, 1a0073fc <_fclose_r+0x3c>
1a0073ee:	69e1      	ldr	r1, [r4, #28]
1a0073f0:	4628      	mov	r0, r5
1a0073f2:	4798      	blx	r3
1a0073f4:	2800      	cmp	r0, #0
1a0073f6:	bfb8      	it	lt
1a0073f8:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
1a0073fc:	89a3      	ldrh	r3, [r4, #12]
1a0073fe:	061a      	lsls	r2, r3, #24
1a007400:	d43c      	bmi.n	1a00747c <_fclose_r+0xbc>
1a007402:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a007404:	b141      	cbz	r1, 1a007418 <_fclose_r+0x58>
1a007406:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a00740a:	4299      	cmp	r1, r3
1a00740c:	d002      	beq.n	1a007414 <_fclose_r+0x54>
1a00740e:	4628      	mov	r0, r5
1a007410:	f7fe fb40 	bl	1a005a94 <_free_r>
1a007414:	2300      	movs	r3, #0
1a007416:	6323      	str	r3, [r4, #48]	; 0x30
1a007418:	6c61      	ldr	r1, [r4, #68]	; 0x44
1a00741a:	b121      	cbz	r1, 1a007426 <_fclose_r+0x66>
1a00741c:	4628      	mov	r0, r5
1a00741e:	f7fe fb39 	bl	1a005a94 <_free_r>
1a007422:	2300      	movs	r3, #0
1a007424:	6463      	str	r3, [r4, #68]	; 0x44
1a007426:	f7fe fad9 	bl	1a0059dc <__sfp_lock_acquire>
1a00742a:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a00742c:	2200      	movs	r2, #0
1a00742e:	07db      	lsls	r3, r3, #31
1a007430:	81a2      	strh	r2, [r4, #12]
1a007432:	d528      	bpl.n	1a007486 <_fclose_r+0xc6>
1a007434:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007436:	f7fe fdd7 	bl	1a005fe8 <__retarget_lock_close_recursive>
1a00743a:	f7fe fad5 	bl	1a0059e8 <__sfp_lock_release>
1a00743e:	4630      	mov	r0, r6
1a007440:	bd70      	pop	{r4, r5, r6, pc}
1a007442:	0591      	lsls	r1, r2, #22
1a007444:	d4cc      	bmi.n	1a0073e0 <_fclose_r+0x20>
1a007446:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007448:	f7fe fdd0 	bl	1a005fec <__retarget_lock_acquire_recursive>
1a00744c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a007450:	2b00      	cmp	r3, #0
1a007452:	d1c5      	bne.n	1a0073e0 <_fclose_r+0x20>
1a007454:	6e66      	ldr	r6, [r4, #100]	; 0x64
1a007456:	f016 0601 	ands.w	r6, r6, #1
1a00745a:	d00a      	beq.n	1a007472 <_fclose_r+0xb2>
1a00745c:	2600      	movs	r6, #0
1a00745e:	4630      	mov	r0, r6
1a007460:	bd70      	pop	{r4, r5, r6, pc}
1a007462:	f7fe fa91 	bl	1a005988 <__sinit>
1a007466:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a007468:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a00746c:	07d8      	lsls	r0, r3, #31
1a00746e:	d4b5      	bmi.n	1a0073dc <_fclose_r+0x1c>
1a007470:	e7e7      	b.n	1a007442 <_fclose_r+0x82>
1a007472:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007474:	f7fe fdbc 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a007478:	4630      	mov	r0, r6
1a00747a:	bd70      	pop	{r4, r5, r6, pc}
1a00747c:	6921      	ldr	r1, [r4, #16]
1a00747e:	4628      	mov	r0, r5
1a007480:	f7fe fb08 	bl	1a005a94 <_free_r>
1a007484:	e7bd      	b.n	1a007402 <_fclose_r+0x42>
1a007486:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007488:	f7fe fdb2 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a00748c:	e7d2      	b.n	1a007434 <_fclose_r+0x74>
1a00748e:	bf00      	nop

1a007490 <__fputwc>:
1a007490:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a007494:	b082      	sub	sp, #8
1a007496:	4680      	mov	r8, r0
1a007498:	4689      	mov	r9, r1
1a00749a:	4614      	mov	r4, r2
1a00749c:	f000 f87a 	bl	1a007594 <__locale_mb_cur_max>
1a0074a0:	2801      	cmp	r0, #1
1a0074a2:	d103      	bne.n	1a0074ac <__fputwc+0x1c>
1a0074a4:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
1a0074a8:	2bfe      	cmp	r3, #254	; 0xfe
1a0074aa:	d933      	bls.n	1a007514 <__fputwc+0x84>
1a0074ac:	464a      	mov	r2, r9
1a0074ae:	f104 035c 	add.w	r3, r4, #92	; 0x5c
1a0074b2:	a901      	add	r1, sp, #4
1a0074b4:	4640      	mov	r0, r8
1a0074b6:	f000 f8e1 	bl	1a00767c <_wcrtomb_r>
1a0074ba:	1c42      	adds	r2, r0, #1
1a0074bc:	4606      	mov	r6, r0
1a0074be:	d02f      	beq.n	1a007520 <__fputwc+0x90>
1a0074c0:	b320      	cbz	r0, 1a00750c <__fputwc+0x7c>
1a0074c2:	f89d c004 	ldrb.w	ip, [sp, #4]
1a0074c6:	2500      	movs	r5, #0
1a0074c8:	f10d 0a04 	add.w	sl, sp, #4
1a0074cc:	e009      	b.n	1a0074e2 <__fputwc+0x52>
1a0074ce:	6823      	ldr	r3, [r4, #0]
1a0074d0:	1c5a      	adds	r2, r3, #1
1a0074d2:	6022      	str	r2, [r4, #0]
1a0074d4:	f883 c000 	strb.w	ip, [r3]
1a0074d8:	3501      	adds	r5, #1
1a0074da:	42b5      	cmp	r5, r6
1a0074dc:	d216      	bcs.n	1a00750c <__fputwc+0x7c>
1a0074de:	f815 c00a 	ldrb.w	ip, [r5, sl]
1a0074e2:	68a3      	ldr	r3, [r4, #8]
1a0074e4:	3b01      	subs	r3, #1
1a0074e6:	2b00      	cmp	r3, #0
1a0074e8:	60a3      	str	r3, [r4, #8]
1a0074ea:	daf0      	bge.n	1a0074ce <__fputwc+0x3e>
1a0074ec:	69a7      	ldr	r7, [r4, #24]
1a0074ee:	42bb      	cmp	r3, r7
1a0074f0:	4661      	mov	r1, ip
1a0074f2:	4622      	mov	r2, r4
1a0074f4:	4640      	mov	r0, r8
1a0074f6:	db02      	blt.n	1a0074fe <__fputwc+0x6e>
1a0074f8:	f1bc 0f0a 	cmp.w	ip, #10
1a0074fc:	d1e7      	bne.n	1a0074ce <__fputwc+0x3e>
1a0074fe:	f000 f865 	bl	1a0075cc <__swbuf_r>
1a007502:	1c43      	adds	r3, r0, #1
1a007504:	d1e8      	bne.n	1a0074d8 <__fputwc+0x48>
1a007506:	b002      	add	sp, #8
1a007508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a00750c:	4648      	mov	r0, r9
1a00750e:	b002      	add	sp, #8
1a007510:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a007514:	fa5f fc89 	uxtb.w	ip, r9
1a007518:	4606      	mov	r6, r0
1a00751a:	f88d c004 	strb.w	ip, [sp, #4]
1a00751e:	e7d2      	b.n	1a0074c6 <__fputwc+0x36>
1a007520:	89a3      	ldrh	r3, [r4, #12]
1a007522:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a007526:	81a3      	strh	r3, [r4, #12]
1a007528:	b002      	add	sp, #8
1a00752a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a00752e:	bf00      	nop

1a007530 <_fputwc_r>:
1a007530:	b530      	push	{r4, r5, lr}
1a007532:	4605      	mov	r5, r0
1a007534:	6e50      	ldr	r0, [r2, #100]	; 0x64
1a007536:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1a00753a:	07c0      	lsls	r0, r0, #31
1a00753c:	4614      	mov	r4, r2
1a00753e:	b083      	sub	sp, #12
1a007540:	b29a      	uxth	r2, r3
1a007542:	d401      	bmi.n	1a007548 <_fputwc_r+0x18>
1a007544:	0590      	lsls	r0, r2, #22
1a007546:	d51c      	bpl.n	1a007582 <_fputwc_r+0x52>
1a007548:	0490      	lsls	r0, r2, #18
1a00754a:	d406      	bmi.n	1a00755a <_fputwc_r+0x2a>
1a00754c:	6e62      	ldr	r2, [r4, #100]	; 0x64
1a00754e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
1a007552:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
1a007556:	81a3      	strh	r3, [r4, #12]
1a007558:	6662      	str	r2, [r4, #100]	; 0x64
1a00755a:	4628      	mov	r0, r5
1a00755c:	4622      	mov	r2, r4
1a00755e:	f7ff ff97 	bl	1a007490 <__fputwc>
1a007562:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a007564:	07da      	lsls	r2, r3, #31
1a007566:	4605      	mov	r5, r0
1a007568:	d402      	bmi.n	1a007570 <_fputwc_r+0x40>
1a00756a:	89a3      	ldrh	r3, [r4, #12]
1a00756c:	059b      	lsls	r3, r3, #22
1a00756e:	d502      	bpl.n	1a007576 <_fputwc_r+0x46>
1a007570:	4628      	mov	r0, r5
1a007572:	b003      	add	sp, #12
1a007574:	bd30      	pop	{r4, r5, pc}
1a007576:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007578:	f7fe fd3a 	bl	1a005ff0 <__retarget_lock_release_recursive>
1a00757c:	4628      	mov	r0, r5
1a00757e:	b003      	add	sp, #12
1a007580:	bd30      	pop	{r4, r5, pc}
1a007582:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007584:	9101      	str	r1, [sp, #4]
1a007586:	f7fe fd31 	bl	1a005fec <__retarget_lock_acquire_recursive>
1a00758a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a00758e:	9901      	ldr	r1, [sp, #4]
1a007590:	b29a      	uxth	r2, r3
1a007592:	e7d9      	b.n	1a007548 <_fputwc_r+0x18>

1a007594 <__locale_mb_cur_max>:
1a007594:	4b01      	ldr	r3, [pc, #4]	; (1a00759c <__locale_mb_cur_max+0x8>)
1a007596:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
1a00759a:	4770      	bx	lr
1a00759c:	10000888 	.word	0x10000888

1a0075a0 <__ascii_mbtowc>:
1a0075a0:	b082      	sub	sp, #8
1a0075a2:	b149      	cbz	r1, 1a0075b8 <__ascii_mbtowc+0x18>
1a0075a4:	b15a      	cbz	r2, 1a0075be <__ascii_mbtowc+0x1e>
1a0075a6:	b16b      	cbz	r3, 1a0075c4 <__ascii_mbtowc+0x24>
1a0075a8:	7813      	ldrb	r3, [r2, #0]
1a0075aa:	600b      	str	r3, [r1, #0]
1a0075ac:	7812      	ldrb	r2, [r2, #0]
1a0075ae:	1c10      	adds	r0, r2, #0
1a0075b0:	bf18      	it	ne
1a0075b2:	2001      	movne	r0, #1
1a0075b4:	b002      	add	sp, #8
1a0075b6:	4770      	bx	lr
1a0075b8:	a901      	add	r1, sp, #4
1a0075ba:	2a00      	cmp	r2, #0
1a0075bc:	d1f3      	bne.n	1a0075a6 <__ascii_mbtowc+0x6>
1a0075be:	4610      	mov	r0, r2
1a0075c0:	b002      	add	sp, #8
1a0075c2:	4770      	bx	lr
1a0075c4:	f06f 0001 	mvn.w	r0, #1
1a0075c8:	e7f4      	b.n	1a0075b4 <__ascii_mbtowc+0x14>
1a0075ca:	bf00      	nop

1a0075cc <__swbuf_r>:
1a0075cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0075ce:	460d      	mov	r5, r1
1a0075d0:	4614      	mov	r4, r2
1a0075d2:	4606      	mov	r6, r0
1a0075d4:	b110      	cbz	r0, 1a0075dc <__swbuf_r+0x10>
1a0075d6:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a0075d8:	2b00      	cmp	r3, #0
1a0075da:	d043      	beq.n	1a007664 <__swbuf_r+0x98>
1a0075dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a0075e0:	69a3      	ldr	r3, [r4, #24]
1a0075e2:	60a3      	str	r3, [r4, #8]
1a0075e4:	b291      	uxth	r1, r2
1a0075e6:	0708      	lsls	r0, r1, #28
1a0075e8:	d51b      	bpl.n	1a007622 <__swbuf_r+0x56>
1a0075ea:	6923      	ldr	r3, [r4, #16]
1a0075ec:	b1cb      	cbz	r3, 1a007622 <__swbuf_r+0x56>
1a0075ee:	b2ed      	uxtb	r5, r5
1a0075f0:	0489      	lsls	r1, r1, #18
1a0075f2:	462f      	mov	r7, r5
1a0075f4:	d522      	bpl.n	1a00763c <__swbuf_r+0x70>
1a0075f6:	6822      	ldr	r2, [r4, #0]
1a0075f8:	6961      	ldr	r1, [r4, #20]
1a0075fa:	1ad3      	subs	r3, r2, r3
1a0075fc:	4299      	cmp	r1, r3
1a0075fe:	dd29      	ble.n	1a007654 <__swbuf_r+0x88>
1a007600:	3301      	adds	r3, #1
1a007602:	68a1      	ldr	r1, [r4, #8]
1a007604:	1c50      	adds	r0, r2, #1
1a007606:	3901      	subs	r1, #1
1a007608:	60a1      	str	r1, [r4, #8]
1a00760a:	6020      	str	r0, [r4, #0]
1a00760c:	7015      	strb	r5, [r2, #0]
1a00760e:	6962      	ldr	r2, [r4, #20]
1a007610:	429a      	cmp	r2, r3
1a007612:	d02a      	beq.n	1a00766a <__swbuf_r+0x9e>
1a007614:	89a3      	ldrh	r3, [r4, #12]
1a007616:	07db      	lsls	r3, r3, #31
1a007618:	d501      	bpl.n	1a00761e <__swbuf_r+0x52>
1a00761a:	2d0a      	cmp	r5, #10
1a00761c:	d025      	beq.n	1a00766a <__swbuf_r+0x9e>
1a00761e:	4638      	mov	r0, r7
1a007620:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a007622:	4621      	mov	r1, r4
1a007624:	4630      	mov	r0, r6
1a007626:	f7fd f887 	bl	1a004738 <__swsetup_r>
1a00762a:	bb20      	cbnz	r0, 1a007676 <__swbuf_r+0xaa>
1a00762c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a007630:	6923      	ldr	r3, [r4, #16]
1a007632:	b291      	uxth	r1, r2
1a007634:	b2ed      	uxtb	r5, r5
1a007636:	0489      	lsls	r1, r1, #18
1a007638:	462f      	mov	r7, r5
1a00763a:	d4dc      	bmi.n	1a0075f6 <__swbuf_r+0x2a>
1a00763c:	6e61      	ldr	r1, [r4, #100]	; 0x64
1a00763e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
1a007642:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
1a007646:	81a2      	strh	r2, [r4, #12]
1a007648:	6822      	ldr	r2, [r4, #0]
1a00764a:	6661      	str	r1, [r4, #100]	; 0x64
1a00764c:	6961      	ldr	r1, [r4, #20]
1a00764e:	1ad3      	subs	r3, r2, r3
1a007650:	4299      	cmp	r1, r3
1a007652:	dcd5      	bgt.n	1a007600 <__swbuf_r+0x34>
1a007654:	4621      	mov	r1, r4
1a007656:	4630      	mov	r0, r6
1a007658:	f7fe f93a 	bl	1a0058d0 <_fflush_r>
1a00765c:	b958      	cbnz	r0, 1a007676 <__swbuf_r+0xaa>
1a00765e:	6822      	ldr	r2, [r4, #0]
1a007660:	2301      	movs	r3, #1
1a007662:	e7ce      	b.n	1a007602 <__swbuf_r+0x36>
1a007664:	f7fe f990 	bl	1a005988 <__sinit>
1a007668:	e7b8      	b.n	1a0075dc <__swbuf_r+0x10>
1a00766a:	4621      	mov	r1, r4
1a00766c:	4630      	mov	r0, r6
1a00766e:	f7fe f92f 	bl	1a0058d0 <_fflush_r>
1a007672:	2800      	cmp	r0, #0
1a007674:	d0d3      	beq.n	1a00761e <__swbuf_r+0x52>
1a007676:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
1a00767a:	e7d0      	b.n	1a00761e <__swbuf_r+0x52>

1a00767c <_wcrtomb_r>:
1a00767c:	b5f0      	push	{r4, r5, r6, r7, lr}
1a00767e:	4c0b      	ldr	r4, [pc, #44]	; (1a0076ac <_wcrtomb_r+0x30>)
1a007680:	b085      	sub	sp, #20
1a007682:	4606      	mov	r6, r0
1a007684:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
1a007688:	461f      	mov	r7, r3
1a00768a:	b121      	cbz	r1, 1a007696 <_wcrtomb_r+0x1a>
1a00768c:	47a0      	blx	r4
1a00768e:	1c43      	adds	r3, r0, #1
1a007690:	d006      	beq.n	1a0076a0 <_wcrtomb_r+0x24>
1a007692:	b005      	add	sp, #20
1a007694:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a007696:	460a      	mov	r2, r1
1a007698:	a901      	add	r1, sp, #4
1a00769a:	47a0      	blx	r4
1a00769c:	1c43      	adds	r3, r0, #1
1a00769e:	d1f8      	bne.n	1a007692 <_wcrtomb_r+0x16>
1a0076a0:	2200      	movs	r2, #0
1a0076a2:	238a      	movs	r3, #138	; 0x8a
1a0076a4:	603a      	str	r2, [r7, #0]
1a0076a6:	6033      	str	r3, [r6, #0]
1a0076a8:	b005      	add	sp, #20
1a0076aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a0076ac:	10000888 	.word	0x10000888

1a0076b0 <__ascii_wctomb>:
1a0076b0:	b149      	cbz	r1, 1a0076c6 <__ascii_wctomb+0x16>
1a0076b2:	2aff      	cmp	r2, #255	; 0xff
1a0076b4:	d802      	bhi.n	1a0076bc <__ascii_wctomb+0xc>
1a0076b6:	700a      	strb	r2, [r1, #0]
1a0076b8:	2001      	movs	r0, #1
1a0076ba:	4770      	bx	lr
1a0076bc:	238a      	movs	r3, #138	; 0x8a
1a0076be:	6003      	str	r3, [r0, #0]
1a0076c0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0076c4:	4770      	bx	lr
1a0076c6:	4608      	mov	r0, r1
1a0076c8:	4770      	bx	lr
1a0076ca:	bf00      	nop

1a0076cc <__aeabi_dcmpun>:
1a0076cc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a0076d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a0076d4:	d102      	bne.n	1a0076dc <__aeabi_dcmpun+0x10>
1a0076d6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a0076da:	d10a      	bne.n	1a0076f2 <__aeabi_dcmpun+0x26>
1a0076dc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a0076e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a0076e4:	d102      	bne.n	1a0076ec <__aeabi_dcmpun+0x20>
1a0076e6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a0076ea:	d102      	bne.n	1a0076f2 <__aeabi_dcmpun+0x26>
1a0076ec:	f04f 0000 	mov.w	r0, #0
1a0076f0:	4770      	bx	lr
1a0076f2:	f04f 0001 	mov.w	r0, #1
1a0076f6:	4770      	bx	lr

1a0076f8 <__aeabi_d2iz>:
1a0076f8:	ea4f 0241 	mov.w	r2, r1, lsl #1
1a0076fc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1a007700:	d215      	bcs.n	1a00772e <__aeabi_d2iz+0x36>
1a007702:	d511      	bpl.n	1a007728 <__aeabi_d2iz+0x30>
1a007704:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
1a007708:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1a00770c:	d912      	bls.n	1a007734 <__aeabi_d2iz+0x3c>
1a00770e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1a007712:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1a007716:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1a00771a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a00771e:	fa23 f002 	lsr.w	r0, r3, r2
1a007722:	bf18      	it	ne
1a007724:	4240      	negne	r0, r0
1a007726:	4770      	bx	lr
1a007728:	f04f 0000 	mov.w	r0, #0
1a00772c:	4770      	bx	lr
1a00772e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1a007732:	d105      	bne.n	1a007740 <__aeabi_d2iz+0x48>
1a007734:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
1a007738:	bf08      	it	eq
1a00773a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
1a00773e:	4770      	bx	lr
1a007740:	f04f 0000 	mov.w	r0, #0
1a007744:	4770      	bx	lr
1a007746:	bf00      	nop
1a007748:	6f6c6176 	.word	0x6f6c6176
1a00774c:	6e612072 	.word	0x6e612072
1a007750:	676f6c61 	.word	0x676f6c61
1a007754:	206f6369 	.word	0x206f6369
1a007758:	3a200a0d 	.word	0x3a200a0d
1a00775c:	00000020 	.word	0x00000020
1a007760:	ff006925 	.word	0xff006925

1a007764 <ExtRateIn>:
1a007764:	00000000                                ....

1a007768 <GpioButtons>:
1a007768:	08000400 09010900                       ........

1a007770 <GpioLeds>:
1a007770:	01050005 0e000205 0c010b01              ............

1a00777c <GpioPorts>:
1a00777c:	03030003 0f050403 05031005 07030603     ................
1a00778c:	ffff0802                                ....

1a007790 <OscRateIn>:
1a007790:	00b71b00                                ....

1a007794 <InitClkStates>:
1a007794:	01010f01                                ....

1a007798 <pinmuxing>:
1a007798:	00440002 00440102 00440202 00400a02     ..D...D...D...@.
1a0077a8:	00400b02 00400c02 00500001 00500101     ..@...@...P...P.
1a0077b8:	00500201 00500601 00500106 00500406     ..P...P...P...P.
1a0077c8:	00500506 00540706 00540806 00500906     ..P...T...T...P.
1a0077d8:	00500a06 00500b06 00500c06 00f0040f     ..P...P...P.....
1a0077e8:	00d50301 00d50401 00160107 00560207     ..............V.
1a0077f8:	00520302 00520402 00520509 00570609     ..R...R...R...W.
1a007808:	00570206                                ..W.

1a00780c <UART_BClock>:
1a00780c:	01a201c2 01620182                       ......b.

1a007814 <UART_PClock>:
1a007814:	00820081 00a200a1 08040201 0f0f0f03     ................
1a007824:	ffff00ff                                ....

1a007828 <periph_to_base>:
1a007828:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a007838:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a007848:	000100e0 01000100 01200003 00060120     .......... . ...
1a007858:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a007868:	01820013 00120182 01a201a2 01c20011     ................
1a007878:	001001c2 01e201e2 0202000f 000e0202     ................
1a007888:	02220222 0223000d 001c0223              "."...#.#...

1a007894 <InitClkStates>:
1a007894:	00010100 00010909 0001090a 01010701     ................
1a0078a4:	00010902 00010906 0101090c 0001090d     ................
1a0078b4:	0001090e 0001090f 00010910 00010911     ................
1a0078c4:	00010912 00010913 00011114 00011119     ................
1a0078d4:	0001111a 0001111b                       ........

1a0078dc <gpioPinsInit>:
1a0078dc:	02000104 00050701 05010d03 04080100     ................
1a0078ec:	02020002 02000304 00000403 04070002     ................
1a0078fc:	030c0300 09050402 05040103 04030208     ................
1a00790c:	04020305 06040504 0802000c 03000b06     ................
1a00791c:	00090607 07060503 060f0504 03030004     ................
1a00792c:	02000404 00050404 06040502 04060200     ................
1a00793c:	0c050408 05040a04 0003010e 14010a00     ................
1a00794c:	010f0000 0d000012 00001101 0010010c     ................
1a00795c:	07070300 000f0300 01000001 00000000     ................
1a00796c:	000a0600 08060603 06100504 04030005     ................
1a00797c:	03000106 04090400 04010d05 010b0000     ................
1a00798c:	0200000f 00000001 00010104 02010800     ................
1a00799c:	01090000 09010006 05040002 04010200     ................
1a0079ac:	02020105 02020504 0e00000a 01000b02     ................
1a0079bc:	000c020b ffff0c01 00464e49 00666e69     ........INF.inf.
1a0079cc:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
1a0079dc:	42413938 46454443 00000000 33323130     89ABCDEF....0123
1a0079ec:	37363534 62613938 66656463 00000000     456789abcdef....
1a0079fc:	6c756e28 0000296c ffff0030              (null)..0...

1a007a08 <blanks.8693>:
1a007a08:	20202020 20202020 20202020 20202020                     

1a007a18 <zeroes.8694>:
1a007a18:	30303030 30303030 30303030 30303030     0000000000000000
1a007a28:	004e614e 69666e49 7974696e ffffff00     NaN.Infinity....

1a007a38 <__mprec_bigtens>:
1a007a38:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1a007a48:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1a007a58:	7f73bf3c 75154fdd                       <.s..O.u

1a007a60 <__mprec_tens>:
1a007a60:	00000000 3ff00000 00000000 40240000     .......?......$@
1a007a70:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1a007a80:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1a007a90:	00000000 412e8480 00000000 416312d0     .......A......cA
1a007aa0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1a007ab0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1a007ac0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1a007ad0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1a007ae0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1a007af0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1a007b00:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1a007b10:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1a007b20:	79d99db4 44ea7843                       ...yCx.D

1a007b28 <p05.7442>:
1a007b28:	00000005 00000019 0000007d 00000043     ........}...C...
1a007b38:	49534f50 ffff0058 0000002e              POSIX.......

1a007b44 <_ctype_>:
1a007b44:	20202000 20202020 28282020 20282828     .         ((((( 
1a007b54:	20202020 20202020 20202020 20202020                     
1a007b64:	10108820 10101010 10101010 10101010      ...............
1a007b74:	04040410 04040404 10040404 10101010     ................
1a007b84:	41411010 41414141 01010101 01010101     ..AAAAAA........
1a007b94:	01010101 01010101 01010101 10101010     ................
1a007ba4:	42421010 42424242 02020202 02020202     ..BBBBBB........
1a007bb4:	02020202 02020202 02020202 10101010     ................
1a007bc4:	00000020 00000000 00000000 00000000      ...............
	...
1a007c44:	ffffff00                                ....
